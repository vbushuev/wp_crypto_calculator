! function(a, b) {
    "object" == typeof module && "object" == typeof module.exports ? module.exports =
        a.document ? b(a, !0) : function(a) {
            if (!a.document) throw new Error(
                "jQuery requires a window with a document");
            return b(a)
        } : b(a)
}("undefined" != typeof window ? window : this, function(a, b) {
    var c = [],
        d = c.slice,
        e = c.concat,
        f = c.push,
        g = c.indexOf,
        h = {},
        i = h.toString,
        j = h.hasOwnProperty,
        k = {},
        l = "1.11.3",
        m = function(a, b) {
            return new m.fn.init(a, b)
        },
        n = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,
        o = /^-ms-/,
        p = /-([\da-z])/gi,
        q = function(a, b) {
            return b.toUpperCase()
        };
    m.fn = m.prototype = {
        jquery: l,
        constructor: m,
        selector: "",
        length: 0,
        toArray: function() {
            return d.call(this)
        },
        get: function(a) {
            return null != a ? 0 > a ? this[a + this.length] : this[
                a] : d.call(this)
        },
        pushStack: function(a) {
            var b = m.merge(this.constructor(), a);
            return b.prevObject = this, b.context = this.context, b
        },
        each: function(a, b) {
            return m.each(this, a, b)
        },
        map: function(a) {
            return this.pushStack(m.map(this, function(b, c) {
                return a.call(b, c, b)
            }))
        },
        slice: function() {
            return this.pushStack(d.apply(this, arguments))
        },
        first: function() {
            return this.eq(0)
        },
        last: function() {
            return this.eq(-1)
        },
        eq: function(a) {
            var b = this.length,
                c = +a + (0 > a ? b : 0);
            return this.pushStack(c >= 0 && b > c ? [this[c]] : [])
        },
        end: function() {
            return this.prevObject || this.constructor(null)
        },
        push: f,
        sort: c.sort,
        splice: c.splice
    }, m.extend = m.fn.extend = function() {
        var a, b, c, d, e, f, g = arguments[0] || {},
            h = 1,
            i = arguments.length,
            j = !1;
        for ("boolean" == typeof g && (j = g, g = arguments[h] || {}, h++),
            "object" == typeof g || m.isFunction(g) || (g = {}), h ===
            i && (g = this, h--); i > h; h++)
            if (null != (e = arguments[h]))
                for (d in e) a = g[d], c = e[d], g !== c && (j && c &&
                    (m.isPlainObject(c) || (b = m.isArray(c))) ? (b ?
                        (b = !1, f = a && m.isArray(a) ? a : []) :
                        f = a && m.isPlainObject(a) ? a : {}, g[d] =
                        m.extend(j, f, c)) : void 0 !== c && (g[d] =
                        c));
        return g
    }, m.extend({
        expando: "jQuery" + (l + Math.random()).replace(/\D/g, ""),
        isReady: !0,
        error: function(a) {
            throw new Error(a)
        },
        noop: function() {},
        isFunction: function(a) {
            return "function" === m.type(a)
        },
        isArray: Array.isArray || function(a) {
            return "array" === m.type(a)
        },
        isWindow: function(a) {
            return null != a && a == a.window
        },
        isNumeric: function(a) {
            return !m.isArray(a) && a - parseFloat(a) + 1 >= 0
        },
        isEmptyObject: function(a) {
            var b;
            for (b in a) return !1;
            return !0
        },
        isPlainObject: function(a) {
            var b;
            if (!a || "object" !== m.type(a) || a.nodeType || m
                .isWindow(a)) return !1;
            try {
                if (a.constructor && !j.call(a, "constructor") &&
                    !j.call(a.constructor.prototype,
                        "isPrototypeOf")) return !1
            } catch (c) {
                return !1
            }
            if (k.ownLast)
                for (b in a) return j.call(a, b);
            for (b in a);
            return void 0 === b || j.call(a, b)
        },
        type: function(a) {
            return null == a ? a + "" : "object" == typeof a ||
                "function" == typeof a ? h[i.call(a)] ||
                "object" : typeof a
        },
        globalEval: function(b) {
            b && m.trim(b) && (a.execScript || function(b) {
                a.eval.call(a, b)
            })(b)
        },
        camelCase: function(a) {
            return a.replace(o, "ms-").replace(p, q)
        },
        nodeName: function(a, b) {
            return a.nodeName && a.nodeName.toLowerCase() === b
                .toLowerCase()
        },
        each: function(a, b, c) {
            var d, e = 0,
                f = a.length,
                g = r(a);
            if (c) {
                if (g) {
                    for (; f > e; e++)
                        if (d = b.apply(a[e], c), d === !1)
                            break
                } else
                    for (e in a)
                        if (d = b.apply(a[e], c), d === !1)
                            break
            } else if (g) {
                for (; f > e; e++)
                    if (d = b.call(a[e], e, a[e]), d === !1)
                        break
            } else
                for (e in a)
                    if (d = b.call(a[e], e, a[e]), d === !1)
                        break; return a
        },
        trim: function(a) {
            return null == a ? "" : (a + "").replace(n, "")
        },
        makeArray: function(a, b) {
            var c = b || [];
            return null != a && (r(Object(a)) ? m.merge(c,
                "string" == typeof a ? [a] : a) : f.call(
                c, a)), c
        },
        inArray: function(a, b, c) {
            var d;
            if (b) {
                if (g) return g.call(b, a, c);
                for (d = b.length, c = c ? 0 > c ? Math.max(0,
                        d + c) : c : 0; d > c; c++)
                    if (c in b && b[c] === a) return c
            }
            return -1
        },
        merge: function(a, b) {
            var c = +b.length,
                d = 0,
                e = a.length;
            while (c > d) a[e++] = b[d++];
            if (c !== c)
                while (void 0 !== b[d]) a[e++] = b[d++];
            return a.length = e, a
        },
        grep: function(a, b, c) {
            for (var d, e = [], f = 0, g = a.length, h = !c; g >
                f; f++) d = !b(a[f], f), d !== h && e.push(a[f]);
            return e
        },
        map: function(a, b, c) {
            var d, f = 0,
                g = a.length,
                h = r(a),
                i = [];
            if (h)
                for (; g > f; f++) d = b(a[f], f, c), null != d &&
                    i.push(d);
            else
                for (f in a) d = b(a[f], f, c), null != d && i.push(
                    d);
            return e.apply([], i)
        },
        guid: 1,
        proxy: function(a, b) {
            var c, e, f;
            return "string" == typeof b && (f = a[b], b = a, a =
                    f), m.isFunction(a) ? (c = d.call(arguments,
                    2), e = function() {
                    return a.apply(b || this, c.concat(d.call(
                        arguments)))
                }, e.guid = a.guid = a.guid || m.guid++, e) :
                void 0
        },
        now: function() {
            return +new Date
        },
        support: k
    }), m.each(
        "Boolean Number String Function Array Date RegExp Object Error"
        .split(" "),
        function(a, b) {
            h["[object " + b + "]"] = b.toLowerCase()
        });

    function r(a) {
        var b = "length" in a && a.length,
            c = m.type(a);
        return "function" === c || m.isWindow(a) ? !1 : 1 === a.nodeType &&
            b ? !0 : "array" === c || 0 === b || "number" == typeof b && b >
            0 && b - 1 in a
    }
    var s = function(a) {
        var b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u =
            "sizzle" + 1 * new Date,
            v = a.document,
            w = 0,
            x = 0,
            y = ha(),
            z = ha(),
            A = ha(),
            B = function(a, b) {
                return a === b && (l = !0), 0
            },
            C = 1 << 31,
            D = {}.hasOwnProperty,
            E = [],
            F = E.pop,
            G = E.push,
            H = E.push,
            I = E.slice,
            J = function(a, b) {
                for (var c = 0, d = a.length; d > c; c++)
                    if (a[c] === b) return c;
                return -1
            },
            K =
            "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",
            L = "[\\x20\\t\\r\\n\\f]",
            M = "(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",
            N = M.replace("w", "w#"),
            O = "\\[" + L + "*(" + M + ")(?:" + L + "*([*^$|!~]?=)" + L +
            "*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" +
            N + "))|)" + L + "*\\]",
            P = ":(" + M +
            ")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|" +
            O + ")*)|.*)\\)|)",
            Q = new RegExp(L + "+", "g"),
            R = new RegExp("^" + L + "+|((?:^|[^\\\\])(?:\\\\.)*)" + L +
                "+$", "g"),
            S = new RegExp("^" + L + "*," + L + "*"),
            T = new RegExp("^" + L + "*([>+~]|" + L + ")" + L + "*"),
            U = new RegExp("=" + L + "*([^\\]'\"]*?)" + L + "*\\]", "g"),
            V = new RegExp(P),
            W = new RegExp("^" + N + "$"),
            X = {
                ID: new RegExp("^#(" + M + ")"),
                CLASS: new RegExp("^\\.(" + M + ")"),
                TAG: new RegExp("^(" + M.replace("w", "w*") + ")"),
                ATTR: new RegExp("^" + O),
                PSEUDO: new RegExp("^" + P),
                CHILD: new RegExp(
                    "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" +
                    L + "*(even|odd|(([+-]|)(\\d*)n|)" + L +
                    "*(?:([+-]|)" + L + "*(\\d+)|))" + L + "*\\)|)",
                    "i"),
                bool: new RegExp("^(?:" + K + ")$", "i"),
                needsContext: new RegExp("^" + L +
                    "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" +
                    L + "*((?:-\\d)?\\d*)" + L + "*\\)|)(?=[^-]|$)",
                    "i")
            },
            Y = /^(?:input|select|textarea|button)$/i,
            Z = /^h\d$/i,
            $ = /^[^{]+\{\s*\[native \w/,
            _ = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,
            aa = /[+~]/,
            ba = /'|\\/g,
            ca = new RegExp("\\\\([\\da-f]{1,6}" + L + "?|(" + L +
                ")|.)", "ig"),
            da = function(a, b, c) {
                var d = "0x" + b - 65536;
                return d !== d || c ? b : 0 > d ? String.fromCharCode(d +
                    65536) : String.fromCharCode(d >> 10 | 55296,
                    1023 & d | 56320)
            },
            ea = function() {
                m()
            };
        try {
            H.apply(E = I.call(v.childNodes), v.childNodes), E[v.childNodes
                .length].nodeType
        } catch (fa) {
            H = {
                apply: E.length ? function(a, b) {
                    G.apply(a, I.call(b))
                } : function(a, b) {
                    var c = a.length,
                        d = 0;
                    while (a[c++] = b[d++]);
                    a.length = c - 1
                }
            }
        }

        function ga(a, b, d, e) {
            var f, h, j, k, l, o, r, s, w, x;
            if ((b ? b.ownerDocument || b : v) !== n && m(b), b = b ||
                n, d = d || [], k = b.nodeType, "string" != typeof a ||
                !a || 1 !== k && 9 !== k && 11 !== k) return d;
            if (!e && p) {
                if (11 !== k && (f = _.exec(a)))
                    if (j = f[1]) {
                        if (9 === k) {
                            if (h = b.getElementById(j), !h || !h.parentNode)
                                return d;
                            if (h.id === j) return d.push(h), d
                        } else if (b.ownerDocument && (h = b.ownerDocument
                                .getElementById(j)) && t(b, h) && h.id ===
                            j) return d.push(h), d
                    } else {
                        if (f[2]) return H.apply(d, b.getElementsByTagName(
                            a)), d;
                        if ((j = f[3]) && c.getElementsByClassName)
                            return H.apply(d, b.getElementsByClassName(
                                j)), d
                    }
                if (c.qsa && (!q || !q.test(a))) {
                    if (s = r = u, w = b, x = 1 !== k && a, 1 === k &&
                        "object" !== b.nodeName.toLowerCase()) {
                        o = g(a), (r = b.getAttribute("id")) ? s = r.replace(
                                ba, "\\$&") : b.setAttribute("id", s),
                            s = "[id='" + s + "'] ", l = o.length;
                        while (l--) o[l] = s + ra(o[l]);
                        w = aa.test(a) && pa(b.parentNode) || b, x = o.join(
                            ",")
                    }
                    if (x) try {
                        return H.apply(d, w.querySelectorAll(x)), d
                    } catch (y) {} finally {
                        r || b.removeAttribute("id")
                    }
                }
            }
            return i(a.replace(R, "$1"), b, d, e)
        }

        function ha() {
            var a = [];

            function b(c, e) {
                return a.push(c + " ") > d.cacheLength && delete b[a.shift()],
                    b[c + " "] = e
            }
            return b
        }

        function ia(a) {
            return a[u] = !0, a
        }

        function ja(a) {
            var b = n.createElement("div");
            try {
                return !!a(b)
            } catch (c) {
                return !1
            } finally {
                b.parentNode && b.parentNode.removeChild(b), b = null
            }
        }

        function ka(a, b) {
            var c = a.split("|"),
                e = a.length;
            while (e--) d.attrHandle[c[e]] = b
        }

        function la(a, b) {
            var c = b && a,
                d = c && 1 === a.nodeType && 1 === b.nodeType && (~b.sourceIndex ||
                    C) - (~a.sourceIndex || C);
            if (d) return d;
            if (c)
                while (c = c.nextSibling)
                    if (c === b) return -1;
            return a ? 1 : -1
        }

        function ma(a) {
            return function(b) {
                var c = b.nodeName.toLowerCase();
                return "input" === c && b.type === a
            }
        }

        function na(a) {
            return function(b) {
                var c = b.nodeName.toLowerCase();
                return ("input" === c || "button" === c) && b.type ===
                    a
            }
        }

        function oa(a) {
            return ia(function(b) {
                return b = +b, ia(function(c, d) {
                    var e, f = a([], c.length, b),
                        g = f.length;
                    while (g--) c[e = f[g]] && (c[e] = !
                        (d[e] = c[e]))
                })
            })
        }

        function pa(a) {
            return a && "undefined" != typeof a.getElementsByTagName &&
                a
        }
        c = ga.support = {}, f = ga.isXML = function(a) {
            var b = a && (a.ownerDocument || a).documentElement;
            return b ? "HTML" !== b.nodeName : !1
        }, m = ga.setDocument = function(a) {
            var b, e, g = a ? a.ownerDocument || a : v;
            return g !== n && 9 === g.nodeType && g.documentElement ?
                (n = g, o = g.documentElement, e = g.defaultView, e &&
                    e !== e.top && (e.addEventListener ? e.addEventListener(
                        "unload", ea, !1) : e.attachEvent && e.attachEvent(
                        "onunload", ea)), p = !f(g), c.attributes =
                    ja(function(a) {
                        return a.className = "i", !a.getAttribute(
                            "className")
                    }), c.getElementsByTagName = ja(function(a) {
                        return a.appendChild(g.createComment("")), !
                            a.getElementsByTagName("*").length
                    }), c.getElementsByClassName = $.test(g.getElementsByClassName),
                    c.getById = ja(function(a) {
                        return o.appendChild(a).id = u, !g.getElementsByName ||
                            !g.getElementsByName(u).length
                    }), c.getById ? (d.find.ID = function(a, b) {
                        if ("undefined" != typeof b.getElementById &&
                            p) {
                            var c = b.getElementById(a);
                            return c && c.parentNode ? [c] : []
                        }
                    }, d.filter.ID = function(a) {
                        var b = a.replace(ca, da);
                        return function(a) {
                            return a.getAttribute("id") ===
                                b
                        }
                    }) : (delete d.find.ID, d.filter.ID = function(
                        a) {
                        var b = a.replace(ca, da);
                        return function(a) {
                            var c = "undefined" != typeof a
                                .getAttributeNode && a.getAttributeNode(
                                    "id");
                            return c && c.value === b
                        }
                    }), d.find.TAG = c.getElementsByTagName ?
                    function(a, b) {
                        return "undefined" != typeof b.getElementsByTagName ?
                            b.getElementsByTagName(a) : c.qsa ? b.querySelectorAll(
                                a) : void 0
                    } : function(a, b) {
                        var c, d = [],
                            e = 0,
                            f = b.getElementsByTagName(a);
                        if ("*" === a) {
                            while (c = f[e++]) 1 === c.nodeType &&
                                d.push(c);
                            return d
                        }
                        return f
                    }, d.find.CLASS = c.getElementsByClassName &&
                    function(a, b) {
                        return p ? b.getElementsByClassName(a) :
                            void 0
                    }, r = [], q = [], (c.qsa = $.test(g.querySelectorAll)) &&
                    (ja(function(a) {
                        o.appendChild(a).innerHTML =
                            "<a id='" + u +
                            "'></a><select id='" + u +
                            "-\f]' msallowcapture=''><option selected=''></option></select>",
                            a.querySelectorAll(
                                "[msallowcapture^='']").length &&
                            q.push("[*^$]=" + L +
                                "*(?:''|\"\")"), a.querySelectorAll(
                                "[selected]").length || q.push(
                                "\\[" + L + "*(?:value|" +
                                K + ")"), a.querySelectorAll(
                                "[id~=" + u + "-]").length ||
                            q.push("~="), a.querySelectorAll(
                                ":checked").length || q.push(
                                ":checked"), a.querySelectorAll(
                                "a#" + u + "+*").length ||
                            q.push(".#.+[+~]")
                    }), ja(function(a) {
                        var b = g.createElement("input");
                        b.setAttribute("type", "hidden"), a
                            .appendChild(b).setAttribute(
                                "name", "D"), a.querySelectorAll(
                                "[name=d]").length && q.push(
                                "name" + L + "*[*^$|!~]?="),
                            a.querySelectorAll(":enabled").length ||
                            q.push(":enabled", ":disabled"),
                            a.querySelectorAll("*,:x"), q.push(
                                ",.*:")
                    })), (c.matchesSelector = $.test(s = o.matches ||
                        o.webkitMatchesSelector || o.mozMatchesSelector ||
                        o.oMatchesSelector || o.msMatchesSelector
                    )) && ja(function(a) {
                        c.disconnectedMatch = s.call(a, "div"),
                            s.call(a, "[s!='']:x"), r.push("!=",
                                P)
                    }), q = q.length && new RegExp(q.join("|")), r =
                    r.length && new RegExp(r.join("|")), b = $.test(
                        o.compareDocumentPosition), t = b || $.test(
                        o.contains) ? function(a, b) {
                        var c = 9 === a.nodeType ? a.documentElement :
                            a,
                            d = b && b.parentNode;
                        return a === d || !(!d || 1 !== d.nodeType ||
                            !(c.contains ? c.contains(d) : a.compareDocumentPosition &&
                                16 & a.compareDocumentPosition(
                                    d)))
                    } : function(a, b) {
                        if (b)
                            while (b = b.parentNode)
                                if (b === a) return !0;
                        return !1
                    }, B = b ? function(a, b) {
                        if (a === b) return l = !0, 0;
                        var d = !a.compareDocumentPosition - !b.compareDocumentPosition;
                        return d ? d : (d = (a.ownerDocument || a) ===
                            (b.ownerDocument || b) ? a.compareDocumentPosition(
                                b) : 1, 1 & d || !c.sortDetached &&
                            b.compareDocumentPosition(a) === d ?
                            a === g || a.ownerDocument === v &&
                            t(v, a) ? -1 : b === g || b.ownerDocument ===
                            v && t(v, b) ? 1 : k ? J(k, a) - J(
                                k, b) : 0 : 4 & d ? -1 : 1)
                    } : function(a, b) {
                        if (a === b) return l = !0, 0;
                        var c, d = 0,
                            e = a.parentNode,
                            f = b.parentNode,
                            h = [a],
                            i = [b];
                        if (!e || !f) return a === g ? -1 : b === g ?
                            1 : e ? -1 : f ? 1 : k ? J(k, a) -
                            J(k, b) : 0;
                        if (e === f) return la(a, b);
                        c = a;
                        while (c = c.parentNode) h.unshift(c);
                        c = b;
                        while (c = c.parentNode) i.unshift(c);
                        while (h[d] === i[d]) d++;
                        return d ? la(h[d], i[d]) : h[d] === v ? -1 :
                            i[d] === v ? 1 : 0
                    }, g) : n
        }, ga.matches = function(a, b) {
            return ga(a, null, null, b)
        }, ga.matchesSelector = function(a, b) {
            if ((a.ownerDocument || a) !== n && m(a), b = b.replace(
                    U, "='$1']"), !(!c.matchesSelector || !p || r &&
                    r.test(b) || q && q.test(b))) try {
                var d = s.call(a, b);
                if (d || c.disconnectedMatch || a.document &&
                    11 !== a.document.nodeType) return d
            } catch (e) {}
            return ga(b, n, null, [a]).length > 0
        }, ga.contains = function(a, b) {
            return (a.ownerDocument || a) !== n && m(a), t(a, b)
        }, ga.attr = function(a, b) {
            (a.ownerDocument || a) !== n && m(a);
            var e = d.attrHandle[b.toLowerCase()],
                f = e && D.call(d.attrHandle, b.toLowerCase()) ? e(
                    a, b, !p) : void 0;
            return void 0 !== f ? f : c.attributes || !p ? a.getAttribute(
                    b) : (f = a.getAttributeNode(b)) && f.specified ?
                f.value : null
        }, ga.error = function(a) {
            throw new Error(
                "Syntax error, unrecognized expression: " + a)
        }, ga.uniqueSort = function(a) {
            var b, d = [],
                e = 0,
                f = 0;
            if (l = !c.detectDuplicates, k = !c.sortStable && a.slice(
                    0), a.sort(B), l) {
                while (b = a[f++]) b === a[f] && (e = d.push(f));
                while (e--) a.splice(d[e], 1)
            }
            return k = null, a
        }, e = ga.getText = function(a) {
            var b, c = "",
                d = 0,
                f = a.nodeType;
            if (f) {
                if (1 === f || 9 === f || 11 === f) {
                    if ("string" == typeof a.textContent) return a.textContent;
                    for (a = a.firstChild; a; a = a.nextSibling) c +=
                        e(a)
                } else if (3 === f || 4 === f) return a.nodeValue
            } else
                while (b = a[d++]) c += e(b);
            return c
        }, d = ga.selectors = {
            cacheLength: 50,
            createPseudo: ia,
            match: X,
            attrHandle: {},
            find: {},
            relative: {
                ">": {
                    dir: "parentNode",
                    first: !0
                },
                " ": {
                    dir: "parentNode"
                },
                "+": {
                    dir: "previousSibling",
                    first: !0
                },
                "~": {
                    dir: "previousSibling"
                }
            },
            preFilter: {
                ATTR: function(a) {
                    return a[1] = a[1].replace(ca, da), a[3] =
                        (a[3] || a[4] || a[5] || "").replace(ca,
                            da), "~=" === a[2] && (a[3] = " " +
                            a[3] + " "), a.slice(0, 4)
                },
                CHILD: function(a) {
                    return a[1] = a[1].toLowerCase(), "nth" ===
                        a[1].slice(0, 3) ? (a[3] || ga.error(a[
                                0]), a[4] = +(a[4] ? a[5] + (a[
                                6] || 1) : 2 * ("even" ===
                                a[3] || "odd" === a[3])), a[5] = +
                            (a[7] + a[8] || "odd" === a[3])) :
                        a[3] && ga.error(a[0]), a
                },
                PSEUDO: function(a) {
                    var b, c = !a[6] && a[2];
                    return X.CHILD.test(a[0]) ? null : (a[3] ?
                        a[2] = a[4] || a[5] || "" : c && V.test(
                            c) && (b = g(c, !0)) && (b = c.indexOf(
                            ")", c.length - b) - c.length) &&
                        (a[0] = a[0].slice(0, b), a[2] = c.slice(
                            0, b)), a.slice(0, 3))
                }
            },
            filter: {
                TAG: function(a) {
                    var b = a.replace(ca, da).toLowerCase();
                    return "*" === a ? function() {
                        return !0
                    } : function(a) {
                        return a.nodeName && a.nodeName.toLowerCase() ===
                            b
                    }
                },
                CLASS: function(a) {
                    var b = y[a + " "];
                    return b || (b = new RegExp("(^|" + L + ")" +
                        a + "(" + L + "|$)")) && y(a,
                        function(a) {
                            return b.test("string" ==
                                typeof a.className && a
                                .className ||
                                "undefined" != typeof a
                                .getAttribute && a.getAttribute(
                                    "class") || "")
                        })
                },
                ATTR: function(a, b, c) {
                    return function(d) {
                        var e = ga.attr(d, a);
                        return null == e ? "!=" === b : b ?
                            (e += "", "=" === b ? e === c :
                                "!=" === b ? e !== c : "^=" ===
                                b ? c && 0 === e.indexOf(c) :
                                "*=" === b ? c && e.indexOf(
                                    c) > -1 : "$=" === b ?
                                c && e.slice(-c.length) ===
                                c : "~=" === b ? (" " + e.replace(
                                    Q, " ") + " ").indexOf(
                                    c) > -1 : "|=" === b ?
                                e === c || e.slice(0, c.length +
                                    1) === c + "-" : !1) :
                            !0
                    }
                },
                CHILD: function(a, b, c, d, e) {
                    var f = "nth" !== a.slice(0, 3),
                        g = "last" !== a.slice(-4),
                        h = "of-type" === b;
                    return 1 === d && 0 === e ? function(a) {
                        return !!a.parentNode
                    } : function(b, c, i) {
                        var j, k, l, m, n, o, p = f !== g ?
                            "nextSibling" :
                            "previousSibling",
                            q = b.parentNode,
                            r = h && b.nodeName.toLowerCase(),
                            s = !i && !h;
                        if (q) {
                            if (f) {
                                while (p) {
                                    l = b;
                                    while (l = l[p])
                                        if (h ? l.nodeName.toLowerCase() ===
                                            r : 1 === l.nodeType
                                        ) return !1;
                                    o = p = "only" === a &&
                                        !o && "nextSibling"
                                }
                                return !0
                            }
                            if (o = [g ? q.firstChild : q.lastChild],
                                g && s) {
                                k = q[u] || (q[u] = {}), j =
                                    k[a] || [], n = j[0] ===
                                    w && j[1], m = j[0] ===
                                    w && j[2], l = n && q.childNodes[
                                        n];
                                while (l = ++n && l && l[p] ||
                                    (m = n = 0) || o.pop())
                                    if (1 === l.nodeType &&
                                        ++m && l === b) {
                                        k[a] = [w, n, m];
                                        break
                                    }
                            } else if (s && (j = (b[u] || (
                                    b[u] = {}))[a]) && j[0] ===
                                w) m = j[1];
                            else
                                while (l = ++n && l && l[p] ||
                                    (m = n = 0) || o.pop())
                                    if ((h ? l.nodeName.toLowerCase() ===
                                            r : 1 === l.nodeType
                                        ) && ++m && (s && (
                                            (l[u] || (l[
                                                u
                                            ] = {}))[a] = [
                                                w, m
                                            ]), l === b))
                                        break; return m -=
                                e, m === d || m % d === 0 &&
                                m / d >= 0
                        }
                    }
                },
                PSEUDO: function(a, b) {
                    var c, e = d.pseudos[a] || d.setFilters[a.toLowerCase()] ||
                        ga.error("unsupported pseudo: " + a);
                    return e[u] ? e(b) : e.length > 1 ? (c = [a,
                            a, "", b
                        ], d.setFilters.hasOwnProperty(a.toLowerCase()) ?
                        ia(function(a, c) {
                            var d, f = e(a, b),
                                g = f.length;
                            while (g--) d = J(a, f[g]),
                                a[d] = !(c[d] = f[g])
                        }) : function(a) {
                            return e(a, 0, c)
                        }) : e
                }
            },
            pseudos: {
                not: ia(function(a) {
                    var b = [],
                        c = [],
                        d = h(a.replace(R, "$1"));
                    return d[u] ? ia(function(a, b, c, e) {
                        var f, g = d(a, null, e, []),
                            h = a.length;
                        while (h--)(f = g[h]) && (a[
                            h] = !(b[h] = f))
                    }) : function(a, e, f) {
                        return b[0] = a, d(b, null, f,
                            c), b[0] = null, !c.pop()
                    }
                }),
                has: ia(function(a) {
                    return function(b) {
                        return ga(a, b).length > 0
                    }
                }),
                contains: ia(function(a) {
                    return a = a.replace(ca, da),
                        function(b) {
                            return (b.textContent || b.innerText ||
                                e(b)).indexOf(a) > -1
                        }
                }),
                lang: ia(function(a) {
                    return W.test(a || "") || ga.error(
                            "unsupported lang: " + a), a =
                        a.replace(ca, da).toLowerCase(),
                        function(b) {
                            var c;
                            do
                                if (c = p ? b.lang : b.getAttribute(
                                        "xml:lang") || b.getAttribute(
                                        "lang")) return c =
                                    c.toLowerCase(), c ===
                                    a || 0 === c.indexOf(
                                        a + "-");
                            while ((b = b.parentNode) && 1 ===
                                b.nodeType);
                            return !1
                        }
                }),
                target: function(b) {
                    var c = a.location && a.location.hash;
                    return c && c.slice(1) === b.id
                },
                root: function(a) {
                    return a === o
                },
                focus: function(a) {
                    return a === n.activeElement && (!n.hasFocus ||
                        n.hasFocus()) && !!(a.type || a.href ||
                        ~a.tabIndex)
                },
                enabled: function(a) {
                    return a.disabled === !1
                },
                disabled: function(a) {
                    return a.disabled === !0
                },
                checked: function(a) {
                    var b = a.nodeName.toLowerCase();
                    return "input" === b && !!a.checked ||
                        "option" === b && !!a.selected
                },
                selected: function(a) {
                    return a.parentNode && a.parentNode.selectedIndex,
                        a.selected === !0
                },
                empty: function(a) {
                    for (a = a.firstChild; a; a = a.nextSibling)
                        if (a.nodeType < 6) return !1;
                    return !0
                },
                parent: function(a) {
                    return !d.pseudos.empty(a)
                },
                header: function(a) {
                    return Z.test(a.nodeName)
                },
                input: function(a) {
                    return Y.test(a.nodeName)
                },
                button: function(a) {
                    var b = a.nodeName.toLowerCase();
                    return "input" === b && "button" === a.type ||
                        "button" === b
                },
                text: function(a) {
                    var b;
                    return "input" === a.nodeName.toLowerCase() &&
                        "text" === a.type && (null == (b = a.getAttribute(
                            "type")) || "text" === b.toLowerCase())
                },
                first: oa(function() {
                    return [0]
                }),
                last: oa(function(a, b) {
                    return [b - 1]
                }),
                eq: oa(function(a, b, c) {
                    return [0 > c ? c + b : c]
                }),
                even: oa(function(a, b) {
                    for (var c = 0; b > c; c += 2) a.push(c);
                    return a
                }),
                odd: oa(function(a, b) {
                    for (var c = 1; b > c; c += 2) a.push(c);
                    return a
                }),
                lt: oa(function(a, b, c) {
                    for (var d = 0 > c ? c + b : c; --d >=
                        0;) a.push(d);
                    return a
                }),
                gt: oa(function(a, b, c) {
                    for (var d = 0 > c ? c + b : c; ++d < b;)
                        a.push(d);
                    return a
                })
            }
        }, d.pseudos.nth = d.pseudos.eq;
        for (b in {
                radio: !0,
                checkbox: !0,
                file: !0,
                password: !0,
                image: !0
            }) d.pseudos[b] = ma(b);
        for (b in {
                submit: !0,
                reset: !0
            }) d.pseudos[b] = na(b);

        function qa() {}
        qa.prototype = d.filters = d.pseudos, d.setFilters = new qa, g =
            ga.tokenize = function(a, b) {
                var c, e, f, g, h, i, j, k = z[a + " "];
                if (k) return b ? 0 : k.slice(0);
                h = a, i = [], j = d.preFilter;
                while (h) {
                    (!c || (e = S.exec(h))) && (e && (h = h.slice(e[0].length) ||
                        h), i.push(f = [])), c = !1, (e = T.exec(h)) &&
                        (c = e.shift(), f.push({
                            value: c,
                            type: e[0].replace(R, " ")
                        }), h = h.slice(c.length));
                    for (g in d.filter) !(e = X[g].exec(h)) || j[g] &&
                        !(e = j[g](e)) || (c = e.shift(), f.push({
                            value: c,
                            type: g,
                            matches: e
                        }), h = h.slice(c.length));
                    if (!c) break
                }
                return b ? h.length : h ? ga.error(a) : z(a, i).slice(0)
            };

        function ra(a) {
            for (var b = 0, c = a.length, d = ""; c > b; b++) d += a[b]
                .value;
            return d
        }

        function sa(a, b, c) {
            var d = b.dir,
                e = c && "parentNode" === d,
                f = x++;
            return b.first ? function(b, c, f) {
                while (b = b[d])
                    if (1 === b.nodeType || e) return a(b, c, f)
            } : function(b, c, g) {
                var h, i, j = [w, f];
                if (g) {
                    while (b = b[d])
                        if ((1 === b.nodeType || e) && a(b, c, g))
                            return !0
                } else
                    while (b = b[d])
                        if (1 === b.nodeType || e) {
                            if (i = b[u] || (b[u] = {}), (h = i[d]) &&
                                h[0] === w && h[1] === f) return j[
                                2] = h[2];
                            if (i[d] = j, j[2] = a(b, c, g)) return
                                !0
                        }
            }
        }

        function ta(a) {
            return a.length > 1 ? function(b, c, d) {
                var e = a.length;
                while (e--)
                    if (!a[e](b, c, d)) return !1;
                return !0
            } : a[0]
        }

        function ua(a, b, c) {
            for (var d = 0, e = b.length; e > d; d++) ga(a, b[d], c);
            return c
        }

        function va(a, b, c, d, e) {
            for (var f, g = [], h = 0, i = a.length, j = null != b; i >
                h; h++)(f = a[h]) && (!c || c(f, d, e)) && (g.push(f),
                j && b.push(h));
            return g
        }

        function wa(a, b, c, d, e, f) {
            return d && !d[u] && (d = wa(d)), e && !e[u] && (e = wa(e,
                f)), ia(function(f, g, h, i) {
                var j, k, l, m = [],
                    n = [],
                    o = g.length,
                    p = f || ua(b || "*", h.nodeType ? [h] : h, []),
                    q = !a || !f && b ? p : va(p, m, a, h, i),
                    r = c ? e || (f ? a : o || d) ? [] : g : q;
                if (c && c(q, r, h, i), d) {
                    j = va(r, n), d(j, [], h, i), k = j.length;
                    while (k--)(l = j[k]) && (r[n[k]] = !(q[n[k]] =
                        l))
                }
                if (f) {
                    if (e || a) {
                        if (e) {
                            j = [], k = r.length;
                            while (k--)(l = r[k]) && j.push(q[k] =
                                l);
                            e(null, r = [], j, i)
                        }
                        k = r.length;
                        while (k--)(l = r[k]) && (j = e ? J(f,
                            l) : m[k]) > -1 && (f[j] = !(g[
                            j] = l))
                    }
                } else r = va(r === g ? r.splice(o, r.length) :
                    r), e ? e(null, g, r, i) : H.apply(g, r)
            })
        }

        function xa(a) {
            for (var b, c, e, f = a.length, g = d.relative[a[0].type],
                    h = g || d.relative[" "], i = g ? 1 : 0, k = sa(
                        function(a) {
                            return a === b
                        }, h, !0), l = sa(function(a) {
                        return J(b, a) > -1
                    }, h, !0), m = [function(a, c, d) {
                        var e = !g && (d || c !== j) || ((b = c).nodeType ?
                            k(a, c, d) : l(a, c, d));
                        return b = null, e
                    }]; f > i; i++)
                if (c = d.relative[a[i].type]) m = [sa(ta(m), c)];
                else {
                    if (c = d.filter[a[i].type].apply(null, a[i].matches),
                        c[u]) {
                        for (e = ++i; f > e; e++)
                            if (d.relative[a[e].type]) break;
                        return wa(i > 1 && ta(m), i > 1 && ra(a.slice(0,
                                i - 1).concat({
                                value: " " === a[i - 2].type ?
                                    "*" : ""
                            })).replace(R, "$1"), c, e > i && xa(a.slice(
                                i, e)), f > e && xa(a = a.slice(e)),
                            f > e && ra(a))
                    }
                    m.push(c)
                }
            return ta(m)
        }

        function ya(a, b) {
            var c = b.length > 0,
                e = a.length > 0,
                f = function(f, g, h, i, k) {
                    var l, m, o, p = 0,
                        q = "0",
                        r = f && [],
                        s = [],
                        t = j,
                        u = f || e && d.find.TAG("*", k),
                        v = w += null == t ? 1 : Math.random() || .1,
                        x = u.length;
                    for (k && (j = g !== n && g); q !== x && null != (l =
                            u[q]); q++) {
                        if (e && l) {
                            m = 0;
                            while (o = a[m++])
                                if (o(l, g, h)) {
                                    i.push(l);
                                    break
                                }
                            k && (w = v)
                        }
                        c && ((l = !o && l) && p--, f && r.push(l))
                    }
                    if (p += q, c && q !== p) {
                        m = 0;
                        while (o = b[m++]) o(r, s, g, h);
                        if (f) {
                            if (p > 0)
                                while (q--) r[q] || s[q] || (s[q] = F.call(
                                    i));
                            s = va(s)
                        }
                        H.apply(i, s), k && !f && s.length > 0 && p + b
                            .length > 1 && ga.uniqueSort(i)
                    }
                    return k && (w = v, j = t), r
                };
            return c ? ia(f) : f
        }
        return h = ga.compile = function(a, b) {
                var c, d = [],
                    e = [],
                    f = A[a + " "];
                if (!f) {
                    b || (b = g(a)), c = b.length;
                    while (c--) f = xa(b[c]), f[u] ? d.push(f) : e.push(
                        f);
                    f = A(a, ya(e, d)), f.selector = a
                }
                return f
            }, i = ga.select = function(a, b, e, f) {
                var i, j, k, l, m, n = "function" == typeof a && a,
                    o = !f && g(a = n.selector || a);
                if (e = e || [], 1 === o.length) {
                    if (j = o[0] = o[0].slice(0), j.length > 2 && "ID" ===
                        (k = j[0]).type && c.getById && 9 === b.nodeType &&
                        p && d.relative[j[1].type]) {
                        if (b = (d.find.ID(k.matches[0].replace(ca, da),
                                b) || [])[0], !b) return e;
                        n && (b = b.parentNode), a = a.slice(j.shift().value
                            .length)
                    }
                    i = X.needsContext.test(a) ? 0 : j.length;
                    while (i--) {
                        if (k = j[i], d.relative[l = k.type]) break;
                        if ((m = d.find[l]) && (f = m(k.matches[0].replace(
                                    ca, da), aa.test(j[0].type) &&
                                pa(b.parentNode) || b))) {
                            if (j.splice(i, 1), a = f.length && ra(j), !
                                a) return H.apply(e, f), e;
                            break
                        }
                    }
                }
                return (n || h(a, o))(f, b, !p, e, aa.test(a) && pa(b.parentNode) ||
                    b), e
            }, c.sortStable = u.split("").sort(B).join("") === u, c.detectDuplicates = !
            !l, m(), c.sortDetached = ja(function(a) {
                return 1 & a.compareDocumentPosition(n.createElement(
                    "div"))
            }), ja(function(a) {
                return a.innerHTML = "<a href='#'></a>", "#" === a.firstChild
                    .getAttribute("href")
            }) || ka("type|href|height|width", function(a, b, c) {
                return c ? void 0 : a.getAttribute(b, "type" === b.toLowerCase() ?
                    1 : 2)
            }), c.attributes && ja(function(a) {
                return a.innerHTML = "<input/>", a.firstChild.setAttribute(
                    "value", ""), "" === a.firstChild.getAttribute(
                    "value")
            }) || ka("value", function(a, b, c) {
                return c || "input" !== a.nodeName.toLowerCase() ?
                    void 0 : a.defaultValue
            }), ja(function(a) {
                return null == a.getAttribute("disabled")
            }) || ka(K, function(a, b, c) {
                var d;
                return c ? void 0 : a[b] === !0 ? b.toLowerCase() :
                    (d = a.getAttributeNode(b)) && d.specified ? d.value :
                    null
            }), ga
    }(a);
    m.find = s, m.expr = s.selectors, m.expr[":"] = m.expr.pseudos, m.unique =
        s.uniqueSort, m.text = s.getText, m.isXMLDoc = s.isXML, m.contains =
        s.contains;
    var t = m.expr.match.needsContext,
        u = /^<(\w+)\s*\/?>(?:<\/\1>|)$/,
        v = /^.[^:#\[\.,]*$/;

    function w(a, b, c) {
        if (m.isFunction(b)) return m.grep(a, function(a, d) {
            return !!b.call(a, d, a) !== c
        });
        if (b.nodeType) return m.grep(a, function(a) {
            return a === b !== c
        });
        if ("string" == typeof b) {
            if (v.test(b)) return m.filter(b, a, c);
            b = m.filter(b, a)
        }
        return m.grep(a, function(a) {
            return m.inArray(a, b) >= 0 !== c
        })
    }
    m.filter = function(a, b, c) {
        var d = b[0];
        return c && (a = ":not(" + a + ")"), 1 === b.length && 1 === d.nodeType ?
            m.find.matchesSelector(d, a) ? [d] : [] : m.find.matches(a,
                m.grep(b, function(a) {
                    return 1 === a.nodeType
                }))
    }, m.fn.extend({
        find: function(a) {
            var b, c = [],
                d = this,
                e = d.length;
            if ("string" != typeof a) return this.pushStack(m(a)
                .filter(function() {
                    for (b = 0; e > b; b++)
                        if (m.contains(d[b], this))
                            return !0
                }));
            for (b = 0; e > b; b++) m.find(a, d[b], c);
            return c = this.pushStack(e > 1 ? m.unique(c) : c),
                c.selector = this.selector ? this.selector +
                " " + a : a, c
        },
        filter: function(a) {
            return this.pushStack(w(this, a || [], !1))
        },
        not: function(a) {
            return this.pushStack(w(this, a || [], !0))
        },
        is: function(a) {
            return !!w(this, "string" == typeof a && t.test(a) ?
                m(a) : a || [], !1).length
        }
    });
    var x, y = a.document,
        z = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,
        A = m.fn.init = function(a, b) {
            var c, d;
            if (!a) return this;
            if ("string" == typeof a) {
                if (c = "<" === a.charAt(0) && ">" === a.charAt(a.length -
                        1) && a.length >= 3 ? [null, a, null] : z.exec(a), !
                    c || !c[1] && b) return !b || b.jquery ? (b || x).find(
                    a) : this.constructor(b).find(a);
                if (c[1]) {
                    if (b = b instanceof m ? b[0] : b, m.merge(this, m.parseHTML(
                            c[1], b && b.nodeType ? b.ownerDocument ||
                            b : y, !0)), u.test(c[1]) && m.isPlainObject(b))
                        for (c in b) m.isFunction(this[c]) ? this[c](b[c]) :
                            this.attr(c, b[c]);
                    return this
                }
                if (d = y.getElementById(c[2]), d && d.parentNode) {
                    if (d.id !== c[2]) return x.find(a);
                    this.length = 1, this[0] = d
                }
                return this.context = y, this.selector = a, this
            }
            return a.nodeType ? (this.context = this[0] = a, this.length =
                    1, this) : m.isFunction(a) ? "undefined" != typeof x.ready ?
                x.ready(a) : a(m) : (void 0 !== a.selector && (this.selector =
                    a.selector, this.context = a.context), m.makeArray(
                    a, this))
        };
    A.prototype = m.fn, x = m(y);
    var B = /^(?:parents|prev(?:Until|All))/,
        C = {
            children: !0,
            contents: !0,
            next: !0,
            prev: !0
        };
    m.extend({
        dir: function(a, b, c) {
            var d = [],
                e = a[b];
            while (e && 9 !== e.nodeType && (void 0 === c || 1 !==
                    e.nodeType || !m(e).is(c))) 1 === e.nodeType &&
                d.push(e), e = e[b];
            return d
        },
        sibling: function(a, b) {
            for (var c = []; a; a = a.nextSibling) 1 === a.nodeType &&
                a !== b && c.push(a);
            return c
        }
    }), m.fn.extend({
        has: function(a) {
            var b, c = m(a, this),
                d = c.length;
            return this.filter(function() {
                for (b = 0; d > b; b++)
                    if (m.contains(this, c[b])) return !
                        0
            })
        },
        closest: function(a, b) {
            for (var c, d = 0, e = this.length, f = [], g = t.test(
                    a) || "string" != typeof a ? m(a, b ||
                    this.context) : 0; e > d; d++)
                for (c = this[d]; c && c !== b; c = c.parentNode)
                    if (c.nodeType < 11 && (g ? g.index(c) > -1 :
                            1 === c.nodeType && m.find.matchesSelector(
                                c, a))) {
                        f.push(c);
                        break
                    }
            return this.pushStack(f.length > 1 ? m.unique(f) :
                f)
        },
        index: function(a) {
            return a ? "string" == typeof a ? m.inArray(this[0],
                    m(a)) : m.inArray(a.jquery ? a[0] : a, this) :
                this[0] && this[0].parentNode ? this.first().prevAll()
                .length : -1
        },
        add: function(a, b) {
            return this.pushStack(m.unique(m.merge(this.get(),
                m(a, b))))
        },
        addBack: function(a) {
            return this.add(null == a ? this.prevObject : this.prevObject
                .filter(a))
        }
    });

    function D(a, b) {
        do a = a[b]; while (a && 1 !== a.nodeType);
        return a
    }
    m.each({
        parent: function(a) {
            var b = a.parentNode;
            return b && 11 !== b.nodeType ? b : null
        },
        parents: function(a) {
            return m.dir(a, "parentNode")
        },
        parentsUntil: function(a, b, c) {
            return m.dir(a, "parentNode", c)
        },
        next: function(a) {
            return D(a, "nextSibling")
        },
        prev: function(a) {
            return D(a, "previousSibling")
        },
        nextAll: function(a) {
            return m.dir(a, "nextSibling")
        },
        prevAll: function(a) {
            return m.dir(a, "previousSibling")
        },
        nextUntil: function(a, b, c) {
            return m.dir(a, "nextSibling", c)
        },
        prevUntil: function(a, b, c) {
            return m.dir(a, "previousSibling", c)
        },
        siblings: function(a) {
            return m.sibling((a.parentNode || {}).firstChild, a)
        },
        children: function(a) {
            return m.sibling(a.firstChild)
        },
        contents: function(a) {
            return m.nodeName(a, "iframe") ? a.contentDocument ||
                a.contentWindow.document : m.merge([], a.childNodes)
        }
    }, function(a, b) {
        m.fn[a] = function(c, d) {
            var e = m.map(this, b, c);
            return "Until" !== a.slice(-5) && (d = c), d &&
                "string" == typeof d && (e = m.filter(d, e)),
                this.length > 1 && (C[a] || (e = m.unique(e)),
                    B.test(a) && (e = e.reverse())), this.pushStack(
                    e)
        }
    });
    var E = /\S+/g,
        F = {};

    function G(a) {
        var b = F[a] = {};
        return m.each(a.match(E) || [], function(a, c) {
            b[c] = !0
        }), b
    }
    m.Callbacks = function(a) {
        a = "string" == typeof a ? F[a] || G(a) : m.extend({}, a);
        var b, c, d, e, f, g, h = [],
            i = !a.once && [],
            j = function(l) {
                for (c = a.memory && l, d = !0, f = g || 0, g = 0, e =
                    h.length, b = !0; h && e > f; f++)
                    if (h[f].apply(l[0], l[1]) === !1 && a.stopOnFalse) {
                        c = !1;
                        break
                    }
                b = !1, h && (i ? i.length && j(i.shift()) : c ? h = [] :
                    k.disable())
            },
            k = {
                add: function() {
                    if (h) {
                        var d = h.length;
                        ! function f(b) {
                            m.each(b, function(b, c) {
                                var d = m.type(c);
                                "function" === d ? a.unique &&
                                    k.has(c) || h.push(c) :
                                    c && c.length &&
                                    "string" !== d && f(c)
                            })
                        }(arguments), b ? e = h.length : c && (g =
                            d, j(c))
                    }
                    return this
                },
                remove: function() {
                    return h && m.each(arguments, function(a, c) {
                        var d;
                        while ((d = m.inArray(c, h, d)) > -
                            1) h.splice(d, 1), b && (e >= d &&
                            e--, f >= d && f--)
                    }), this
                },
                has: function(a) {
                    return a ? m.inArray(a, h) > -1 : !(!h || !h.length)
                },
                empty: function() {
                    return h = [], e = 0, this
                },
                disable: function() {
                    return h = i = c = void 0, this
                },
                disabled: function() {
                    return !h
                },
                lock: function() {
                    return i = void 0, c || k.disable(), this
                },
                locked: function() {
                    return !i
                },
                fireWith: function(a, c) {
                    return !h || d && !i || (c = c || [], c = [a, c
                        .slice ? c.slice() : c
                    ], b ? i.push(c) : j(c)), this
                },
                fire: function() {
                    return k.fireWith(this, arguments), this
                },
                fired: function() {
                    return !!d
                }
            };
        return k
    }, m.extend({
        Deferred: function(a) {
            var b = [
                    ["resolve", "done", m.Callbacks(
                        "once memory"), "resolved"],
                    ["reject", "fail", m.Callbacks(
                        "once memory"), "rejected"],
                    ["notify", "progress", m.Callbacks("memory")]
                ],
                c = "pending",
                d = {
                    state: function() {
                        return c
                    },
                    always: function() {
                        return e.done(arguments).fail(
                            arguments), this
                    },
                    then: function() {
                        var a = arguments;
                        return m.Deferred(function(c) {
                            m.each(b, function(b, f) {
                                var g = m.isFunction(
                                    a[b]
                                ) && a[
                                    b];
                                e[f[1]](
                                    function() {
                                        var
                                            a =
                                            g &&
                                            g
                                            .apply(
                                                this,
                                                arguments
                                            );
                                        a
                                            &&
                                            m
                                            .isFunction(
                                                a
                                                .promise
                                            ) ?
                                            a
                                            .promise()
                                            .done(
                                                c
                                                .resolve
                                            )
                                            .fail(
                                                c
                                                .reject
                                            )
                                            .progress(
                                                c
                                                .notify
                                            ) :
                                            c[
                                                f[
                                                    0
                                                ] +
                                                "With"
                                            ]
                                            (
                                                this ===
                                                d ?
                                                c
                                                .promise() :
                                                this,
                                                g ? [
                                                    a
                                                ] :
                                                arguments
                                            )
                                    })
                            }), a = null
                        }).promise()
                    },
                    promise: function(a) {
                        return null != a ? m.extend(a, d) :
                            d
                    }
                },
                e = {};
            return d.pipe = d.then, m.each(b, function(a, f) {
                var g = f[2],
                    h = f[3];
                d[f[1]] = g.add, h && g.add(function() {
                        c = h
                    }, b[1 ^ a][2].disable, b[2][2]
                    .lock), e[f[0]] = function() {
                    return e[f[0] + "With"](this ===
                        e ? d : this, arguments
                    ), this
                }, e[f[0] + "With"] = g.fireWith
            }), d.promise(e), a && a.call(e, e), e
        },
        when: function(a) {
            var b = 0,
                c = d.call(arguments),
                e = c.length,
                f = 1 !== e || a && m.isFunction(a.promise) ? e :
                0,
                g = 1 === f ? a : m.Deferred(),
                h = function(a, b, c) {
                    return function(e) {
                        b[a] = this, c[a] = arguments.length >
                            1 ? d.call(arguments) : e, c ===
                            i ? g.notifyWith(b, c) : --f ||
                            g.resolveWith(b, c)
                    }
                },
                i, j, k;
            if (e > 1)
                for (i = new Array(e), j = new Array(e), k =
                    new Array(e); e > b; b++) c[b] && m.isFunction(
                    c[b].promise) ? c[b].promise().done(h(b,
                    k, c)).fail(g.reject).progress(h(b, j,
                    i)) : --f;
            return f || g.resolveWith(k, c), g.promise()
        }
    });
    var H;
    m.fn.ready = function(a) {
        return m.ready.promise().done(a), this
    }, m.extend({
        isReady: !1,
        readyWait: 1,
        holdReady: function(a) {
            a ? m.readyWait++ : m.ready(!0)
        },
        ready: function(a) {
            if (a === !0 ? !--m.readyWait : !m.isReady) {
                if (!y.body) return setTimeout(m.ready);
                m.isReady = !0, a !== !0 && --m.readyWait > 0 ||
                    (H.resolveWith(y, [m]), m.fn.triggerHandler &&
                        (m(y).triggerHandler("ready"), m(y).off(
                            "ready")))
            }
        }
    });

    function I() {
        y.addEventListener ? (y.removeEventListener("DOMContentLoaded", J, !
            1), a.removeEventListener("load", J, !1)) : (y.detachEvent(
            "onreadystatechange", J), a.detachEvent("onload", J))
    }

    function J() {
        (y.addEventListener || "load" === event.type || "complete" === y.readyState) &&
        (I(), m.ready())
    }
    m.ready.promise = function(b) {
        if (!H)
            if (H = m.Deferred(), "complete" === y.readyState)
                setTimeout(m.ready);
            else if (y.addEventListener) y.addEventListener(
            "DOMContentLoaded", J, !1), a.addEventListener("load",
            J, !1);
        else {
            y.attachEvent("onreadystatechange", J), a.attachEvent(
                "onload", J);
            var c = !1;
            try {
                c = null == a.frameElement && y.documentElement
            } catch (d) {}
            c && c.doScroll && ! function e() {
                if (!m.isReady) {
                    try {
                        c.doScroll("left")
                    } catch (a) {
                        return setTimeout(e, 50)
                    }
                    I(), m.ready()
                }
            }()
        }
        return H.promise(b)
    };
    var K = "undefined",
        L;
    for (L in m(k)) break;
    k.ownLast = "0" !== L, k.inlineBlockNeedsLayout = !1, m(function() {
            var a, b, c, d;
            c = y.getElementsByTagName("body")[0], c && c.style && (b =
                y.createElement("div"), d = y.createElement("div"),
                d.style.cssText =
                "position:absolute;border:0;width:0;height:0;top:0;left:-9999px",
                c.appendChild(d).appendChild(b), typeof b.style.zoom !==
                K && (b.style.cssText =
                    "display:inline;margin:0;border:0;padding:1px;width:1px;zoom:1",
                    k.inlineBlockNeedsLayout = a = 3 === b.offsetWidth,
                    a && (c.style.zoom = 1)), c.removeChild(d))
        }),
        function() {
            var a = y.createElement("div");
            if (null == k.deleteExpando) {
                k.deleteExpando = !0;
                try {
                    delete a.test
                } catch (b) {
                    k.deleteExpando = !1
                }
            }
            a = null
        }(), m.acceptData = function(a) {
            var b = m.noData[(a.nodeName + " ").toLowerCase()],
                c = +a.nodeType || 1;
            return 1 !== c && 9 !== c ? !1 : !b || b !== !0 && a.getAttribute(
                "classid") === b
        };
    var M = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
        N = /([A-Z])/g;

    function O(a, b, c) {
        if (void 0 === c && 1 === a.nodeType) {
            var d = "data-" + b.replace(N, "-$1").toLowerCase();
            if (c = a.getAttribute(d), "string" == typeof c) {
                try {
                    c = "true" === c ? !0 : "false" === c ? !1 : "null" ===
                        c ? null : +c + "" === c ? +c : M.test(c) ? m.parseJSON(
                            c) : c
                } catch (e) {}
                m.data(a, b, c)
            } else c = void 0
        }
        return c
    }

    function P(a) {
        var b;
        for (b in a)
            if (("data" !== b || !m.isEmptyObject(a[b])) && "toJSON" !== b)
                return !1;
        return !0
    }

    function Q(a, b, d, e) {
        if (m.acceptData(a)) {
            var f, g, h = m.expando,
                i = a.nodeType,
                j = i ? m.cache : a,
                k = i ? a[h] : a[h] && h;
            if (k && j[k] && (e || j[k].data) || void 0 !== d || "string" !=
                typeof b) return k || (k = i ? a[h] = c.pop() || m.guid++ :
                    h), j[k] || (j[k] = i ? {} : {
                    toJSON: m.noop
                }), ("object" == typeof b || "function" == typeof b) &&
                (e ? j[k] = m.extend(j[k], b) : j[k].data = m.extend(j[
                    k].data, b)), g = j[k], e || (g.data || (g.data = {}),
                    g = g.data), void 0 !== d && (g[m.camelCase(b)] = d),
                "string" == typeof b ? (f = g[b], null == f && (f = g[m
                    .camelCase(b)])) : f = g, f
        }
    }

    function R(a, b, c) {
        if (m.acceptData(a)) {
            var d, e, f = a.nodeType,
                g = f ? m.cache : a,
                h = f ? a[m.expando] : m.expando;
            if (g[h]) {
                if (b && (d = c ? g[h] : g[h].data)) {
                    m.isArray(b) ? b = b.concat(m.map(b, m.camelCase)) : b in
                        d ? b = [b] : (b = m.camelCase(b), b = b in d ? [b] :
                            b.split(" ")), e = b.length;
                    while (e--) delete d[b[e]];
                    if (c ? !P(d) : !m.isEmptyObject(d)) return
                }(c || (delete g[h].data, P(g[h]))) && (f ? m.cleanData([a], !
                        0) : k.deleteExpando || g != g.window ? delete g[h] :
                    g[h] = null)
            }
        }
    }
    m.extend({
        cache: {},
        noData: {
            "applet ": !0,
            "embed ": !0,
            "object ": "clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"
        },
        hasData: function(a) {
            return a = a.nodeType ? m.cache[a[m.expando]] : a[m
                .expando], !!a && !P(a)
        },
        data: function(a, b, c) {
            return Q(a, b, c)
        },
        removeData: function(a, b) {
            return R(a, b)
        },
        _data: function(a, b, c) {
            return Q(a, b, c, !0)
        },
        _removeData: function(a, b) {
            return R(a, b, !0)
        }
    }), m.fn.extend({
        data: function(a, b) {
            var c, d, e, f = this[0],
                g = f && f.attributes;
            if (void 0 === a) {
                if (this.length && (e = m.data(f), 1 === f.nodeType &&
                        !m._data(f, "parsedAttrs"))) {
                    c = g.length;
                    while (c--) g[c] && (d = g[c].name, 0 === d
                        .indexOf("data-") && (d = m.camelCase(
                            d.slice(5)), O(f, d, e[d])));
                    m._data(f, "parsedAttrs", !0)
                }
                return e
            }
            return "object" == typeof a ? this.each(function() {
                m.data(this, a)
            }) : arguments.length > 1 ? this.each(function() {
                m.data(this, a, b)
            }) : f ? O(f, a, m.data(f, a)) : void 0
        },
        removeData: function(a) {
            return this.each(function() {
                m.removeData(this, a)
            })
        }
    }), m.extend({
        queue: function(a, b, c) {
            var d;
            return a ? (b = (b || "fx") + "queue", d = m._data(
                a, b), c && (!d || m.isArray(c) ? d = m
                ._data(a, b, m.makeArray(c)) : d.push(c)
            ), d || []) : void 0
        },
        dequeue: function(a, b) {
            b = b || "fx";
            var c = m.queue(a, b),
                d = c.length,
                e = c.shift(),
                f = m._queueHooks(a, b),
                g = function() {
                    m.dequeue(a, b)
                };
            "inprogress" === e && (e = c.shift(), d--), e && (
                    "fx" === b && c.unshift("inprogress"),
                    delete f.stop, e.call(a, g, f)), !d && f &&
                f.empty.fire()
        },
        _queueHooks: function(a, b) {
            var c = b + "queueHooks";
            return m._data(a, c) || m._data(a, c, {
                empty: m.Callbacks("once memory").add(
                    function() {
                        m._removeData(a, b +
                            "queue"), m._removeData(
                            a, c)
                    })
            })
        }
    }), m.fn.extend({
        queue: function(a, b) {
            var c = 2;
            return "string" != typeof a && (b = a, a = "fx", c--),
                arguments.length < c ? m.queue(this[0], a) :
                void 0 === b ? this : this.each(function() {
                    var c = m.queue(this, a, b);
                    m._queueHooks(this, a), "fx" === a &&
                        "inprogress" !== c[0] && m.dequeue(
                            this, a)
                })
        },
        dequeue: function(a) {
            return this.each(function() {
                m.dequeue(this, a)
            })
        },
        clearQueue: function(a) {
            return this.queue(a || "fx", [])
        },
        promise: function(a, b) {
            var c, d = 1,
                e = m.Deferred(),
                f = this,
                g = this.length,
                h = function() {
                    --d || e.resolveWith(f, [f])
                };
            "string" != typeof a && (b = a, a = void 0), a = a ||
                "fx";
            while (g--) c = m._data(f[g], a + "queueHooks"), c &&
                c.empty && (d++, c.empty.add(h));
            return h(), e.promise(b)
        }
    });
    var S = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,
        T = ["Top", "Right", "Bottom", "Left"],
        U = function(a, b) {
            return a = b || a, "none" === m.css(a, "display") || !m.contains(
                a.ownerDocument, a)
        },
        V = m.access = function(a, b, c, d, e, f, g) {
            var h = 0,
                i = a.length,
                j = null == c;
            if ("object" === m.type(c)) {
                e = !0;
                for (h in c) m.access(a, b, h, c[h], !0, f, g)
            } else if (void 0 !== d && (e = !0, m.isFunction(d) || (g = !0),
                    j && (g ? (b.call(a, d), b = null) : (j = b, b =
                        function(a, b, c) {
                            return j.call(m(a), c)
                        })), b))
                for (; i > h; h++) b(a[h], c, g ? d : d.call(a[h], h, b(a[h],
                    c)));
            return e ? a : j ? b.call(a) : i ? b(a[0], c) : f
        },
        W = /^(?:checkbox|radio)$/i;
    ! function() {
        var a = y.createElement("input"),
            b = y.createElement("div"),
            c = y.createDocumentFragment();
        if (b.innerHTML =
            "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>",
            k.leadingWhitespace = 3 === b.firstChild.nodeType, k.tbody = !b
            .getElementsByTagName("tbody").length, k.htmlSerialize = !!b.getElementsByTagName(
                "link").length, k.html5Clone = "<:nav></:nav>" !== y.createElement(
                "nav").cloneNode(!0).outerHTML, a.type = "checkbox", a.checked = !
            0, c.appendChild(a), k.appendChecked = a.checked, b.innerHTML =
            "<textarea>x</textarea>", k.noCloneChecked = !!b.cloneNode(!0).lastChild
            .defaultValue, c.appendChild(b), b.innerHTML =
            "<input type='radio' checked='checked' name='t'/>", k.checkClone =
            b.cloneNode(!0).cloneNode(!0).lastChild.checked, k.noCloneEvent = !
            0, b.attachEvent && (b.attachEvent("onclick", function() {
                k.noCloneEvent = !1
            }), b.cloneNode(!0).click()), null == k.deleteExpando) {
            k.deleteExpando = !0;
            try {
                delete b.test
            } catch (d) {
                k.deleteExpando = !1
            }
        }
    }(),
    function() {
        var b, c, d = y.createElement("div");
        for (b in {
                submit: !0,
                change: !0,
                focusin: !0
            }) c = "on" + b, (k[b + "Bubbles"] = c in a) || (d.setAttribute(
                c, "t"), k[b + "Bubbles"] = d.attributes[c].expando ===
            !1);
        d = null
    }();
    var X = /^(?:input|select|textarea)$/i,
        Y = /^key/,
        Z = /^(?:mouse|pointer|contextmenu)|click/,
        $ = /^(?:focusinfocus|focusoutblur)$/,
        _ = /^([^.]*)(?:\.(.+)|)$/;

    function aa() {
        return !0
    }

    function ba() {
        return !1
    }

    function ca() {
        try {
            return y.activeElement
        } catch (a) {}
    }
    m.event = {
        global: {},
        add: function(a, b, c, d, e) {
            var f, g, h, i, j, k, l, n, o, p, q, r = m._data(a);
            if (r) {
                c.handler && (i = c, c = i.handler, e = i.selector),
                    c.guid || (c.guid = m.guid++), (g = r.events) ||
                    (g = r.events = {}), (k = r.handle) || (k = r.handle =
                        function(a) {
                            return typeof m === K || a && m.event.triggered ===
                                a.type ? void 0 : m.event.dispatch.apply(
                                    k.elem, arguments)
                        }, k.elem = a), b = (b || "").match(E) || [
                        ""
                    ], h = b.length;
                while (h--) f = _.exec(b[h]) || [], o = q = f[1], p =
                    (f[2] || "").split(".").sort(), o && (j = m.event
                        .special[o] || {}, o = (e ? j.delegateType :
                            j.bindType) || o, j = m.event.special[o] || {},
                        l = m.extend({
                            type: o,
                            origType: q,
                            data: d,
                            handler: c,
                            guid: c.guid,
                            selector: e,
                            needsContext: e && m.expr.match.needsContext
                                .test(e),
                            namespace: p.join(".")
                        }, i), (n = g[o]) || (n = g[o] = [], n.delegateCount =
                            0, j.setup && j.setup.call(a, d, p, k) !==
                            !1 || (a.addEventListener ? a.addEventListener(
                                o, k, !1) : a.attachEvent && a.attachEvent(
                                "on" + o, k))), j.add && (j.add.call(
                            a, l), l.handler.guid || (l.handler
                            .guid = c.guid)), e ? n.splice(n.delegateCount++,
                            0, l) : n.push(l), m.event.global[o] = !
                        0);
                a = null
            }
        },
        remove: function(a, b, c, d, e) {
            var f, g, h, i, j, k, l, n, o, p, q, r = m.hasData(a) &&
                m._data(a);
            if (r && (k = r.events)) {
                b = (b || "").match(E) || [""], j = b.length;
                while (j--)
                    if (h = _.exec(b[j]) || [], o = q = h[1], p = (
                            h[2] || "").split(".").sort(), o) {
                        l = m.event.special[o] || {}, o = (d ? l.delegateType :
                                l.bindType) || o, n = k[o] || [], h =
                            h[2] && new RegExp("(^|\\.)" + p.join(
                                "\\.(?:.*\\.|)") + "(\\.|$)"), i =
                            f = n.length;
                        while (f--) g = n[f], !e && q !== g.origType ||
                            c && c.guid !== g.guid || h && !h.test(
                                g.namespace) || d && d !== g.selector &&
                            ("**" !== d || !g.selector) || (n.splice(
                                    f, 1), g.selector && n.delegateCount--,
                                l.remove && l.remove.call(a, g));
                        i && !n.length && (l.teardown && l.teardown
                            .call(a, p, r.handle) !== !1 || m.removeEvent(
                                a, o, r.handle), delete k[o])
                    } else
                        for (o in k) m.event.remove(a, o + b[j], c,
                            d, !0);
                m.isEmptyObject(k) && (delete r.handle, m._removeData(
                    a, "events"))
            }
        },
        trigger: function(b, c, d, e) {
            var f, g, h, i, k, l, n, o = [d || y],
                p = j.call(b, "type") ? b.type : b,
                q = j.call(b, "namespace") ? b.namespace.split(".") : [];
            if (h = l = d = d || y, 3 !== d.nodeType && 8 !== d.nodeType &&
                !$.test(p + m.event.triggered) && (p.indexOf(".") >=
                    0 && (q = p.split("."), p = q.shift(), q.sort()),
                    g = p.indexOf(":") < 0 && "on" + p, b = b[m.expando] ?
                    b : new m.Event(p, "object" == typeof b && b),
                    b.isTrigger = e ? 2 : 3, b.namespace = q.join(
                        "."), b.namespace_re = b.namespace ? new RegExp(
                        "(^|\\.)" + q.join("\\.(?:.*\\.|)") +
                        "(\\.|$)") : null, b.result = void 0, b.target ||
                    (b.target = d), c = null == c ? [b] : m.makeArray(
                        c, [b]), k = m.event.special[p] || {}, e ||
                    !k.trigger || k.trigger.apply(d, c) !== !1)) {
                if (!e && !k.noBubble && !m.isWindow(d)) {
                    for (i = k.delegateType || p, $.test(i + p) ||
                        (h = h.parentNode); h; h = h.parentNode) o.push(
                        h), l = h;
                    l === (d.ownerDocument || y) && o.push(l.defaultView ||
                        l.parentWindow || a)
                }
                n = 0;
                while ((h = o[n++]) && !b.isPropagationStopped()) b
                    .type = n > 1 ? i : k.bindType || p, f = (m._data(
                        h, "events") || {})[b.type] && m._data(h,
                        "handle"), f && f.apply(h, c), f = g && h[g],
                    f && f.apply && m.acceptData(h) && (b.result =
                        f.apply(h, c), b.result === !1 && b.preventDefault()
                    );
                if (b.type = p, !e && !b.isDefaultPrevented() && (!
                        k._default || k._default.apply(o.pop(), c) ===
                        !1) && m.acceptData(d) && g && d[p] && !m.isWindow(
                        d)) {
                    l = d[g], l && (d[g] = null), m.event.triggered =
                        p;
                    try {
                        d[p]()
                    } catch (r) {}
                    m.event.triggered = void 0, l && (d[g] = l)
                }
                return b.result
            }
        },
        dispatch: function(a) {
            a = m.event.fix(a);
            var b, c, e, f, g, h = [],
                i = d.call(arguments),
                j = (m._data(this, "events") || {})[a.type] || [],
                k = m.event.special[a.type] || {};
            if (i[0] = a, a.delegateTarget = this, !k.preDispatch ||
                k.preDispatch.call(this, a) !== !1) {
                h = m.event.handlers.call(this, a, j), b = 0;
                while ((f = h[b++]) && !a.isPropagationStopped()) {
                    a.currentTarget = f.elem, g = 0;
                    while ((e = f.handlers[g++]) && !a.isImmediatePropagationStopped())
                        (!a.namespace_re || a.namespace_re.test(e.namespace)) &&
                        (a.handleObj = e, a.data = e.data, c = ((m.event
                                    .special[e.origType] || {}).handle ||
                                e.handler).apply(f.elem, i), void 0 !==
                            c && (a.result = c) === !1 && (a.preventDefault(),
                                a.stopPropagation()))
                }
                return k.postDispatch && k.postDispatch.call(this,
                    a), a.result
            }
        },
        handlers: function(a, b) {
            var c, d, e, f, g = [],
                h = b.delegateCount,
                i = a.target;
            if (h && i.nodeType && (!a.button || "click" !== a.type))
                for (; i != this; i = i.parentNode || this)
                    if (1 === i.nodeType && (i.disabled !== !0 ||
                            "click" !== a.type)) {
                        for (e = [], f = 0; h > f; f++) d = b[f], c =
                            d.selector + " ", void 0 === e[c] && (e[
                                    c] = d.needsContext ? m(c, this)
                                .index(i) >= 0 : m.find(c, this,
                                    null, [i]).length), e[c] && e.push(
                                d);
                        e.length && g.push({
                            elem: i,
                            handlers: e
                        })
                    }
            return h < b.length && g.push({
                elem: this,
                handlers: b.slice(h)
            }), g
        },
        fix: function(a) {
            if (a[m.expando]) return a;
            var b, c, d, e = a.type,
                f = a,
                g = this.fixHooks[e];
            g || (this.fixHooks[e] = g = Z.test(e) ? this.mouseHooks :
                    Y.test(e) ? this.keyHooks : {}), d = g.props ?
                this.props.concat(g.props) : this.props, a = new m.Event(
                    f), b = d.length;
            while (b--) c = d[b], a[c] = f[c];
            return a.target || (a.target = f.srcElement || y), 3 ===
                a.target.nodeType && (a.target = a.target.parentNode),
                a.metaKey = !!a.metaKey, g.filter ? g.filter(a, f) :
                a
        },
        props: "altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which"
            .split(" "),
        fixHooks: {},
        keyHooks: {
            props: "char charCode key keyCode".split(" "),
            filter: function(a, b) {
                return null == a.which && (a.which = null != b.charCode ?
                    b.charCode : b.keyCode), a
            }
        },
        mouseHooks: {
            props: "button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement"
                .split(" "),
            filter: function(a, b) {
                var c, d, e, f = b.button,
                    g = b.fromElement;
                return null == a.pageX && null != b.clientX && (d =
                        a.target.ownerDocument || y, e = d.documentElement,
                        c = d.body, a.pageX = b.clientX + (e && e.scrollLeft ||
                            c && c.scrollLeft || 0) - (e && e.clientLeft ||
                            c && c.clientLeft || 0), a.pageY = b.clientY +
                        (e && e.scrollTop || c && c.scrollTop || 0) -
                        (e && e.clientTop || c && c.clientTop || 0)
                    ), !a.relatedTarget && g && (a.relatedTarget =
                        g === a.target ? b.toElement : g), a.which ||
                    void 0 === f || (a.which = 1 & f ? 1 : 2 & f ?
                        3 : 4 & f ? 2 : 0), a
            }
        },
        special: {
            load: {
                noBubble: !0
            },
            focus: {
                trigger: function() {
                    if (this !== ca() && this.focus) try {
                        return this.focus(), !1
                    } catch (a) {}
                },
                delegateType: "focusin"
            },
            blur: {
                trigger: function() {
                    return this === ca() && this.blur ? (this.blur(), !
                        1) : void 0
                },
                delegateType: "focusout"
            },
            click: {
                trigger: function() {
                    return m.nodeName(this, "input") && "checkbox" ===
                        this.type && this.click ? (this.click(), !1) :
                        void 0
                },
                _default: function(a) {
                    return m.nodeName(a.target, "a")
                }
            },
            beforeunload: {
                postDispatch: function(a) {
                    void 0 !== a.result && a.originalEvent && (a.originalEvent
                        .returnValue = a.result)
                }
            }
        },
        simulate: function(a, b, c, d) {
            var e = m.extend(new m.Event, c, {
                type: a,
                isSimulated: !0,
                originalEvent: {}
            });
            d ? m.event.trigger(e, null, b) : m.event.dispatch.call(
                b, e), e.isDefaultPrevented() && c.preventDefault()
        }
    }, m.removeEvent = y.removeEventListener ? function(a, b, c) {
        a.removeEventListener && a.removeEventListener(b, c, !1)
    } : function(a, b, c) {
        var d = "on" + b;
        a.detachEvent && (typeof a[d] === K && (a[d] = null), a.detachEvent(
            d, c))
    }, m.Event = function(a, b) {
        return this instanceof m.Event ? (a && a.type ? (this.originalEvent =
                a, this.type = a.type, this.isDefaultPrevented = a.defaultPrevented ||
                void 0 === a.defaultPrevented && a.returnValue ===
                !1 ? aa : ba) : this.type = a, b && m.extend(this,
                b), this.timeStamp = a && a.timeStamp || m.now(),
            void(this[m.expando] = !0)) : new m.Event(a, b)
    }, m.Event.prototype = {
        isDefaultPrevented: ba,
        isPropagationStopped: ba,
        isImmediatePropagationStopped: ba,
        preventDefault: function() {
            var a = this.originalEvent;
            this.isDefaultPrevented = aa, a && (a.preventDefault ?
                a.preventDefault() : a.returnValue = !1)
        },
        stopPropagation: function() {
            var a = this.originalEvent;
            this.isPropagationStopped = aa, a && (a.stopPropagation &&
                a.stopPropagation(), a.cancelBubble = !0)
        },
        stopImmediatePropagation: function() {
            var a = this.originalEvent;
            this.isImmediatePropagationStopped = aa, a && a.stopImmediatePropagation &&
                a.stopImmediatePropagation(), this.stopPropagation()
        }
    }, m.each({
        mouseenter: "mouseover",
        mouseleave: "mouseout",
        pointerenter: "pointerover",
        pointerleave: "pointerout"
    }, function(a, b) {
        m.event.special[a] = {
            delegateType: b,
            bindType: b,
            handle: function(a) {
                var c, d = this,
                    e = a.relatedTarget,
                    f = a.handleObj;
                return (!e || e !== d && !m.contains(d, e)) &&
                    (a.type = f.origType, c = f.handler.apply(
                        this, arguments), a.type = b), c
            }
        }
    }), k.submitBubbles || (m.event.special.submit = {
        setup: function() {
            return m.nodeName(this, "form") ? !1 : void m.event
                .add(this, "click._submit keypress._submit",
                    function(a) {
                        var b = a.target,
                            c = m.nodeName(b, "input") || m.nodeName(
                                b, "button") ? b.form : void 0;
                        c && !m._data(c, "submitBubbles") && (m
                            .event.add(c, "submit._submit",
                                function(a) {
                                    a._submit_bubble = !0
                                }), m._data(c,
                                "submitBubbles", !0))
                    })
        },
        postDispatch: function(a) {
            a._submit_bubble && (delete a._submit_bubble, this.parentNode &&
                !a.isTrigger && m.event.simulate("submit",
                    this.parentNode, a, !0))
        },
        teardown: function() {
            return m.nodeName(this, "form") ? !1 : void m.event
                .remove(this, "._submit")
        }
    }), k.changeBubbles || (m.event.special.change = {
        setup: function() {
            return X.test(this.nodeName) ? (("checkbox" ===
                    this.type || "radio" === this.type) &&
                (m.event.add(this, "propertychange._change",
                    function(a) {
                        "checked" === a.originalEvent.propertyName &&
                            (this._just_changed = !0)
                    }), m.event.add(this,
                    "click._change",
                    function(a) {
                        this._just_changed && !a.isTrigger &&
                            (this._just_changed = !1),
                            m.event.simulate("change",
                                this, a, !0)
                    })), !1) : void m.event.add(this,
                "beforeactivate._change",
                function(a) {
                    var b = a.target;
                    X.test(b.nodeName) && !m._data(b,
                        "changeBubbles") && (m.event.add(
                        b, "change._change",
                        function(a) {
                            !this.parentNode || a.isSimulated ||
                                a.isTrigger || m.event
                                .simulate("change",
                                    this.parentNode,
                                    a, !0)
                        }), m._data(b,
                        "changeBubbles", !0))
                })
        },
        handle: function(a) {
            var b = a.target;
            return this !== b || a.isSimulated || a.isTrigger ||
                "radio" !== b.type && "checkbox" !== b.type ? a
                .handleObj.handler.apply(this, arguments) :
                void 0
        },
        teardown: function() {
            return m.event.remove(this, "._change"), !X.test(
                this.nodeName)
        }
    }), k.focusinBubbles || m.each({
        focus: "focusin",
        blur: "focusout"
    }, function(a, b) {
        var c = function(a) {
            m.event.simulate(b, a.target, m.event.fix(a), !0)
        };
        m.event.special[b] = {
            setup: function() {
                var d = this.ownerDocument || this,
                    e = m._data(d, b);
                e || d.addEventListener(a, c, !0), m._data(
                    d, b, (e || 0) + 1)
            },
            teardown: function() {
                var d = this.ownerDocument || this,
                    e = m._data(d, b) - 1;
                e ? m._data(d, b, e) : (d.removeEventListener(
                    a, c, !0), m._removeData(d, b))
            }
        }
    }), m.fn.extend({
        on: function(a, b, c, d, e) {
            var f, g;
            if ("object" == typeof a) {
                "string" != typeof b && (c = c || b, b = void 0);
                for (f in a) this.on(f, b, c, a[f], e);
                return this
            }
            if (null == c && null == d ? (d = b, c = b = void 0) :
                null == d && ("string" == typeof b ? (d = c, c =
                    void 0) : (d = c, c = b, b = void 0)), d ===
                !1) d = ba;
            else if (!d) return this;
            return 1 === e && (g = d, d = function(a) {
                    return m().off(a), g.apply(this,
                        arguments)
                }, d.guid = g.guid || (g.guid = m.guid++)),
                this.each(function() {
                    m.event.add(this, a, d, c, b)
                })
        },
        one: function(a, b, c, d) {
            return this.on(a, b, c, d, 1)
        },
        off: function(a, b, c) {
            var d, e;
            if (a && a.preventDefault && a.handleObj) return d =
                a.handleObj, m(a.delegateTarget).off(d.namespace ?
                    d.origType + "." + d.namespace : d.origType,
                    d.selector, d.handler), this;
            if ("object" == typeof a) {
                for (e in a) this.off(e, b, a[e]);
                return this
            }
            return (b === !1 || "function" == typeof b) && (c =
                b, b = void 0), c === !1 && (c = ba), this.each(
                function() {
                    m.event.remove(this, a, c, b)
                })
        },
        trigger: function(a, b) {
            return this.each(function() {
                m.event.trigger(a, b, this)
            })
        },
        triggerHandler: function(a, b) {
            var c = this[0];
            return c ? m.event.trigger(a, b, c, !0) : void 0
        }
    });

    function da(a) {
        var b = ea.split("|"),
            c = a.createDocumentFragment();
        if (c.createElement)
            while (b.length) c.createElement(b.pop());
        return c
    }
    var ea =
        "abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",
        fa = / jQuery\d+="(?:null|\d+)"/g,
        ga = new RegExp("<(?:" + ea + ")[\\s/>]", "i"),
        ha = /^\s+/,
        ia =
        /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,
        ja = /<([\w:]+)/,
        ka = /<tbody/i,
        la = /<|&#?\w+;/,
        ma = /<(?:script|style|link)/i,
        na = /checked\s*(?:[^=]|=\s*.checked.)/i,
        oa = /^$|\/(?:java|ecma)script/i,
        pa = /^true\/(.*)/,
        qa = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,
        ra = {
            option: [1, "<select multiple='multiple'>", "</select>"],
            legend: [1, "<fieldset>", "</fieldset>"],
            area: [1, "<map>", "</map>"],
            param: [1, "<object>", "</object>"],
            thead: [1, "<table>", "</table>"],
            tr: [2, "<table><tbody>", "</tbody></table>"],
            col: [2, "<table><tbody></tbody><colgroup>",
                "</colgroup></table>"
            ],
            td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
            _default: k.htmlSerialize ? [0, "", ""] : [1, "X<div>",
                "</div>"
            ]
        },
        sa = da(y),
        ta = sa.appendChild(y.createElement("div"));
    ra.optgroup = ra.option, ra.tbody = ra.tfoot = ra.colgroup = ra.caption =
        ra.thead, ra.th = ra.td;

    function ua(a, b) {
        var c, d, e = 0,
            f = typeof a.getElementsByTagName !== K ? a.getElementsByTagName(
                b || "*") : typeof a.querySelectorAll !== K ? a.querySelectorAll(
                b || "*") : void 0;
        if (!f)
            for (f = [], c = a.childNodes || a; null != (d = c[e]); e++) !b ||
                m.nodeName(d, b) ? f.push(d) : m.merge(f, ua(d, b));
        return void 0 === b || b && m.nodeName(a, b) ? m.merge([a], f) : f
    }

    function va(a) {
        W.test(a.type) && (a.defaultChecked = a.checked)
    }

    function wa(a, b) {
        return m.nodeName(a, "table") && m.nodeName(11 !== b.nodeType ? b :
                b.firstChild, "tr") ? a.getElementsByTagName("tbody")[0] ||
            a.appendChild(a.ownerDocument.createElement("tbody")) : a
    }

    function xa(a) {
        return a.type = (null !== m.find.attr(a, "type")) + "/" + a.type, a
    }

    function ya(a) {
        var b = pa.exec(a.type);
        return b ? a.type = b[1] : a.removeAttribute("type"), a
    }

    function za(a, b) {
        for (var c, d = 0; null != (c = a[d]); d++) m._data(c, "globalEval", !
            b || m._data(b[d], "globalEval"))
    }

    function Aa(a, b) {
        if (1 === b.nodeType && m.hasData(a)) {
            var c, d, e, f = m._data(a),
                g = m._data(b, f),
                h = f.events;
            if (h) {
                delete g.handle, g.events = {};
                for (c in h)
                    for (d = 0, e = h[c].length; e > d; d++) m.event.add(b,
                        c, h[c][d])
            }
            g.data && (g.data = m.extend({}, g.data))
        }
    }

    function Ba(a, b) {
        var c, d, e;
        if (1 === b.nodeType) {
            if (c = b.nodeName.toLowerCase(), !k.noCloneEvent && b[m.expando]) {
                e = m._data(b);
                for (d in e.events) m.removeEvent(b, d, e.handle);
                b.removeAttribute(m.expando)
            }
            "script" === c && b.text !== a.text ? (xa(b).text = a.text, ya(
                    b)) : "object" === c ? (b.parentNode && (b.outerHTML =
                    a.outerHTML), k.html5Clone && a.innerHTML && !m.trim(
                    b.innerHTML) && (b.innerHTML = a.innerHTML)) : "input" ===
                c && W.test(a.type) ? (b.defaultChecked = b.checked = a.checked,
                    b.value !== a.value && (b.value = a.value)) : "option" ===
                c ? b.defaultSelected = b.selected = a.defaultSelected : (
                    "input" === c || "textarea" === c) && (b.defaultValue =
                    a.defaultValue)
        }
    }
    m.extend({
        clone: function(a, b, c) {
            var d, e, f, g, h, i = m.contains(a.ownerDocument,
                a);
            if (k.html5Clone || m.isXMLDoc(a) || !ga.test("<" +
                    a.nodeName + ">") ? f = a.cloneNode(!0) : (
                    ta.innerHTML = a.outerHTML, ta.removeChild(
                        f = ta.firstChild)), !(k.noCloneEvent &&
                    k.noCloneChecked || 1 !== a.nodeType && 11 !==
                    a.nodeType || m.isXMLDoc(a)))
                for (d = ua(f), h = ua(a), g = 0; null != (e =
                        h[g]); ++g) d[g] && Ba(e, d[g]);
            if (b)
                if (c)
                    for (h = h || ua(a), d = d || ua(f), g = 0; null !=
                        (e = h[g]); g++) Aa(e, d[g]);
                else Aa(a, f);
            return d = ua(f, "script"), d.length > 0 && za(d, !
                i && ua(a, "script")), d = h = e = null, f
        },
        buildFragment: function(a, b, c, d) {
            for (var e, f, g, h, i, j, l, n = a.length, o = da(
                    b), p = [], q = 0; n > q; q++)
                if (f = a[q], f || 0 === f)
                    if ("object" === m.type(f)) m.merge(p, f.nodeType ? [
                        f
                    ] : f);
                    else if (la.test(f)) {
                h = h || o.appendChild(b.createElement("div")),
                    i = (ja.exec(f) || ["", ""])[1].toLowerCase(),
                    l = ra[i] || ra._default, h.innerHTML = l[1] +
                    f.replace(ia, "<$1></$2>") + l[2], e = l[0];
                while (e--) h = h.lastChild;
                if (!k.leadingWhitespace && ha.test(f) && p.push(
                        b.createTextNode(ha.exec(f)[0])), !k.tbody) {
                    f = "table" !== i || ka.test(f) ? "<table>" !==
                        l[1] || ka.test(f) ? 0 : h : h.firstChild,
                        e = f && f.childNodes.length;
                    while (e--) m.nodeName(j = f.childNodes[e],
                            "tbody") && !j.childNodes.length &&
                        f.removeChild(j)
                }
                m.merge(p, h.childNodes), h.textContent = "";
                while (h.firstChild) h.removeChild(h.firstChild);
                h = o.lastChild
            } else p.push(b.createTextNode(f));
            h && o.removeChild(h), k.appendChecked || m.grep(ua(
                p, "input"), va), q = 0;
            while (f = p[q++])
                if ((!d || -1 === m.inArray(f, d)) && (g = m.contains(
                        f.ownerDocument, f), h = ua(o.appendChild(
                        f), "script"), g && za(h), c)) {
                    e = 0;
                    while (f = h[e++]) oa.test(f.type || "") &&
                        c.push(f)
                }
            return h = null, o
        },
        cleanData: function(a, b) {
            for (var d, e, f, g, h = 0, i = m.expando, j = m.cache,
                    l = k.deleteExpando, n = m.event.special; null !=
                (d = a[h]); h++)
                if ((b || m.acceptData(d)) && (f = d[i], g = f &&
                        j[f])) {
                    if (g.events)
                        for (e in g.events) n[e] ? m.event.remove(
                            d, e) : m.removeEvent(d, e, g.handle);
                    j[f] && (delete j[f], l ? delete d[i] :
                        typeof d.removeAttribute !== K ? d.removeAttribute(
                            i) : d[i] = null, c.push(f))
                }
        }
    }), m.fn.extend({
        text: function(a) {
            return V(this, function(a) {
                return void 0 === a ? m.text(this) :
                    this.empty().append((this[0] &&
                            this[0].ownerDocument || y)
                        .createTextNode(a))
            }, null, a, arguments.length)
        },
        append: function() {
            return this.domManip(arguments, function(a) {
                if (1 === this.nodeType || 11 === this.nodeType ||
                    9 === this.nodeType) {
                    var b = wa(this, a);
                    b.appendChild(a)
                }
            })
        },
        prepend: function() {
            return this.domManip(arguments, function(a) {
                if (1 === this.nodeType || 11 === this.nodeType ||
                    9 === this.nodeType) {
                    var b = wa(this, a);
                    b.insertBefore(a, b.firstChild)
                }
            })
        },
        before: function() {
            return this.domManip(arguments, function(a) {
                this.parentNode && this.parentNode.insertBefore(
                    a, this)
            })
        },
        after: function() {
            return this.domManip(arguments, function(a) {
                this.parentNode && this.parentNode.insertBefore(
                    a, this.nextSibling)
            })
        },
        remove: function(a, b) {
            for (var c, d = a ? m.filter(a, this) : this, e = 0; null !=
                (c = d[e]); e++) b || 1 !== c.nodeType || m.cleanData(
                ua(c)), c.parentNode && (b && m.contains(c.ownerDocument,
                    c) && za(ua(c, "script")), c.parentNode
                .removeChild(c));
            return this
        },
        empty: function() {
            for (var a, b = 0; null != (a = this[b]); b++) {
                1 === a.nodeType && m.cleanData(ua(a, !1));
                while (a.firstChild) a.removeChild(a.firstChild);
                a.options && m.nodeName(a, "select") && (a.options
                    .length = 0)
            }
            return this
        },
        clone: function(a, b) {
            return a = null == a ? !1 : a, b = null == b ? a :
                b, this.map(function() {
                    return m.clone(this, a, b)
                })
        },
        html: function(a) {
            return V(this, function(a) {
                var b = this[0] || {},
                    c = 0,
                    d = this.length;
                if (void 0 === a) return 1 === b.nodeType ?
                    b.innerHTML.replace(fa, "") :
                    void 0;
                if (!("string" != typeof a || ma.test(a) ||
                        !k.htmlSerialize && ga.test(a) ||
                        !k.leadingWhitespace && ha.test(
                            a) || ra[(ja.exec(a) || ["",
                            ""
                        ])[1].toLowerCase()])) {
                    a = a.replace(ia, "<$1></$2>");
                    try {
                        for (; d > c; c++) b = this[c] || {},
                            1 === b.nodeType && (m.cleanData(
                                    ua(b, !1)), b.innerHTML =
                                a);
                        b = 0
                    } catch (e) {}
                }
                b && this.empty().append(a)
            }, null, a, arguments.length)
        },
        replaceWith: function() {
            var a = arguments[0];
            return this.domManip(arguments, function(b) {
                    a = this.parentNode, m.cleanData(ua(
                        this)), a && a.replaceChild(b,
                        this)
                }), a && (a.length || a.nodeType) ? this : this
                .remove()
        },
        detach: function(a) {
            return this.remove(a, !0)
        },
        domManip: function(a, b) {
            a = e.apply([], a);
            var c, d, f, g, h, i, j = 0,
                l = this.length,
                n = this,
                o = l - 1,
                p = a[0],
                q = m.isFunction(p);
            if (q || l > 1 && "string" == typeof p && !k.checkClone &&
                na.test(p)) return this.each(function(c) {
                var d = n.eq(c);
                q && (a[0] = p.call(this, c, d.html())),
                    d.domManip(a, b)
            });
            if (l && (i = m.buildFragment(a, this[0].ownerDocument, !
                        1, this), c = i.firstChild, 1 === i.childNodes
                    .length && (i = c), c)) {
                for (g = m.map(ua(i, "script"), xa), f = g.length; l >
                    j; j++) d = i, j !== o && (d = m.clone(d, !
                    0, !0), f && m.merge(g, ua(d,
                    "script"))), b.call(this[j], d, j);
                if (f)
                    for (h = g[g.length - 1].ownerDocument, m.map(
                            g, ya), j = 0; f > j; j++) d = g[j],
                        oa.test(d.type || "") && !m._data(d,
                            "globalEval") && m.contains(h, d) &&
                        (d.src ? m._evalUrl && m._evalUrl(d.src) :
                            m.globalEval((d.text || d.textContent ||
                                d.innerHTML || "").replace(
                                qa, "")));
                i = c = null
            }
            return this
        }
    }), m.each({
        appendTo: "append",
        prependTo: "prepend",
        insertBefore: "before",
        insertAfter: "after",
        replaceAll: "replaceWith"
    }, function(a, b) {
        m.fn[a] = function(a) {
            for (var c, d = 0, e = [], g = m(a), h = g.length -
                    1; h >= d; d++) c = d === h ? this : this.clone(!
                0), m(g[d])[b](c), f.apply(e, c.get());
            return this.pushStack(e)
        }
    });
    var Ca, Da = {};

    function Ea(b, c) {
        var d, e = m(c.createElement(b)).appendTo(c.body),
            f = a.getDefaultComputedStyle && (d = a.getDefaultComputedStyle(
                e[0])) ? d.display : m.css(e[0], "display");
        return e.detach(), f
    }

    function Fa(a) {
        var b = y,
            c = Da[a];
        return c || (c = Ea(a, b), "none" !== c && c || (Ca = (Ca || m(
                "<iframe frameborder='0' width='0' height='0'/>"
            )).appendTo(b.documentElement), b = (Ca[0].contentWindow ||
                Ca[0].contentDocument).document, b.write(), b.close(),
            c = Ea(a, b), Ca.detach()), Da[a] = c), c
    }! function() {
        var a;
        k.shrinkWrapBlocks = function() {
            if (null != a) return a;
            a = !1;
            var b, c, d;
            return c = y.getElementsByTagName("body")[0], c && c.style ?
                (b = y.createElement("div"), d = y.createElement("div"),
                    d.style.cssText =
                    "position:absolute;border:0;width:0;height:0;top:0;left:-9999px",
                    c.appendChild(d).appendChild(b), typeof b.style.zoom !==
                    K && (b.style.cssText =
                        "-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:1px;width:1px;zoom:1",
                        b.appendChild(y.createElement("div")).style.width =
                        "5px", a = 3 !== b.offsetWidth), c.removeChild(
                        d), a) : void 0
        }
    }();
    var Ga = /^margin/,
        Ha = new RegExp("^(" + S + ")(?!px)[a-z%]+$", "i"),
        Ia, Ja, Ka = /^(top|right|bottom|left)$/;
    a.getComputedStyle ? (Ia = function(b) {
        return b.ownerDocument.defaultView.opener ? b.ownerDocument
            .defaultView.getComputedStyle(b, null) : a.getComputedStyle(
                b, null)
    }, Ja = function(a, b, c) {
        var d, e, f, g, h = a.style;
        return c = c || Ia(a), g = c ? c.getPropertyValue(b) || c[b] :
            void 0, c && ("" !== g || m.contains(a.ownerDocument, a) ||
                (g = m.style(a, b)), Ha.test(g) && Ga.test(b) && (d =
                    h.width, e = h.minWidth, f = h.maxWidth, h.minWidth =
                    h.maxWidth = h.width = g, g = c.width, h.width =
                    d, h.minWidth = e, h.maxWidth = f)), void 0 ===
            g ? g : g + ""
    }) : y.documentElement.currentStyle && (Ia = function(a) {
        return a.currentStyle
    }, Ja = function(a, b, c) {
        var d, e, f, g, h = a.style;
        return c = c || Ia(a), g = c ? c[b] : void 0, null == g &&
            h && h[b] && (g = h[b]), Ha.test(g) && !Ka.test(b) && (
                d = h.left, e = a.runtimeStyle, f = e && e.left, f &&
                (e.left = a.currentStyle.left), h.left = "fontSize" ===
                b ? "1em" : g, g = h.pixelLeft + "px", h.left = d,
                f && (e.left = f)), void 0 === g ? g : g + "" ||
            "auto"
    });

    function La(a, b) {
        return {
            get: function() {
                var c = a();
                if (null != c) return c ? void delete this.get : (this.get =
                    b).apply(this, arguments)
            }
        }
    }! function() {
        var b, c, d, e, f, g, h;
        if (b = y.createElement("div"), b.innerHTML =
            "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>",
            d = b.getElementsByTagName("a")[0], c = d && d.style) {
            c.cssText = "float:left;opacity:.5", k.opacity = "0.5" === c.opacity,
                k.cssFloat = !!c.cssFloat, b.style.backgroundClip =
                "content-box", b.cloneNode(!0).style.backgroundClip = "", k
                .clearCloneStyle = "content-box" === b.style.backgroundClip,
                k.boxSizing = "" === c.boxSizing || "" === c.MozBoxSizing ||
                "" === c.WebkitBoxSizing, m.extend(k, {
                    reliableHiddenOffsets: function() {
                        return null == g && i(), g
                    },
                    boxSizingReliable: function() {
                        return null == f && i(), f
                    },
                    pixelPosition: function() {
                        return null == e && i(), e
                    },
                    reliableMarginRight: function() {
                        return null == h && i(), h
                    }
                });

            function i() {
                var b, c, d, i;
                c = y.getElementsByTagName("body")[0], c && c.style && (b =
                    y.createElement("div"), d = y.createElement("div"),
                    d.style.cssText =
                    "position:absolute;border:0;width:0;height:0;top:0;left:-9999px",
                    c.appendChild(d).appendChild(b), b.style.cssText =
                    "-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;display:block;margin-top:1%;top:1%;border:1px;padding:1px;width:4px;position:absolute",
                    e = f = !1, h = !0, a.getComputedStyle && (e = "1%" !==
                        (a.getComputedStyle(b, null) || {}).top, f =
                        "4px" === (a.getComputedStyle(b, null) || {
                            width: "4px"
                        }).width, i = b.appendChild(y.createElement(
                            "div")), i.style.cssText = b.style.cssText =
                        "-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0",
                        i.style.marginRight = i.style.width = "0", b.style
                        .width = "1px", h = !parseFloat((a.getComputedStyle(
                            i, null) || {}).marginRight), b.removeChild(
                            i)), b.innerHTML =
                    "<table><tr><td></td><td>t</td></tr></table>", i =
                    b.getElementsByTagName("td"), i[0].style.cssText =
                    "margin:0;border:0;padding:0;display:none", g = 0 ===
                    i[0].offsetHeight, g && (i[0].style.display = "", i[
                        1].style.display = "none", g = 0 === i[0].offsetHeight),
                    c.removeChild(d))
            }
        }
    }(), m.swap = function(a, b, c, d) {
        var e, f, g = {};
        for (f in b) g[f] = a.style[f], a.style[f] = b[f];
        e = c.apply(a, d || []);
        for (f in b) a.style[f] = g[f];
        return e
    };
    var Ma = /alpha\([^)]*\)/i,
        Na = /opacity\s*=\s*([^)]*)/,
        Oa = /^(none|table(?!-c[ea]).+)/,
        Pa = new RegExp("^(" + S + ")(.*)$", "i"),
        Qa = new RegExp("^([+-])=(" + S + ")", "i"),
        Ra = {
            position: "absolute",
            visibility: "hidden",
            display: "block"
        },
        Sa = {
            letterSpacing: "0",
            fontWeight: "400"
        },
        Ta = ["Webkit", "O", "Moz", "ms"];

    function Ua(a, b) {
        if (b in a) return b;
        var c = b.charAt(0).toUpperCase() + b.slice(1),
            d = b,
            e = Ta.length;
        while (e--)
            if (b = Ta[e] + c, b in a) return b;
        return d
    }

    function Va(a, b) {
        for (var c, d, e, f = [], g = 0, h = a.length; h > g; g++) d = a[g],
            d.style && (f[g] = m._data(d, "olddisplay"), c = d.style.display,
                b ? (f[g] || "none" !== c || (d.style.display = ""), "" ===
                    d.style.display && U(d) && (f[g] = m._data(d,
                        "olddisplay", Fa(d.nodeName)))) : (e = U(d), (c &&
                    "none" !== c || !e) && m._data(d, "olddisplay", e ?
                    c : m.css(d, "display"))));
        for (g = 0; h > g; g++) d = a[g], d.style && (b && "none" !== d.style
            .display && "" !== d.style.display || (d.style.display = b ?
                f[g] || "" : "none"));
        return a
    }

    function Wa(a, b, c) {
        var d = Pa.exec(b);
        return d ? Math.max(0, d[1] - (c || 0)) + (d[2] || "px") : b
    }

    function Xa(a, b, c, d, e) {
        for (var f = c === (d ? "border" : "content") ? 4 : "width" === b ?
                1 : 0, g = 0; 4 > f; f += 2) "margin" === c && (g += m.css(
            a, c + T[f], !0, e)), d ? ("content" === c && (g -= m.css(a,
            "padding" + T[f], !0, e)), "margin" !== c && (g -= m.css(
            a, "border" + T[f] + "Width", !0, e))) : (g += m.css(a,
            "padding" + T[f], !0, e), "padding" !== c && (g += m.css(
            a, "border" + T[f] + "Width", !0, e)));
        return g
    }

    function Ya(a, b, c) {
        var d = !0,
            e = "width" === b ? a.offsetWidth : a.offsetHeight,
            f = Ia(a),
            g = k.boxSizing && "border-box" === m.css(a, "boxSizing", !1, f);
        if (0 >= e || null == e) {
            if (e = Ja(a, b, f), (0 > e || null == e) && (e = a.style[b]),
                Ha.test(e)) return e;
            d = g && (k.boxSizingReliable() || e === a.style[b]), e =
                parseFloat(e) || 0
        }
        return e + Xa(a, b, c || (g ? "border" : "content"), d, f) + "px"
    }
    m.extend({
        cssHooks: {
            opacity: {
                get: function(a, b) {
                    if (b) {
                        var c = Ja(a, "opacity");
                        return "" === c ? "1" : c
                    }
                }
            }
        },
        cssNumber: {
            columnCount: !0,
            fillOpacity: !0,
            flexGrow: !0,
            flexShrink: !0,
            fontWeight: !0,
            lineHeight: !0,
            opacity: !0,
            order: !0,
            orphans: !0,
            widows: !0,
            zIndex: !0,
            zoom: !0
        },
        cssProps: {
            "float": k.cssFloat ? "cssFloat" : "styleFloat"
        },
        style: function(a, b, c, d) {
            if (a && 3 !== a.nodeType && 8 !== a.nodeType && a.style) {
                var e, f, g, h = m.camelCase(b),
                    i = a.style;
                if (b = m.cssProps[h] || (m.cssProps[h] = Ua(i,
                        h)), g = m.cssHooks[b] || m.cssHooks[h],
                    void 0 === c) return g && "get" in g &&
                    void 0 !== (e = g.get(a, !1, d)) ? e :
                    i[b];
                if (f = typeof c, "string" === f && (e = Qa.exec(
                        c)) && (c = (e[1] + 1) * e[2] +
                        parseFloat(m.css(a, b)), f = "number"),
                    null != c && c === c && ("number" !== f ||
                        m.cssNumber[h] || (c += "px"), k.clearCloneStyle ||
                        "" !== c || 0 !== b.indexOf(
                            "background") || (i[b] = "inherit"), !
                        (g && "set" in g && void 0 === (c = g.set(
                            a, c, d))))) try {
                    i[b] = c
                } catch (j) {}
            }
        },
        css: function(a, b, c, d) {
            var e, f, g, h = m.camelCase(b);
            return b = m.cssProps[h] || (m.cssProps[h] = Ua(a.style,
                    h)), g = m.cssHooks[b] || m.cssHooks[h], g &&
                "get" in g && (f = g.get(a, !0, c)), void 0 ===
                f && (f = Ja(a, b, d)), "normal" === f && b in
                Sa && (f = Sa[b]), "" === c || c ? (e =
                    parseFloat(f), c === !0 || m.isNumeric(e) ?
                    e || 0 : f) : f
        }
    }), m.each(["height", "width"], function(a, b) {
        m.cssHooks[b] = {
            get: function(a, c, d) {
                return c ? Oa.test(m.css(a, "display")) &&
                    0 === a.offsetWidth ? m.swap(a, Ra,
                        function() {
                            return Ya(a, b, d)
                        }) : Ya(a, b, d) : void 0
            },
            set: function(a, c, d) {
                var e = d && Ia(a);
                return Wa(a, c, d ? Xa(a, b, d, k.boxSizing &&
                    "border-box" === m.css(a,
                        "boxSizing", !1, e), e) : 0)
            }
        }
    }), k.opacity || (m.cssHooks.opacity = {
        get: function(a, b) {
            return Na.test((b && a.currentStyle ? a.currentStyle
                    .filter : a.style.filter) || "") ? .01 *
                parseFloat(RegExp.$1) + "" : b ? "1" : ""
        },
        set: function(a, b) {
            var c = a.style,
                d = a.currentStyle,
                e = m.isNumeric(b) ? "alpha(opacity=" + 100 * b +
                ")" : "",
                f = d && d.filter || c.filter || "";
            c.zoom = 1, (b >= 1 || "" === b) && "" === m.trim(f
                .replace(Ma, "")) && c.removeAttribute && (
                c.removeAttribute("filter"), "" === b || d &&
                !d.filter) || (c.filter = Ma.test(f) ? f.replace(
                Ma, e) : f + " " + e)
        }
    }), m.cssHooks.marginRight = La(k.reliableMarginRight, function(a,
        b) {
        return b ? m.swap(a, {
            display: "inline-block"
        }, Ja, [a, "marginRight"]) : void 0
    }), m.each({
        margin: "",
        padding: "",
        border: "Width"
    }, function(a, b) {
        m.cssHooks[a + b] = {
            expand: function(c) {
                for (var d = 0, e = {}, f = "string" ==
                        typeof c ? c.split(" ") : [c]; 4 >
                    d; d++) e[a + T[d] + b] = f[d] || f[d -
                    2] || f[0];
                return e
            }
        }, Ga.test(a) || (m.cssHooks[a + b].set = Wa)
    }), m.fn.extend({
        css: function(a, b) {
            return V(this, function(a, b, c) {
                var d, e, f = {},
                    g = 0;
                if (m.isArray(b)) {
                    for (d = Ia(a), e = b.length; e > g; g++)
                        f[b[g]] = m.css(a, b[g], !1, d);
                    return f
                }
                return void 0 !== c ? m.style(a, b, c) :
                    m.css(a, b)
            }, a, b, arguments.length > 1)
        },
        show: function() {
            return Va(this, !0)
        },
        hide: function() {
            return Va(this)
        },
        toggle: function(a) {
            return "boolean" == typeof a ? a ? this.show() :
                this.hide() : this.each(function() {
                    U(this) ? m(this).show() : m(this).hide()
                })
        }
    });

    function Za(a, b, c, d, e) {
        return new Za.prototype.init(a, b, c, d, e)
    }
    m.Tween = Za, Za.prototype = {
        constructor: Za,
        init: function(a, b, c, d, e, f) {
            this.elem = a, this.prop = c, this.easing = e ||
                "swing", this.options = b, this.start = this.now =
                this.cur(), this.end = d, this.unit = f || (m.cssNumber[
                    c] ? "" : "px")
        },
        cur: function() {
            var a = Za.propHooks[this.prop];
            return a && a.get ? a.get(this) : Za.propHooks._default
                .get(this)
        },
        run: function(a) {
            var b, c = Za.propHooks[this.prop];
            return this.options.duration ? this.pos = b = m.easing[
                    this.easing](a, this.options.duration * a, 0, 1,
                    this.options.duration) : this.pos = b = a, this
                .now = (this.end - this.start) * b + this.start,
                this.options.step && this.options.step.call(this.elem,
                    this.now, this), c && c.set ? c.set(this) : Za.propHooks
                ._default.set(this), this
        }
    }, Za.prototype.init.prototype = Za.prototype, Za.propHooks = {
        _default: {
            get: function(a) {
                var b;
                return null == a.elem[a.prop] || a.elem.style &&
                    null != a.elem.style[a.prop] ? (b = m.css(a.elem,
                        a.prop, ""), b && "auto" !== b ? b : 0) : a
                    .elem[a.prop]
            },
            set: function(a) {
                m.fx.step[a.prop] ? m.fx.step[a.prop](a) : a.elem.style &&
                    (null != a.elem.style[m.cssProps[a.prop]] || m.cssHooks[
                        a.prop]) ? m.style(a.elem, a.prop, a.now +
                        a.unit) : a.elem[a.prop] = a.now
            }
        }
    }, Za.propHooks.scrollTop = Za.propHooks.scrollLeft = {
        set: function(a) {
            a.elem.nodeType && a.elem.parentNode && (a.elem[a.prop] =
                a.now)
        }
    }, m.easing = {
        linear: function(a) {
            return a
        },
        swing: function(a) {
            return .5 - Math.cos(a * Math.PI) / 2
        }
    }, m.fx = Za.prototype.init, m.fx.step = {};
    var $a, _a, ab = /^(?:toggle|show|hide)$/,
        bb = new RegExp("^(?:([+-])=|)(" + S + ")([a-z%]*)$", "i"),
        cb = /queueHooks$/,
        db = [ib],
        eb = {
            "*": [function(a, b) {
                var c = this.createTween(a, b),
                    d = c.cur(),
                    e = bb.exec(b),
                    f = e && e[3] || (m.cssNumber[a] ? "" : "px"),
                    g = (m.cssNumber[a] || "px" !== f && +d) && bb.exec(
                        m.css(c.elem, a)),
                    h = 1,
                    i = 20;
                if (g && g[3] !== f) {
                    f = f || g[3], e = e || [], g = +d || 1;
                    do h = h || ".5", g /= h, m.style(c.elem, a, g +
                        f); while (h !== (h = c.cur() / d) && 1 !==
                        h && --i)
                }
                return e && (g = c.start = +g || +d || 0, c.unit =
                    f, c.end = e[1] ? g + (e[1] + 1) * e[2] : +
                    e[2]), c
            }]
        };

    function fb() {
        return setTimeout(function() {
            $a = void 0
        }), $a = m.now()
    }

    function gb(a, b) {
        var c, d = {
                height: a
            },
            e = 0;
        for (b = b ? 1 : 0; 4 > e; e += 2 - b) c = T[e], d["margin" + c] =
            d["padding" + c] = a;
        return b && (d.opacity = d.width = a), d
    }

    function hb(a, b, c) {
        for (var d, e = (eb[b] || []).concat(eb["*"]), f = 0, g = e.length; g >
            f; f++)
            if (d = e[f].call(c, b, a)) return d
    }

    function ib(a, b, c) {
        var d, e, f, g, h, i, j, l, n = this,
            o = {},
            p = a.style,
            q = a.nodeType && U(a),
            r = m._data(a, "fxshow");
        c.queue || (h = m._queueHooks(a, "fx"), null == h.unqueued && (h.unqueued =
            0, i = h.empty.fire, h.empty.fire = function() {
                h.unqueued || i()
            }), h.unqueued++, n.always(function() {
            n.always(function() {
                h.unqueued--, m.queue(a, "fx").length ||
                    h.empty.fire()
            })
        })), 1 === a.nodeType && ("height" in b || "width" in b) && (c.overflow = [
                p.overflow, p.overflowX, p.overflowY
            ], j = m.css(a, "display"), l = "none" === j ? m._data(a,
                "olddisplay") || Fa(a.nodeName) : j, "inline" === l &&
            "none" === m.css(a, "float") && (k.inlineBlockNeedsLayout &&
                "inline" !== Fa(a.nodeName) ? p.zoom = 1 : p.display =
                "inline-block")), c.overflow && (p.overflow = "hidden",
            k.shrinkWrapBlocks() || n.always(function() {
                p.overflow = c.overflow[0], p.overflowX = c.overflow[
                    1], p.overflowY = c.overflow[2]
            }));
        for (d in b)
            if (e = b[d], ab.exec(e)) {
                if (delete b[d], f = f || "toggle" === e, e === (q ? "hide" :
                        "show")) {
                    if ("show" !== e || !r || void 0 === r[d]) continue;
                    q = !0
                }
                o[d] = r && r[d] || m.style(a, d)
            } else j = void 0;
        if (m.isEmptyObject(o)) "inline" === ("none" === j ? Fa(a.nodeName) :
            j) && (p.display = j);
        else {
            r ? "hidden" in r && (q = r.hidden) : r = m._data(a, "fxshow", {}),
                f && (r.hidden = !q), q ? m(a).show() : n.done(function() {
                    m(a).hide()
                }), n.done(function() {
                    var b;
                    m._removeData(a, "fxshow");
                    for (b in o) m.style(a, b, o[b])
                });
            for (d in o) g = hb(q ? r[d] : 0, d, n), d in r || (r[d] = g.start,
                q && (g.end = g.start, g.start = "width" === d ||
                    "height" === d ? 1 : 0))
        }
    }

    function jb(a, b) {
        var c, d, e, f, g;
        for (c in a)
            if (d = m.camelCase(c), e = b[d], f = a[c], m.isArray(f) && (e =
                    f[1], f = a[c] = f[0]), c !== d && (a[d] = f, delete a[
                    c]), g = m.cssHooks[d], g && "expand" in g) {
                f = g.expand(f), delete a[d];
                for (c in f) c in a || (a[c] = f[c], b[c] = e)
            } else b[d] = e
    }

    function kb(a, b, c) {
        var d, e, f = 0,
            g = db.length,
            h = m.Deferred().always(function() {
                delete i.elem
            }),
            i = function() {
                if (e) return !1;
                for (var b = $a || fb(), c = Math.max(0, j.startTime + j.duration -
                            b), d = c / j.duration || 0, f = 1 - d, g = 0,
                        i = j.tweens.length; i > g; g++) j.tweens[g].run(f);
                return h.notifyWith(a, [j, f, c]), 1 > f && i ? c : (h.resolveWith(
                    a, [j]), !1)
            },
            j = h.promise({
                elem: a,
                props: m.extend({}, b),
                opts: m.extend(!0, {
                    specialEasing: {}
                }, c),
                originalProperties: b,
                originalOptions: c,
                startTime: $a || fb(),
                duration: c.duration,
                tweens: [],
                createTween: function(b, c) {
                    var d = m.Tween(a, j.opts, b, c, j.opts.specialEasing[
                        b] || j.opts.easing);
                    return j.tweens.push(d), d
                },
                stop: function(b) {
                    var c = 0,
                        d = b ? j.tweens.length : 0;
                    if (e) return this;
                    for (e = !0; d > c; c++) j.tweens[c].run(1);
                    return b ? h.resolveWith(a, [j, b]) : h.rejectWith(
                        a, [j, b]), this
                }
            }),
            k = j.props;
        for (jb(k, j.opts.specialEasing); g > f; f++)
            if (d = db[f].call(j, a, k, j.opts)) return d;
        return m.map(k, hb, j), m.isFunction(j.opts.start) && j.opts.start.call(
                a, j), m.fx.timer(m.extend(i, {
                elem: a,
                anim: j,
                queue: j.opts.queue
            })), j.progress(j.opts.progress).done(j.opts.done, j.opts.complete)
            .fail(j.opts.fail).always(j.opts.always)
    }
    m.Animation = m.extend(kb, {
            tweener: function(a, b) {
                m.isFunction(a) ? (b = a, a = ["*"]) : a = a.split(
                    " ");
                for (var c, d = 0, e = a.length; e > d; d++) c = a[
                    d], eb[c] = eb[c] || [], eb[c].unshift(b)
            },
            prefilter: function(a, b) {
                b ? db.unshift(a) : db.push(a)
            }
        }), m.speed = function(a, b, c) {
            var d = a && "object" == typeof a ? m.extend({}, a) : {
                complete: c || !c && b || m.isFunction(a) && a,
                duration: a,
                easing: c && b || b && !m.isFunction(b) && b
            };
            return d.duration = m.fx.off ? 0 : "number" == typeof d.duration ?
                d.duration : d.duration in m.fx.speeds ? m.fx.speeds[d.duration] :
                m.fx.speeds._default, (null == d.queue || d.queue === !0) &&
                (d.queue = "fx"), d.old = d.complete, d.complete = function() {
                    m.isFunction(d.old) && d.old.call(this), d.queue && m.dequeue(
                        this, d.queue)
                }, d
        }, m.fn.extend({
            fadeTo: function(a, b, c, d) {
                return this.filter(U).css("opacity", 0).show().end()
                    .animate({
                        opacity: b
                    }, a, c, d)
            },
            animate: function(a, b, c, d) {
                var e = m.isEmptyObject(a),
                    f = m.speed(b, c, d),
                    g = function() {
                        var b = kb(this, m.extend({}, a), f);
                        (e || m._data(this, "finish")) && b.stop(!0)
                    };
                return g.finish = g, e || f.queue === !1 ? this.each(
                    g) : this.queue(f.queue, g)
            },
            stop: function(a, b, c) {
                var d = function(a) {
                    var b = a.stop;
                    delete a.stop, b(c)
                };
                return "string" != typeof a && (c = b, b = a, a =
                    void 0), b && a !== !1 && this.queue(a ||
                    "fx", []), this.each(function() {
                    var b = !0,
                        e = null != a && a + "queueHooks",
                        f = m.timers,
                        g = m._data(this);
                    if (e) g[e] && g[e].stop && d(g[e]);
                    else
                        for (e in g) g[e] && g[e].stop &&
                            cb.test(e) && d(g[e]);
                    for (e = f.length; e--;) f[e].elem !==
                        this || null != a && f[e].queue !==
                        a || (f[e].anim.stop(c), b = !1, f.splice(
                            e, 1));
                    (b || !c) && m.dequeue(this, a)
                })
            },
            finish: function(a) {
                return a !== !1 && (a = a || "fx"), this.each(
                    function() {
                        var b, c = m._data(this),
                            d = c[a + "queue"],
                            e = c[a + "queueHooks"],
                            f = m.timers,
                            g = d ? d.length : 0;
                        for (c.finish = !0, m.queue(this, a, []),
                            e && e.stop && e.stop.call(this, !0),
                            b = f.length; b--;) f[b].elem ===
                            this && f[b].queue === a && (f[b].anim
                                .stop(!0), f.splice(b, 1));
                        for (b = 0; g > b; b++) d[b] && d[b].finish &&
                            d[b].finish.call(this);
                        delete c.finish
                    })
            }
        }), m.each(["toggle", "show", "hide"], function(a, b) {
            var c = m.fn[b];
            m.fn[b] = function(a, d, e) {
                return null == a || "boolean" == typeof a ? c.apply(
                    this, arguments) : this.animate(gb(b, !0),
                    a, d, e)
            }
        }), m.each({
            slideDown: gb("show"),
            slideUp: gb("hide"),
            slideToggle: gb("toggle"),
            fadeIn: {
                opacity: "show"
            },
            fadeOut: {
                opacity: "hide"
            },
            fadeToggle: {
                opacity: "toggle"
            }
        }, function(a, b) {
            m.fn[a] = function(a, c, d) {
                return this.animate(b, a, c, d)
            }
        }), m.timers = [], m.fx.tick = function() {
            var a, b = m.timers,
                c = 0;
            for ($a = m.now(); c < b.length; c++) a = b[c], a() || b[c] !==
                a || b.splice(c--, 1);
            b.length || m.fx.stop(), $a = void 0
        }, m.fx.timer = function(a) {
            m.timers.push(a), a() ? m.fx.start() : m.timers.pop()
        }, m.fx.interval = 13, m.fx.start = function() {
            _a || (_a = setInterval(m.fx.tick, m.fx.interval))
        }, m.fx.stop = function() {
            clearInterval(_a), _a = null
        }, m.fx.speeds = {
            slow: 600,
            fast: 200,
            _default: 400
        }, m.fn.delay = function(a, b) {
            return a = m.fx ? m.fx.speeds[a] || a : a, b = b || "fx", this.queue(
                b,
                function(b, c) {
                    var d = setTimeout(b, a);
                    c.stop = function() {
                        clearTimeout(d)
                    }
                })
        },
        function() {
            var a, b, c, d, e;
            b = y.createElement("div"), b.setAttribute("className", "t"), b
                .innerHTML =
                "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>",
                d = b.getElementsByTagName("a")[0], c = y.createElement(
                    "select"), e = c.appendChild(y.createElement("option")),
                a = b.getElementsByTagName("input")[0], d.style.cssText =
                "top:1px", k.getSetAttribute = "t" !== b.className, k.style =
                /top/.test(d.getAttribute("style")), k.hrefNormalized =
                "/a" === d.getAttribute("href"), k.checkOn = !!a.value, k.optSelected =
                e.selected, k.enctype = !!y.createElement("form").enctype,
                c.disabled = !0, k.optDisabled = !e.disabled, a = y.createElement(
                    "input"), a.setAttribute("value", ""), k.input = "" ===
                a.getAttribute("value"), a.value = "t", a.setAttribute(
                    "type", "radio"), k.radioValue = "t" === a.value
        }();
    var lb = /\r/g;
    m.fn.extend({
        val: function(a) {
            var b, c, d, e = this[0]; {
                if (arguments.length) return d = m.isFunction(a),
                    this.each(function(c) {
                        var e;
                        1 === this.nodeType && (e = d ?
                            a.call(this, c, m(this)
                                .val()) : a, null ==
                            e ? e = "" : "number" ==
                            typeof e ? e += "" : m.isArray(
                                e) && (e = m.map(e,
                                function(a) {
                                    return null ==
                                        a ? "" :
                                        a + ""
                                })), b = m.valHooks[
                                this.type] || m.valHooks[
                                this.nodeName.toLowerCase()
                            ], b && "set" in b &&
                            void 0 !== b.set(this,
                                e, "value") || (
                                this.value = e))
                    });
                if (e) return b = m.valHooks[e.type] || m.valHooks[
                        e.nodeName.toLowerCase()], b &&
                    "get" in b && void 0 !== (c = b.get(e,
                        "value")) ? c : (c = e.value,
                        "string" == typeof c ? c.replace(lb,
                            "") : null == c ? "" : c)
            }
        }
    }), m.extend({
        valHooks: {
            option: {
                get: function(a) {
                    var b = m.find.attr(a, "value");
                    return null != b ? b : m.trim(m.text(a))
                }
            },
            select: {
                get: function(a) {
                    for (var b, c, d = a.options, e = a.selectedIndex,
                            f = "select-one" === a.type || 0 >
                            e, g = f ? null : [], h = f ? e + 1 :
                            d.length, i = 0 > e ? h : f ? e : 0; h >
                        i; i++)
                        if (c = d[i], !(!c.selected && i !== e ||
                                (k.optDisabled ? c.disabled :
                                    null !== c.getAttribute(
                                        "disabled")) || c.parentNode
                                .disabled && m.nodeName(c.parentNode,
                                    "optgroup"))) {
                            if (b = m(c).val(), f) return b;
                            g.push(b)
                        }
                    return g
                },
                set: function(a, b) {
                    var c, d, e = a.options,
                        f = m.makeArray(b),
                        g = e.length;
                    while (g--)
                        if (d = e[g], m.inArray(m.valHooks.option
                                .get(d), f) >= 0) try {
                            d.selected = c = !0
                        } catch (h) {
                            d.scrollHeight
                        } else d.selected = !1;
                    return c || (a.selectedIndex = -1), e
                }
            }
        }
    }), m.each(["radio", "checkbox"], function() {
        m.valHooks[this] = {
            set: function(a, b) {
                return m.isArray(b) ? a.checked = m.inArray(
                    m(a).val(), b) >= 0 : void 0
            }
        }, k.checkOn || (m.valHooks[this].get = function(a) {
            return null === a.getAttribute("value") ? "on" :
                a.value
        })
    });
    var mb, nb, ob = m.expr.attrHandle,
        pb = /^(?:checked|selected)$/i,
        qb = k.getSetAttribute,
        rb = k.input;
    m.fn.extend({
        attr: function(a, b) {
            return V(this, m.attr, a, b, arguments.length > 1)
        },
        removeAttr: function(a) {
            return this.each(function() {
                m.removeAttr(this, a)
            })
        }
    }), m.extend({
        attr: function(a, b, c) {
            var d, e, f = a.nodeType;
            if (a && 3 !== f && 8 !== f && 2 !== f) return
                typeof a.getAttribute === K ? m.prop(a, b,
                    c) : (1 === f && m.isXMLDoc(a) || (b =
                        b.toLowerCase(), d = m.attrHooks[b] ||
                        (m.expr.match.bool.test(b) ? nb :
                            mb)), void 0 === c ? d && "get" in
                    d && null !== (e = d.get(a, b)) ? e : (
                        e = m.find.attr(a, b), null == e ?
                        void 0 : e) : null !== c ? d &&
                    "set" in d && void 0 !== (e = d.set(a,
                        c, b)) ? e : (a.setAttribute(b, c +
                        ""), c) : void m.removeAttr(a, b))
        },
        removeAttr: function(a, b) {
            var c, d, e = 0,
                f = b && b.match(E);
            if (f && 1 === a.nodeType)
                while (c = f[e++]) d = m.propFix[c] || c, m.expr
                    .match.bool.test(c) ? rb && qb || !pb.test(
                        c) ? a[d] = !1 : a[m.camelCase(
                        "default-" + c)] = a[d] = !1 : m.attr(a,
                        c, ""), a.removeAttribute(qb ? c : d)
        },
        attrHooks: {
            type: {
                set: function(a, b) {
                    if (!k.radioValue && "radio" === b && m.nodeName(
                            a, "input")) {
                        var c = a.value;
                        return a.setAttribute("type", b), c &&
                            (a.value = c), b
                    }
                }
            }
        }
    }), nb = {
        set: function(a, b, c) {
            return b === !1 ? m.removeAttr(a, c) : rb && qb || !pb.test(
                    c) ? a.setAttribute(!qb && m.propFix[c] || c, c) :
                a[m.camelCase("default-" + c)] = a[c] = !0, c
        }
    }, m.each(m.expr.match.bool.source.match(/\w+/g), function(a, b) {
        var c = ob[b] || m.find.attr;
        ob[b] = rb && qb || !pb.test(b) ? function(a, b, d) {
            var e, f;
            return d || (f = ob[b], ob[b] = e, e = null != c(a,
                    b, d) ? b.toLowerCase() : null, ob[b] =
                f), e
        } : function(a, b, c) {
            return c ? void 0 : a[m.camelCase("default-" + b)] ?
                b.toLowerCase() : null
        }
    }), rb && qb || (m.attrHooks.value = {
        set: function(a, b, c) {
            return m.nodeName(a, "input") ? void(a.defaultValue =
                b) : mb && mb.set(a, b, c)
        }
    }), qb || (mb = {
        set: function(a, b, c) {
            var d = a.getAttributeNode(c);
            return d || a.setAttributeNode(d = a.ownerDocument.createAttribute(
                    c)), d.value = b += "", "value" === c || b ===
                a.getAttribute(c) ? b : void 0
        }
    }, ob.id = ob.name = ob.coords = function(a, b, c) {
        var d;
        return c ? void 0 : (d = a.getAttributeNode(b)) && "" !== d
            .value ? d.value : null
    }, m.valHooks.button = {
        get: function(a, b) {
            var c = a.getAttributeNode(b);
            return c && c.specified ? c.value : void 0
        },
        set: mb.set
    }, m.attrHooks.contenteditable = {
        set: function(a, b, c) {
            mb.set(a, "" === b ? !1 : b, c)
        }
    }, m.each(["width", "height"], function(a, b) {
        m.attrHooks[b] = {
            set: function(a, c) {
                return "" === c ? (a.setAttribute(b,
                    "auto"), c) : void 0
            }
        }
    })), k.style || (m.attrHooks.style = {
        get: function(a) {
            return a.style.cssText || void 0
        },
        set: function(a, b) {
            return a.style.cssText = b + ""
        }
    });
    var sb = /^(?:input|select|textarea|button|object)$/i,
        tb = /^(?:a|area)$/i;
    m.fn.extend({
        prop: function(a, b) {
            return V(this, m.prop, a, b, arguments.length > 1)
        },
        removeProp: function(a) {
            return a = m.propFix[a] || a, this.each(function() {
                try {
                    this[a] = void 0, delete this[a]
                } catch (b) {}
            })
        }
    }), m.extend({
        propFix: {
            "for": "htmlFor",
            "class": "className"
        },
        prop: function(a, b, c) {
            var d, e, f, g = a.nodeType;
            if (a && 3 !== g && 8 !== g && 2 !== g) return f =
                1 !== g || !m.isXMLDoc(a), f && (b = m.propFix[
                    b] || b, e = m.propHooks[b]), void 0 !==
                c ? e && "set" in e && void 0 !== (d = e.set(
                    a, c, b)) ? d : a[b] = c : e && "get" in
                e && null !== (d = e.get(a, b)) ? d : a[b]
        },
        propHooks: {
            tabIndex: {
                get: function(a) {
                    var b = m.find.attr(a, "tabindex");
                    return b ? parseInt(b, 10) : sb.test(a.nodeName) ||
                        tb.test(a.nodeName) && a.href ? 0 : -1
                }
            }
        }
    }), k.hrefNormalized || m.each(["href", "src"], function(a, b) {
        m.propHooks[b] = {
            get: function(a) {
                return a.getAttribute(b, 4)
            }
        }
    }), k.optSelected || (m.propHooks.selected = {
        get: function(a) {
            var b = a.parentNode;
            return b && (b.selectedIndex, b.parentNode && b.parentNode
                .selectedIndex), null
        }
    }), m.each(["tabIndex", "readOnly", "maxLength", "cellSpacing",
        "cellPadding", "rowSpan", "colSpan", "useMap",
        "frameBorder", "contentEditable"
    ], function() {
        m.propFix[this.toLowerCase()] = this
    }), k.enctype || (m.propFix.enctype = "encoding");
    var ub = /[\t\r\n\f]/g;
    m.fn.extend({
        addClass: function(a) {
            var b, c, d, e, f, g, h = 0,
                i = this.length,
                j = "string" == typeof a && a;
            if (m.isFunction(a)) return this.each(function(b) {
                m(this).addClass(a.call(this, b,
                    this.className))
            });
            if (j)
                for (b = (a || "").match(E) || []; i > h; h++)
                    if (c = this[h], d = 1 === c.nodeType && (c
                            .className ? (" " + c.className +
                                " ").replace(ub, " ") : " ")) {
                        f = 0;
                        while (e = b[f++]) d.indexOf(" " + e +
                            " ") < 0 && (d += e + " ");
                        g = m.trim(d), c.className !== g && (c.className =
                            g)
                    }
            return this
        },
        removeClass: function(a) {
            var b, c, d, e, f, g, h = 0,
                i = this.length,
                j = 0 === arguments.length || "string" ==
                typeof a && a;
            if (m.isFunction(a)) return this.each(function(b) {
                m(this).removeClass(a.call(this, b,
                    this.className))
            });
            if (j)
                for (b = (a || "").match(E) || []; i > h; h++)
                    if (c = this[h], d = 1 === c.nodeType && (c
                            .className ? (" " + c.className +
                                " ").replace(ub, " ") : "")) {
                        f = 0;
                        while (e = b[f++])
                            while (d.indexOf(" " + e + " ") >=
                                0) d = d.replace(" " + e + " ",
                                " ");
                        g = a ? m.trim(d) : "", c.className !==
                            g && (c.className = g)
                    }
            return this
        },
        toggleClass: function(a, b) {
            var c = typeof a;
            return "boolean" == typeof b && "string" === c ? b ?
                this.addClass(a) : this.removeClass(a) : this.each(
                    m.isFunction(a) ? function(c) {
                        m(this).toggleClass(a.call(this, c,
                            this.className, b), b)
                    } : function() {
                        if ("string" === c) {
                            var b, d = 0,
                                e = m(this),
                                f = a.match(E) || [];
                            while (b = f[d++]) e.hasClass(b) ?
                                e.removeClass(b) : e.addClass(b)
                        } else(c === K || "boolean" === c) && (
                            this.className && m._data(this,
                                "__className__", this.className
                            ), this.className = this.className ||
                            a === !1 ? "" : m._data(this,
                                "__className__") || "")
                    })
        },
        hasClass: function(a) {
            for (var b = " " + a + " ", c = 0, d = this.length; d >
                c; c++)
                if (1 === this[c].nodeType && (" " + this[c].className +
                        " ").replace(ub, " ").indexOf(b) >= 0)
                    return !0;
            return !1
        }
    }), m.each(
        "blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu"
        .split(" "),
        function(a, b) {
            m.fn[b] = function(a, c) {
                return arguments.length > 0 ? this.on(b, null, a, c) :
                    this.trigger(b)
            }
        }), m.fn.extend({
        hover: function(a, b) {
            return this.mouseenter(a).mouseleave(b || a)
        },
        bind: function(a, b, c) {
            return this.on(a, null, b, c)
        },
        unbind: function(a, b) {
            return this.off(a, null, b)
        },
        delegate: function(a, b, c, d) {
            return this.on(b, a, c, d)
        },
        undelegate: function(a, b, c) {
            return 1 === arguments.length ? this.off(a, "**") :
                this.off(b, a || "**", c)
        }
    });
    var vb = m.now(),
        wb = /\?/,
        xb =
        /(,)|(\[|{)|(}|])|"(?:[^"\\\r\n]|\\["\\\/bfnrt]|\\u[\da-fA-F]{4})*"\s*:?|true|false|null|-?(?!0\d)\d+(?:\.\d+|)(?:[eE][+-]?\d+|)/g;
    m.parseJSON = function(b) {
        if (a.JSON && a.JSON.parse) return a.JSON.parse(b + "");
        var c, d = null,
            e = m.trim(b + "");
        return e && !m.trim(e.replace(xb, function(a, b, e, f) {
            return c && b && (d = 0), 0 === d ? a : (c = e ||
                b, d += !f - !e, "")
        })) ? Function("return " + e)() : m.error("Invalid JSON: " +
            b)
    }, m.parseXML = function(b) {
        var c, d;
        if (!b || "string" != typeof b) return null;
        try {
            a.DOMParser ? (d = new DOMParser, c = d.parseFromString(b,
                "text/xml")) : (c = new ActiveXObject(
                "Microsoft.XMLDOM"), c.async = "false", c.loadXML(
                b))
        } catch (e) {
            c = void 0
        }
        return c && c.documentElement && !c.getElementsByTagName(
                "parsererror").length || m.error("Invalid XML: " + b),
            c
    };
    var yb, zb, Ab = /#.*$/,
        Bb = /([?&])_=[^&]*/,
        Cb = /^(.*?):[ \t]*([^\r\n]*)\r?$/gm,
        Db = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
        Eb = /^(?:GET|HEAD)$/,
        Fb = /^\/\//,
        Gb = /^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/,
        Hb = {},
        Ib = {},
        Jb = "*/".concat("*");
    try {
        zb = location.href
    } catch (Kb) {
        zb = y.createElement("a"), zb.href = "", zb = zb.href
    }
    yb = Gb.exec(zb.toLowerCase()) || [];

    function Lb(a) {
        return function(b, c) {
            "string" != typeof b && (c = b, b = "*");
            var d, e = 0,
                f = b.toLowerCase().match(E) || [];
            if (m.isFunction(c))
                while (d = f[e++]) "+" === d.charAt(0) ? (d = d.slice(1) ||
                    "*", (a[d] = a[d] || []).unshift(c)) : (a[d] =
                    a[d] || []).push(c)
        }
    }

    function Mb(a, b, c, d) {
        var e = {},
            f = a === Ib;

        function g(h) {
            var i;
            return e[h] = !0, m.each(a[h] || [], function(a, h) {
                var j = h(b, c, d);
                return "string" != typeof j || f || e[j] ? f ? !(i =
                    j) : void 0 : (b.dataTypes.unshift(j), g(j), !
                    1)
            }), i
        }
        return g(b.dataTypes[0]) || !e["*"] && g("*")
    }

    function Nb(a, b) {
        var c, d, e = m.ajaxSettings.flatOptions || {};
        for (d in b) void 0 !== b[d] && ((e[d] ? a : c || (c = {}))[d] = b[
            d]);
        return c && m.extend(!0, a, c), a
    }

    function Ob(a, b, c) {
        var d, e, f, g, h = a.contents,
            i = a.dataTypes;
        while ("*" === i[0]) i.shift(), void 0 === e && (e = a.mimeType ||
            b.getResponseHeader("Content-Type"));
        if (e)
            for (g in h)
                if (h[g] && h[g].test(e)) {
                    i.unshift(g);
                    break
                }
        if (i[0] in c) f = i[0];
        else {
            for (g in c) {
                if (!i[0] || a.converters[g + " " + i[0]]) {
                    f = g;
                    break
                }
                d || (d = g)
            }
            f = f || d
        }
        return f ? (f !== i[0] && i.unshift(f), c[f]) : void 0
    }

    function Pb(a, b, c, d) {
        var e, f, g, h, i, j = {},
            k = a.dataTypes.slice();
        if (k[1])
            for (g in a.converters) j[g.toLowerCase()] = a.converters[g];
        f = k.shift();
        while (f)
            if (a.responseFields[f] && (c[a.responseFields[f]] = b), !i &&
                d && a.dataFilter && (b = a.dataFilter(b, a.dataType)), i =
                f, f = k.shift())
                if ("*" === f) f = i;
                else if ("*" !== i && i !== f) {
            if (g = j[i + " " + f] || j["* " + f], !g)
                for (e in j)
                    if (h = e.split(" "), h[1] === f && (g = j[i + " " + h[
                            0]] || j["* " + h[0]])) {
                        g === !0 ? g = j[e] : j[e] !== !0 && (f = h[0], k.unshift(
                            h[1]));
                        break
                    }
            if (g !== !0)
                if (g && a["throws"]) b = g(b);
                else try {
                    b = g(b)
                } catch (l) {
                    return {
                        state: "parsererror",
                        error: g ? l : "No conversion from " + i +
                            " to " + f
                    }
                }
        }
        return {
            state: "success",
            data: b
        }
    }
    m.extend({
        active: 0,
        lastModified: {},
        etag: {},
        ajaxSettings: {
            url: zb,
            type: "GET",
            isLocal: Db.test(yb[1]),
            global: !0,
            processData: !0,
            async: !0,
            contentType: "application/x-www-form-urlencoded; charset=UTF-8",
            accepts: {
                "*": Jb,
                text: "text/plain",
                html: "text/html",
                xml: "application/xml, text/xml",
                json: "application/json, text/javascript"
            },
            contents: {
                xml: /xml/,
                html: /html/,
                json: /json/
            },
            responseFields: {
                xml: "responseXML",
                text: "responseText",
                json: "responseJSON"
            },
            converters: {
                "* text": String,
                "text html": !0,
                "text json": m.parseJSON,
                "text xml": m.parseXML
            },
            flatOptions: {
                url: !0,
                context: !0
            }
        },
        ajaxSetup: function(a, b) {
            return b ? Nb(Nb(a, m.ajaxSettings), b) : Nb(m.ajaxSettings,
                a)
        },
        ajaxPrefilter: Lb(Hb),
        ajaxTransport: Lb(Ib),
        ajax: function(a, b) {
            "object" == typeof a && (b = a, a = void 0), b = b || {};
            var c, d, e, f, g, h, i, j, k = m.ajaxSetup({}, b),
                l = k.context || k,
                n = k.context && (l.nodeType || l.jquery) ? m(l) :
                m.event,
                o = m.Deferred(),
                p = m.Callbacks("once memory"),
                q = k.statusCode || {},
                r = {},
                s = {},
                t = 0,
                u = "canceled",
                v = {
                    readyState: 0,
                    getResponseHeader: function(a) {
                        var b;
                        if (2 === t) {
                            if (!j) {
                                j = {};
                                while (b = Cb.exec(f)) j[b[
                                        1].toLowerCase()] =
                                    b[2]
                            }
                            b = j[a.toLowerCase()]
                        }
                        return null == b ? null : b
                    },
                    getAllResponseHeaders: function() {
                        return 2 === t ? f : null
                    },
                    setRequestHeader: function(a, b) {
                        var c = a.toLowerCase();
                        return t || (a = s[c] = s[c] || a,
                            r[a] = b), this
                    },
                    overrideMimeType: function(a) {
                        return t || (k.mimeType = a), this
                    },
                    statusCode: function(a) {
                        var b;
                        if (a)
                            if (2 > t)
                                for (b in a) q[b] = [q[b],
                                    a[b]
                                ];
                            else v.always(a[v.status]);
                        return this
                    },
                    abort: function(a) {
                        var b = a || u;
                        return i && i.abort(b), x(0, b),
                            this
                    }
                };
            if (o.promise(v).complete = p.add, v.success = v.done,
                v.error = v.fail, k.url = ((a || k.url || zb) +
                    "").replace(Ab, "").replace(Fb, yb[1] +
                    "//"), k.type = b.method || b.type || k.method ||
                k.type, k.dataTypes = m.trim(k.dataType || "*")
                .toLowerCase().match(E) || [""], null == k.crossDomain &&
                (c = Gb.exec(k.url.toLowerCase()), k.crossDomain = !
                    (!c || c[1] === yb[1] && c[2] === yb[2] &&
                        (c[3] || ("http:" === c[1] ? "80" :
                            "443")) === (yb[3] || ("http:" ===
                            yb[1] ? "80" : "443")))), k.data &&
                k.processData && "string" != typeof k.data && (
                    k.data = m.param(k.data, k.traditional)),
                Mb(Hb, k, b, v), 2 === t) return v;
            h = m.event && k.global, h && 0 === m.active++ && m
                .event.trigger("ajaxStart"), k.type = k.type.toUpperCase(),
                k.hasContent = !Eb.test(k.type), e = k.url, k.hasContent ||
                (k.data && (e = k.url += (wb.test(e) ? "&" :
                        "?") + k.data, delete k.data), k.cache ===
                    !1 && (k.url = Bb.test(e) ? e.replace(Bb,
                        "$1_=" + vb++) : e + (wb.test(e) ?
                        "&" : "?") + "_=" + vb++)), k.ifModified &&
                (m.lastModified[e] && v.setRequestHeader(
                        "If-Modified-Since", m.lastModified[e]),
                    m.etag[e] && v.setRequestHeader(
                        "If-None-Match", m.etag[e])), (k.data &&
                    k.hasContent && k.contentType !== !1 || b.contentType
                ) && v.setRequestHeader("Content-Type", k.contentType),
                v.setRequestHeader("Accept", k.dataTypes[0] &&
                    k.accepts[k.dataTypes[0]] ? k.accepts[k.dataTypes[
                        0]] + ("*" !== k.dataTypes[0] ? ", " +
                        Jb + "; q=0.01" : "") : k.accepts["*"]);
            for (d in k.headers) v.setRequestHeader(d, k.headers[
                d]);
            if (k.beforeSend && (k.beforeSend.call(l, v, k) ===
                    !1 || 2 === t)) return v.abort();
            u = "abort";
            for (d in {
                    success: 1,
                    error: 1,
                    complete: 1
                }) v[d](k[d]);
            if (i = Mb(Ib, k, b, v)) {
                v.readyState = 1, h && n.trigger("ajaxSend", [v,
                    k
                ]), k.async && k.timeout > 0 && (g =
                    setTimeout(function() {
                        v.abort("timeout")
                    }, k.timeout));
                try {
                    t = 1, i.send(r, x)
                } catch (w) {
                    if (!(2 > t)) throw w;
                    x(-1, w)
                }
            } else x(-1, "No Transport");

            function x(a, b, c, d) {
                var j, r, s, u, w, x = b;
                2 !== t && (t = 2, g && clearTimeout(g), i =
                    void 0, f = d || "", v.readyState = a >
                    0 ? 4 : 0, j = a >= 200 && 300 > a ||
                    304 === a, c && (u = Ob(k, v, c)), u =
                    Pb(k, u, v, j), j ? (k.ifModified && (w =
                            v.getResponseHeader(
                                "Last-Modified"), w && (m.lastModified[
                                e] = w), w = v.getResponseHeader(
                                "etag"), w && (m.etag[e] =
                                w)), 204 === a || "HEAD" ===
                        k.type ? x = "nocontent" : 304 ===
                        a ? x = "notmodified" : (x = u.state,
                            r = u.data, s = u.error, j = !s
                        )) : (s = x, (a || !x) && (x =
                        "error", 0 > a && (a = 0))), v.status =
                    a, v.statusText = (b || x) + "", j ? o.resolveWith(
                        l, [r, x, v]) : o.rejectWith(l, [v,
                        x, s
                    ]), v.statusCode(q), q = void 0, h && n
                    .trigger(j ? "ajaxSuccess" :
                        "ajaxError", [v, k, j ? r : s]), p.fireWith(
                        l, [v, x]), h && (n.trigger(
                            "ajaxComplete", [v, k]), --m.active ||
                        m.event.trigger("ajaxStop")))
            }
            return v
        },
        getJSON: function(a, b, c) {
            return m.get(a, b, c, "json")
        },
        getScript: function(a, b) {
            return m.get(a, void 0, b, "script")
        }
    }), m.each(["get", "post"], function(a, b) {
        m[b] = function(a, c, d, e) {
            return m.isFunction(c) && (e = e || d, d = c, c =
                void 0), m.ajax({
                url: a,
                type: b,
                dataType: e,
                data: c,
                success: d
            })
        }
    }), m._evalUrl = function(a) {
        return m.ajax({
            url: a,
            type: "GET",
            dataType: "script",
            async: !1,
            global: !1,
            "throws": !0
        })
    }, m.fn.extend({
        wrapAll: function(a) {
            if (m.isFunction(a)) return this.each(function(b) {
                m(this).wrapAll(a.call(this, b))
            });
            if (this[0]) {
                var b = m(a, this[0].ownerDocument).eq(0).clone(!
                    0);
                this[0].parentNode && b.insertBefore(this[0]),
                    b.map(function() {
                        var a = this;
                        while (a.firstChild && 1 === a.firstChild
                            .nodeType) a = a.firstChild;
                        return a
                    }).append(this)
            }
            return this
        },
        wrapInner: function(a) {
            return this.each(m.isFunction(a) ? function(b) {
                m(this).wrapInner(a.call(this, b))
            } : function() {
                var b = m(this),
                    c = b.contents();
                c.length ? c.wrapAll(a) : b.append(a)
            })
        },
        wrap: function(a) {
            var b = m.isFunction(a);
            return this.each(function(c) {
                m(this).wrapAll(b ? a.call(this, c) : a)
            })
        },
        unwrap: function() {
            return this.parent().each(function() {
                m.nodeName(this, "body") || m(this).replaceWith(
                    this.childNodes)
            }).end()
        }
    }), m.expr.filters.hidden = function(a) {
        return a.offsetWidth <= 0 && a.offsetHeight <= 0 || !k.reliableHiddenOffsets() &&
            "none" === (a.style && a.style.display || m.css(a,
                "display"))
    }, m.expr.filters.visible = function(a) {
        return !m.expr.filters.hidden(a)
    };
    var Qb = /%20/g,
        Rb = /\[\]$/,
        Sb = /\r?\n/g,
        Tb = /^(?:submit|button|image|reset|file)$/i,
        Ub = /^(?:input|select|textarea|keygen)/i;

    function Vb(a, b, c, d) {
        var e;
        if (m.isArray(b)) m.each(b, function(b, e) {
            c || Rb.test(a) ? d(a, e) : Vb(a + "[" + ("object" ==
                typeof e ? b : "") + "]", e, c, d)
        });
        else if (c || "object" !== m.type(b)) d(a, b);
        else
            for (e in b) Vb(a + "[" + e + "]", b[e], c, d)
    }
    m.param = function(a, b) {
        var c, d = [],
            e = function(a, b) {
                b = m.isFunction(b) ? b() : null == b ? "" : b, d[d.length] =
                    encodeURIComponent(a) + "=" + encodeURIComponent(b)
            };
        if (void 0 === b && (b = m.ajaxSettings && m.ajaxSettings.traditional),
            m.isArray(a) || a.jquery && !m.isPlainObject(a)) m.each(a,
            function() {
                e(this.name, this.value)
            });
        else
            for (c in a) Vb(c, a[c], b, e);
        return d.join("&").replace(Qb, "+")
    }, m.fn.extend({
        serialize: function() {
            return m.param(this.serializeArray())
        },
        serializeArray: function() {
            return this.map(function() {
                var a = m.prop(this, "elements");
                return a ? m.makeArray(a) : this
            }).filter(function() {
                var a = this.type;
                return this.name && !m(this).is(
                        ":disabled") && Ub.test(this.nodeName) &&
                    !Tb.test(a) && (this.checked || !W.test(
                        a))
            }).map(function(a, b) {
                var c = m(this).val();
                return null == c ? null : m.isArray(c) ?
                    m.map(c, function(a) {
                        return {
                            name: b.name,
                            value: a.replace(Sb,
                                "\r\n")
                        }
                    }) : {
                        name: b.name,
                        value: c.replace(Sb, "\r\n")
                    }
            }).get()
        }
    }), m.ajaxSettings.xhr = void 0 !== a.ActiveXObject ? function() {
        return !this.isLocal && /^(get|post|head|put|delete|options)$/i
            .test(this.type) && Zb() || $b()
    } : Zb;
    var Wb = 0,
        Xb = {},
        Yb = m.ajaxSettings.xhr();
    a.attachEvent && a.attachEvent("onunload", function() {
            for (var a in Xb) Xb[a](void 0, !0)
        }), k.cors = !!Yb && "withCredentials" in Yb, Yb = k.ajax = !!Yb,
        Yb && m.ajaxTransport(function(a) {
            if (!a.crossDomain || k.cors) {
                var b;
                return {
                    send: function(c, d) {
                        var e, f = a.xhr(),
                            g = ++Wb;
                        if (f.open(a.type, a.url, a.async, a.username,
                                a.password), a.xhrFields)
                            for (e in a.xhrFields) f[e] = a.xhrFields[
                                e];
                        a.mimeType && f.overrideMimeType && f.overrideMimeType(
                            a.mimeType), a.crossDomain || c[
                            "X-Requested-With"] || (c[
                                "X-Requested-With"] =
                            "XMLHttpRequest");
                        for (e in c) void 0 !== c[e] && f.setRequestHeader(
                            e, c[e] + "");
                        f.send(a.hasContent && a.data || null), b =
                            function(c, e) {
                                var h, i, j;
                                if (b && (e || 4 === f.readyState))
                                    if (delete Xb[g], b = void 0, f
                                        .onreadystatechange = m.noop,
                                        e) 4 !== f.readyState && f.abort();
                                    else {
                                        j = {}, h = f.status,
                                            "string" == typeof f.responseText &&
                                            (j.text = f.responseText);
                                        try {
                                            i = f.statusText
                                        } catch (k) {
                                            i = ""
                                        }
                                        h || !a.isLocal || a.crossDomain ?
                                            1223 === h && (h = 204) :
                                            h = j.text ? 200 : 404
                                    }
                                j && d(h, i, j, f.getAllResponseHeaders())
                            }, a.async ? 4 === f.readyState ?
                            setTimeout(b) : f.onreadystatechange =
                            Xb[g] = b : b()
                    },
                    abort: function() {
                        b && b(void 0, !0)
                    }
                }
            }
        });

    function Zb() {
        try {
            return new a.XMLHttpRequest
        } catch (b) {}
    }

    function $b() {
        try {
            return new a.ActiveXObject("Microsoft.XMLHTTP")
        } catch (b) {}
    }
    m.ajaxSetup({
        accepts: {
            script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
        },
        contents: {
            script: /(?:java|ecma)script/
        },
        converters: {
            "text script": function(a) {
                return m.globalEval(a), a
            }
        }
    }), m.ajaxPrefilter("script", function(a) {
        void 0 === a.cache && (a.cache = !1), a.crossDomain && (a.type =
            "GET", a.global = !1)
    }), m.ajaxTransport("script", function(a) {
        if (a.crossDomain) {
            var b, c = y.head || m("head")[0] || y.documentElement;
            return {
                send: function(d, e) {
                    b = y.createElement("script"), b.async = !0,
                        a.scriptCharset && (b.charset = a.scriptCharset),
                        b.src = a.url, b.onload = b.onreadystatechange =
                        function(a, c) {
                            (c || !b.readyState ||
                                /loaded|complete/.test(b.readyState)
                            ) && (b.onload = b.onreadystatechange =
                                null, b.parentNode && b.parentNode
                                .removeChild(b), b = null, c ||
                                e(200, "success"))
                        }, c.insertBefore(b, c.firstChild)
                },
                abort: function() {
                    b && b.onload(void 0, !0)
                }
            }
        }
    });
    var _b = [],
        ac = /(=)\?(?=&|$)|\?\?/;
    m.ajaxSetup({
        jsonp: "callback",
        jsonpCallback: function() {
            var a = _b.pop() || m.expando + "_" + vb++;
            return this[a] = !0, a
        }
    }), m.ajaxPrefilter("json jsonp", function(b, c, d) {
        var e, f, g, h = b.jsonp !== !1 && (ac.test(b.url) ? "url" :
            "string" == typeof b.data && !(b.contentType || "")
            .indexOf("application/x-www-form-urlencoded") && ac
            .test(b.data) && "data");
        return h || "jsonp" === b.dataTypes[0] ? (e = b.jsonpCallback =
            m.isFunction(b.jsonpCallback) ? b.jsonpCallback() :
            b.jsonpCallback, h ? b[h] = b[h].replace(ac, "$1" +
                e) : b.jsonp !== !1 && (b.url += (wb.test(b.url) ?
                "&" : "?") + b.jsonp + "=" + e), b.converters[
                "script json"] = function() {
                return g || m.error(e + " was not called"), g[0]
            }, b.dataTypes[0] = "json", f = a[e], a[e] =
            function() {
                g = arguments
            }, d.always(function() {
                a[e] = f, b[e] && (b.jsonpCallback = c.jsonpCallback,
                        _b.push(e)), g && m.isFunction(f) &&
                    f(g[0]), g = f = void 0
            }), "script") : void 0
    }), m.parseHTML = function(a, b, c) {
        if (!a || "string" != typeof a) return null;
        "boolean" == typeof b && (c = b, b = !1), b = b || y;
        var d = u.exec(a),
            e = !c && [];
        return d ? [b.createElement(d[1])] : (d = m.buildFragment([a],
            b, e), e && e.length && m(e).remove(), m.merge([],
            d.childNodes))
    };
    var bc = m.fn.load;
    m.fn.load = function(a, b, c) {
        if ("string" != typeof a && bc) return bc.apply(this, arguments);
        var d, e, f, g = this,
            h = a.indexOf(" ");
        return h >= 0 && (d = m.trim(a.slice(h, a.length)), a = a.slice(
                0, h)), m.isFunction(b) ? (c = b, b = void 0) : b &&
            "object" == typeof b && (f = "POST"), g.length > 0 && m.ajax({
                url: a,
                type: f,
                dataType: "html",
                data: b
            }).done(function(a) {
                e = arguments, g.html(d ? m("<div>").append(m.parseHTML(
                    a)).find(d) : a)
            }).complete(c && function(a, b) {
                g.each(c, e || [a.responseText, b, a])
            }), this
    }, m.each(["ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError",
        "ajaxSuccess", "ajaxSend"
    ], function(a, b) {
        m.fn[b] = function(a) {
            return this.on(b, a)
        }
    }), m.expr.filters.animated = function(a) {
        return m.grep(m.timers, function(b) {
            return a === b.elem
        }).length
    };
    var cc = a.document.documentElement;

    function dc(a) {
        return m.isWindow(a) ? a : 9 === a.nodeType ? a.defaultView || a.parentWindow :
            !1
    }
    m.offset = {
            setOffset: function(a, b, c) {
                var d, e, f, g, h, i, j, k = m.css(a, "position"),
                    l = m(a),
                    n = {};
                "static" === k && (a.style.position = "relative"), h =
                    l.offset(), f = m.css(a, "top"), i = m.css(a,
                        "left"), j = ("absolute" === k || "fixed" === k) &&
                    m.inArray("auto", [f, i]) > -1, j ? (d = l.position(),
                        g = d.top, e = d.left) : (g = parseFloat(f) ||
                        0, e = parseFloat(i) || 0), m.isFunction(b) &&
                    (b = b.call(a, c, h)), null != b.top && (n.top = b.top -
                        h.top + g), null != b.left && (n.left = b.left -
                        h.left + e), "using" in b ? b.using.call(a, n) :
                    l.css(n)
            }
        }, m.fn.extend({
            offset: function(a) {
                if (arguments.length) return void 0 === a ? this :
                    this.each(function(b) {
                        m.offset.setOffset(this, a, b)
                    });
                var b, c, d = {
                        top: 0,
                        left: 0
                    },
                    e = this[0],
                    f = e && e.ownerDocument;
                if (f) return b = f.documentElement, m.contains(b,
                    e) ? (typeof e.getBoundingClientRect !==
                    K && (d = e.getBoundingClientRect()), c =
                    dc(f), {
                        top: d.top + (c.pageYOffset || b.scrollTop) -
                            (b.clientTop || 0),
                        left: d.left + (c.pageXOffset || b.scrollLeft) -
                            (b.clientLeft || 0)
                    }) : d
            },
            position: function() {
                if (this[0]) {
                    var a, b, c = {
                            top: 0,
                            left: 0
                        },
                        d = this[0];
                    return "fixed" === m.css(d, "position") ? b = d
                        .getBoundingClientRect() : (a = this.offsetParent(),
                            b = this.offset(), m.nodeName(a[0],
                                "html") || (c = a.offset()), c.top +=
                            m.css(a[0], "borderTopWidth", !0), c.left +=
                            m.css(a[0], "borderLeftWidth", !0)), {
                            top: b.top - c.top - m.css(d,
                                "marginTop", !0),
                            left: b.left - c.left - m.css(d,
                                "marginLeft", !0)
                        }
                }
            },
            offsetParent: function() {
                return this.map(function() {
                    var a = this.offsetParent || cc;
                    while (a && !m.nodeName(a, "html") &&
                        "static" === m.css(a, "position")) a =
                        a.offsetParent;
                    return a || cc
                })
            }
        }), m.each({
            scrollLeft: "pageXOffset",
            scrollTop: "pageYOffset"
        }, function(a, b) {
            var c = /Y/.test(b);
            m.fn[a] = function(d) {
                return V(this, function(a, d, e) {
                    var f = dc(a);
                    return void 0 === e ? f ? b in f ? f[b] :
                        f.document.documentElement[d] : a[d] :
                        void(f ? f.scrollTo(c ? m(f).scrollLeft() :
                            e, c ? e : m(f).scrollTop()
                        ) : a[d] = e)
                }, a, d, arguments.length, null)
            }
        }), m.each(["top", "left"], function(a, b) {
            m.cssHooks[b] = La(k.pixelPosition, function(a, c) {
                return c ? (c = Ja(a, b), Ha.test(c) ? m(a).position()[
                    b] + "px" : c) : void 0
            })
        }), m.each({
            Height: "height",
            Width: "width"
        }, function(a, b) {
            m.each({
                padding: "inner" + a,
                content: b,
                "": "outer" + a
            }, function(c, d) {
                m.fn[d] = function(d, e) {
                    var f = arguments.length && (c ||
                            "boolean" != typeof d),
                        g = c || (d === !0 || e === !0 ?
                            "margin" : "border");
                    return V(this, function(b, c, d) {
                        var e;
                        return m.isWindow(b) ? b.document
                            .documentElement[
                                "client" + a] : 9 ===
                            b.nodeType ? (e = b.documentElement,
                                Math.max(b.body[
                                    "scroll" +
                                    a], e[
                                    "scroll" +
                                    a], b.body[
                                    "offset" +
                                    a], e[
                                    "offset" +
                                    a], e[
                                    "client" +
                                    a])) : void 0 ===
                            d ? m.css(b, c, g) : m.style(
                                b, c, d, g)
                    }, b, f ? d : void 0, f, null)
                }
            })
        }), m.fn.size = function() {
            return this.length
        }, m.fn.andSelf = m.fn.addBack, "function" == typeof define &&
        define.amd && define("jquery", [], function() {
            return m
        });
    var ec = a.jQuery,
        fc = a.$;
    return m.noConflict = function(b) {
        return a.$ === m && (a.$ = fc), b && a.jQuery === m && (a.jQuery =
            ec), m
    }, typeof b === K && (a.jQuery = a.$ = m), m
});;;;
(function(v) {
    'use strict';

    function O(a) {
        return function() {
            var b = arguments[0],
                d;
            d = "[" + (a ? a + ":" : "") + b +
                "] http://errors.angularjs.org/1.5.5/" + (a ? a + "/" :
                    "") + b;
            for (b = 1; b < arguments.length; b++) {
                d = d + (1 == b ? "?" : "&") + "p" + (b - 1) + "=";
                var c = encodeURIComponent,
                    e;
                e = arguments[b];
                e = "function" == typeof e ? e.toString().replace(
                        / \{[\s\S]*$/, "") : "undefined" == typeof e ?
                    "undefined" : "string" != typeof e ? JSON.stringify(
                        e) : e;
                d += c(e)
            }
            return Error(d)
        }
    }

    function ya(a) {
        if (null == a || Va(a)) return !1;
        if (K(a) || F(a) || B && a instanceof B) return !0;
        var b = "length" in Object(a) && a.length;
        return Q(b) && (0 <= b && (b - 1 in a || a instanceof Array) ||
            "function" == typeof a.item)
    }

    function q(a, b, d) {
        var c, e;
        if (a)
            if (E(a))
                for (c in a) "prototype" == c || "length" == c || "name" ==
                    c || a.hasOwnProperty && !a.hasOwnProperty(c) || b.call(
                        d, a[c], c, a);
            else if (K(a) || ya(a)) {
            var f = "object" !== typeof a;
            c = 0;
            for (e = a.length; c < e; c++)(f || c in a) && b.call(d, a[c],
                c, a)
        } else if (a.forEach && a.forEach !== q) a.forEach(b, d, a);
        else if (oc(a))
            for (c in a) b.call(d, a[c], c, a);
        else if ("function" === typeof a.hasOwnProperty)
            for (c in a) a.hasOwnProperty(c) && b.call(d, a[c], c, a);
        else
            for (c in a) ua.call(a, c) && b.call(d, a[c], c, a);
        return a
    }

    function pc(a, b, d) {
        for (var c = Object.keys(a).sort(), e = 0; e < c.length; e++) b.call(
            d, a[c[e]], c[e]);
        return c
    }

    function qc(a) {
        return function(b, d) {
            a(d, b)
        }
    }

    function Xd() {
        return ++nb
    }

    function Nb(a, b, d) {
        for (var c = a.$$hashKey, e = 0, f = b.length; e < f; ++e) {
            var g = b[e];
            if (G(g) || E(g))
                for (var h = Object.keys(g), k = 0, l = h.length; k < l; k++) {
                    var n = h[k],
                        m = g[n];
                    d && G(m) ? fa(m) ? a[n] = new Date(m.valueOf()) : Wa(m) ?
                        a[n] = new RegExp(m) : m.nodeName ? a[n] = m.cloneNode(!
                            0) : Ob(m) ? a[n] = m.clone() : (G(a[n]) || (a[
                            n] = K(m) ? [] : {}), Nb(a[n], [m], !0)) : a[n] =
                        m
                }
        }
        c ? a.$$hashKey = c : delete a.$$hashKey;
        return a
    }

    function R(a) {
        return Nb(a, za.call(arguments, 1), !1)
    }

    function Yd(a) {
        return Nb(a, za.call(arguments, 1), !0)
    }

    function X(a) {
        return parseInt(a, 10)
    }

    function Pb(a, b) {
        return R(Object.create(a), b)
    }

    function C() {}

    function Xa(a) {
        return a
    }

    function da(a) {
        return function() {
            return a
        }
    }

    function rc(a) {
        return E(a.toString) && a.toString !== ma
    }

    function y(a) {
        return "undefined" === typeof a
    }

    function x(a) {
        return "undefined" !== typeof a
    }

    function G(a) {
        return null !== a && "object" === typeof a
    }

    function oc(a) {
        return null !== a && "object" === typeof a && !sc(a)
    }

    function F(a) {
        return "string" === typeof a
    }

    function Q(a) {
        return "number" === typeof a
    }

    function fa(a) {
        return "[object Date]" === ma.call(a)
    }

    function E(a) {
        return "function" === typeof a
    }

    function Wa(a) {
        return "[object RegExp]" === ma.call(a)
    }

    function Va(a) {
        return a && a.window === a
    }

    function Ya(a) {
        return a && a.$evalAsync && a.$watch
    }

    function Da(a) {
        return "boolean" === typeof a
    }

    function Zd(a) {
        return a && Q(a.length) && $d.test(ma.call(a))
    }

    function Ob(a) {
        return !(!a || !(a.nodeName || a.prop && a.attr && a.find))
    }

    function ae(a) {
        var b = {};
        a = a.split(",");
        var d;
        for (d = 0; d < a.length; d++) b[a[d]] = !0;
        return b
    }

    function va(a) {
        return P(a.nodeName || a[0] && a[0].nodeName)
    }

    function Za(a, b) {
        var d = a.indexOf(b);
        0 <= d && a.splice(d, 1);
        return d
    }

    function qa(a, b) {
        function d(a, b) {
            var d = b.$$hashKey,
                e;
            if (K(a)) {
                e = 0;
                for (var f = a.length; e < f; e++) b.push(c(a[e]))
            } else if (oc(a))
                for (e in a) b[e] = c(a[e]);
            else if (a && "function" === typeof a.hasOwnProperty)
                for (e in a) a.hasOwnProperty(e) && (b[e] = c(a[e]));
            else
                for (e in a) ua.call(a, e) && (b[e] = c(a[e]));
            d ? b.$$hashKey = d : delete b.$$hashKey;
            return b
        }

        function c(a) {
            if (!G(a)) return a;
            var b = f.indexOf(a);
            if (-1 !== b) return g[b];
            if (Va(a) || Ya(a)) throw Aa("cpws");
            var b = !1,
                c = e(a);
            void 0 === c && (c = K(a) ? [] : Object.create(sc(a)), b = !0);
            f.push(a);
            g.push(c);
            return b ? d(a, c) : c
        }

        function e(a) {
            switch (ma.call(a)) {
                case "[object Int8Array]":
                case "[object Int16Array]":
                case "[object Int32Array]":
                case "[object Float32Array]":
                case "[object Float64Array]":
                case "[object Uint8Array]":
                case "[object Uint8ClampedArray]":
                case "[object Uint16Array]":
                case "[object Uint32Array]":
                    return new a.constructor(c(a.buffer));
                case "[object ArrayBuffer]":
                    if (!a.slice) {
                        var b = new ArrayBuffer(a.byteLength);
                        (new Uint8Array(b)).set(new Uint8Array(a));
                        return b
                    }
                    return a.slice(0);
                case "[object Boolean]":
                case "[object Number]":
                case "[object String]":
                case "[object Date]":
                    return new a.constructor(a.valueOf());
                case "[object RegExp]":
                    return b = new RegExp(a.source, a.toString().match(
                        /[^\/]*$/)[0]), b.lastIndex = a.lastIndex, b;
                case "[object Blob]":
                    return new a.constructor([a], {
                        type: a.type
                    })
            }
            if (E(a.cloneNode)) return a.cloneNode(!0)
        }
        var f = [],
            g = [];
        if (b) {
            if (Zd(b) || "[object ArrayBuffer]" === ma.call(b)) throw Aa(
                "cpta");
            if (a === b) throw Aa("cpi");
            K(b) ? b.length = 0 : q(b, function(a, d) {
                "$$hashKey" !== d && delete b[d]
            });
            f.push(a);
            g.push(b);
            return d(a, b)
        }
        return c(a)
    }

    function ha(a, b) {
        if (K(a)) {
            b = b || [];
            for (var d = 0, c = a.length; d < c; d++) b[d] = a[d]
        } else if (G(a))
            for (d in b = b || {}, a)
                if ("$" !== d.charAt(0) || "$" !== d.charAt(1)) b[d] = a[d];
        return b || a
    }

    function pa(a, b) {
        if (a === b) return !0;
        if (null === a || null === b) return !1;
        if (a !== a && b !== b) return !0;
        var d = typeof a,
            c;
        if (d == typeof b && "object" == d)
            if (K(a)) {
                if (!K(b)) return !1;
                if ((d = a.length) == b.length) {
                    for (c = 0; c < d; c++)
                        if (!pa(a[c], b[c])) return !1;
                    return !0
                }
            } else {
                if (fa(a)) return fa(b) ? pa(a.getTime(), b.getTime()) : !1;
                if (Wa(a)) return Wa(b) ? a.toString() == b.toString() : !1;
                if (Ya(a) || Ya(b) || Va(a) || Va(b) || K(b) || fa(b) || Wa(
                        b)) return !1;
                d = T();
                for (c in a)
                    if ("$" !== c.charAt(0) && !E(a[c])) {
                        if (!pa(a[c], b[c])) return !1;
                        d[c] = !0
                    }
                for (c in b)
                    if (!(c in d) && "$" !== c.charAt(0) && x(b[c]) && !E(b[
                            c])) return !1;
                return !0
            }
        return !1
    }

    function $a(a, b, d) {
        return a.concat(za.call(b, d))
    }

    function tc(a, b) {
        var d = 2 < arguments.length ? za.call(arguments, 2) : [];
        return !E(b) || b instanceof RegExp ? b : d.length ? function() {
            return arguments.length ? b.apply(a, $a(d, arguments, 0)) :
                b.apply(a, d)
        } : function() {
            return arguments.length ? b.apply(a, arguments) : b.call(a)
        }
    }

    function be(a, b) {
        var d = b;
        "string" === typeof a && "$" === a.charAt(0) && "$" === a.charAt(1) ?
            d = void 0 : Va(b) ? d = "$WINDOW" : b && v.document === b ? d =
            "$DOCUMENT" : Ya(b) && (d = "$SCOPE");
        return d
    }

    function ab(a, b) {
        if (!y(a)) return Q(b) || (b = b ? 2 : null), JSON.stringify(a, be,
            b)
    }

    function uc(a) {
        return F(a) ? JSON.parse(a) : a
    }

    function vc(a, b) {
        a = a.replace(ce, "");
        var d = Date.parse("Jan 01, 1970 00:00:00 " + a) / 6E4;
        return isNaN(d) ? b : d
    }

    function Qb(a, b, d) {
        d = d ? -1 : 1;
        var c = a.getTimezoneOffset();
        b = vc(b, c);
        d *= b - c;
        a = new Date(a.getTime());
        a.setMinutes(a.getMinutes() + d);
        return a
    }

    function wa(a) {
        a = B(a).clone();
        try {
            a.empty()
        } catch (b) {}
        var d = B("<div>").append(a).html();
        try {
            return a[0].nodeType === Ma ? P(d) : d.match(/^(<[^>]+>)/)[1].replace(
                /^<([\w\-]+)/,
                function(a, b) {
                    return "<" + P(b)
                })
        } catch (c) {
            return P(d)
        }
    }

    function wc(a) {
        try {
            return decodeURIComponent(a)
        } catch (b) {}
    }

    function xc(a) {
        var b = {};
        q((a || "").split("&"), function(a) {
            var c, e, f;
            a && (e = a = a.replace(/\+/g, "%20"), c = a.indexOf(
                "="), -1 !== c && (e = a.substring(0, c), f =
                a.substring(c + 1)), e = wc(e), x(e) && (f =
                x(f) ? wc(f) : !0, ua.call(b, e) ? K(b[e]) ?
                b[e].push(f) : b[e] = [b[e], f] : b[e] = f))
        });
        return b
    }

    function Rb(a) {
        var b = [];
        q(a, function(a, c) {
            K(a) ? q(a, function(a) {
                b.push(ja(c, !0) + (!0 === a ? "" : "=" +
                    ja(a, !0)))
            }) : b.push(ja(c, !0) + (!0 === a ? "" : "=" + ja(a, !
                0)))
        });
        return b.length ? b.join("&") : ""
    }

    function ob(a) {
        return ja(a, !0).replace(/%26/gi, "&").replace(/%3D/gi, "=").replace(
            /%2B/gi, "+")
    }

    function ja(a, b) {
        return encodeURIComponent(a).replace(/%40/gi, "@").replace(/%3A/gi,
            ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(
            /%3B/gi, ";").replace(/%20/g, b ? "%20" : "+")
    }

    function de(a, b) {
        var d, c, e = Na.length;
        for (c = 0; c < e; ++c)
            if (d = Na[c] + b, F(d = a.getAttribute(d))) return d;
        return null
    }

    function ee(a, b) {
        var d, c, e = {};
        q(Na, function(b) {
            b += "app";
            !d && a.hasAttribute && a.hasAttribute(b) && (d = a, c =
                a.getAttribute(b))
        });
        q(Na, function(b) {
            b += "app";
            var e;
            !d && (e = a.querySelector("[" + b.replace(":", "\\:") +
                "]")) && (d = e, c = e.getAttribute(b))
        });
        d && (e.strictDi = null !== de(d, "strict-di"), b(d, c ? [c] : [],
            e))
    }

    function yc(a, b, d) {
        G(d) || (d = {});
        d = R({
            strictDi: !1
        }, d);
        var c = function() {
                a = B(a);
                if (a.injector()) {
                    var c = a[0] === v.document ? "document" : wa(a);
                    throw Aa("btstrpd", c.replace(/</, "&lt;").replace(/>/,
                        "&gt;"));
                }
                b = b || [];
                b.unshift(["$provide", function(b) {
                    b.value("$rootElement", a)
                }]);
                d.debugInfoEnabled && b.push(["$compileProvider", function(
                    a) {
                    a.debugInfoEnabled(!0)
                }]);
                b.unshift("ng");
                c = bb(b, d.strictDi);
                c.invoke(["$rootScope", "$rootElement", "$compile",
                    "$injector",
                    function(a, b, c, d) {
                        a.$apply(function() {
                            b.data("$injector", d);
                            c(b)(a)
                        })
                    }
                ]);
                return c
            },
            e = /^NG_ENABLE_DEBUG_INFO!/,
            f = /^NG_DEFER_BOOTSTRAP!/;
        v && e.test(v.name) && (d.debugInfoEnabled = !0, v.name = v.name.replace(
            e, ""));
        if (v && !f.test(v.name)) return c();
        v.name = v.name.replace(f, "");
        ea.resumeBootstrap = function(a) {
            q(a, function(a) {
                b.push(a)
            });
            return c()
        };
        E(ea.resumeDeferredBootstrap) && ea.resumeDeferredBootstrap()
    }

    function fe() {
        v.name = "NG_ENABLE_DEBUG_INFO!" + v.name;
        v.location.reload()
    }

    function ge(a) {
        a = ea.element(a).injector();
        if (!a) throw Aa("test");
        return a.get("$$testability")
    }

    function zc(a, b) {
        b = b || "_";
        return a.replace(he, function(a, c) {
            return (c ? b : "") + a.toLowerCase()
        })
    }

    function ie() {
        var a;
        if (!Ac) {
            var b = pb();
            (Z = y(b) ? v.jQuery : b ? v[b] : void 0) && Z.fn.on ? (B = Z,
                R(Z.fn, {
                    scope: Oa.scope,
                    isolateScope: Oa.isolateScope,
                    controller: Oa.controller,
                    injector: Oa.injector,
                    inheritedData: Oa.inheritedData
                }), a = Z.cleanData, Z.cleanData = function(b) {
                    for (var c, e = 0, f; null != (f = b[e]); e++)(c =
                            Z._data(f, "events")) && c.$destroy && Z(f)
                        .triggerHandler("$destroy");
                    a(b)
                }) : B = U;
            ea.element = B;
            Ac = !0
        }
    }

    function qb(a, b, d) {
        if (!a) throw Aa("areq", b || "?", d || "required");
        return a
    }

    function Pa(a, b, d) {
        d && K(a) && (a = a[a.length - 1]);
        qb(E(a), b, "not a function, got " + (a && "object" === typeof a ?
            a.constructor.name || "Object" : typeof a));
        return a
    }

    function Qa(a, b) {
        if ("hasOwnProperty" === a) throw Aa("badname", b);
    }

    function Bc(a, b, d) {
        if (!b) return a;
        b = b.split(".");
        for (var c, e = a, f = b.length, g = 0; g < f; g++) c = b[g], a &&
            (a = (e = a)[c]);
        return !d && E(a) ? tc(e, a) : a
    }

    function rb(a) {
        for (var b = a[0], d = a[a.length - 1], c, e = 1; b !== d && (b = b
                .nextSibling); e++)
            if (c || a[e] !== b) c || (c = B(za.call(a, 0, e))), c.push(b);
        return c || a
    }

    function T() {
        return Object.create(null)
    }

    function je(a) {
        function b(a, b, c) {
            return a[b] || (a[b] = c())
        }
        var d = O("$injector"),
            c = O("ng");
        a = b(a, "angular", Object);
        a.$$minErr = a.$$minErr || O;
        return b(a, "module", function() {
            var a = {};
            return function(f, g, h) {
                if ("hasOwnProperty" === f) throw c("badname",
                    "module");
                g && a.hasOwnProperty(f) && (a[f] = null);
                return b(a, f, function() {
                    function a(b, d, e, f) {
                        f || (f = c);
                        return function() {
                            f[e || "push"]([b, d,
                                arguments
                            ]);
                            return M
                        }
                    }

                    function b(a, d) {
                        return function(b, e) {
                            e && E(e) && (e.$$moduleName =
                                f);
                            c.push([a, d, arguments]);
                            return M
                        }
                    }
                    if (!g) throw d("nomod", f);
                    var c = [],
                        e = [],
                        r = [],
                        N = a("$injector", "invoke",
                            "push", e),
                        M = {
                            _invokeQueue: c,
                            _configBlocks: e,
                            _runBlocks: r,
                            requires: g,
                            name: f,
                            provider: b("$provide",
                                "provider"),
                            factory: b("$provide",
                                "factory"),
                            service: b("$provide",
                                "service"),
                            value: a("$provide",
                                "value"),
                            constant: a("$provide",
                                "constant",
                                "unshift"),
                            decorator: b("$provide",
                                "decorator"),
                            animation: b(
                                "$animateProvider",
                                "register"),
                            filter: b("$filterProvider",
                                "register"),
                            controller: b(
                                "$controllerProvider",
                                "register"),
                            directive: b(
                                "$compileProvider",
                                "directive"),
                            component: b(
                                "$compileProvider",
                                "component"),
                            config: N,
                            run: function(a) {
                                r.push(a);
                                return this
                            }
                        };
                    h && N(h);
                    return M
                })
            }
        })
    }

    function ke(a) {
        R(a, {
            bootstrap: yc,
            copy: qa,
            extend: R,
            merge: Yd,
            equals: pa,
            element: B,
            forEach: q,
            injector: bb,
            noop: C,
            bind: tc,
            toJson: ab,
            fromJson: uc,
            identity: Xa,
            isUndefined: y,
            isDefined: x,
            isString: F,
            isFunction: E,
            isObject: G,
            isNumber: Q,
            isElement: Ob,
            isArray: K,
            version: le,
            isDate: fa,
            lowercase: P,
            uppercase: sb,
            callbacks: {
                counter: 0
            },
            getTestability: ge,
            $$minErr: O,
            $$csp: Ea,
            reloadWithDebugInfo: fe
        });
        Sb = je(v);
        Sb("ng", ["ngLocale"], ["$provide", function(a) {
            a.provider({
                $$sanitizeUri: me
            });
            a.provider("$compile", Cc).directive({
                a: ne,
                input: Dc,
                textarea: Dc,
                form: oe,
                script: pe,
                select: qe,
                style: re,
                option: se,
                ngBind: te,
                ngBindHtml: ue,
                ngBindTemplate: ve,
                ngClass: we,
                ngClassEven: xe,
                ngClassOdd: ye,
                ngCloak: ze,
                ngController: Ae,
                ngForm: Be,
                ngHide: Ce,
                ngIf: De,
                ngInclude: Ee,
                ngInit: Fe,
                ngNonBindable: Ge,
                ngPluralize: He,
                ngRepeat: Ie,
                ngShow: Je,
                ngStyle: Ke,
                ngSwitch: Le,
                ngSwitchWhen: Me,
                ngSwitchDefault: Ne,
                ngOptions: Oe,
                ngTransclude: Pe,
                ngModel: Qe,
                ngList: Re,
                ngChange: Se,
                pattern: Ec,
                ngPattern: Ec,
                required: Fc,
                ngRequired: Fc,
                minlength: Gc,
                ngMinlength: Gc,
                maxlength: Hc,
                ngMaxlength: Hc,
                ngValue: Te,
                ngModelOptions: Ue
            }).directive({
                ngInclude: Ve
            }).directive(tb).directive(Ic);
            a.provider({
                $anchorScroll: We,
                $animate: Xe,
                $animateCss: Ye,
                $$animateJs: Ze,
                $$animateQueue: $e,
                $$AnimateRunner: af,
                $$animateAsyncRun: bf,
                $browser: cf,
                $cacheFactory: df,
                $controller: ef,
                $document: ff,
                $exceptionHandler: gf,
                $filter: Jc,
                $$forceReflow: hf,
                $interpolate: jf,
                $interval: kf,
                $http: lf,
                $httpParamSerializer: mf,
                $httpParamSerializerJQLike: nf,
                $httpBackend: of,
                $xhrFactory: pf,
                $location: qf,
                $log: rf,
                $parse: sf,
                $rootScope: tf,
                $q: uf,
                $$q: vf,
                $sce: wf,
                $sceDelegate: xf,
                $sniffer: yf,
                $templateCache: zf,
                $templateRequest: Af,
                $$testability: Bf,
                $timeout: Cf,
                $window: Df,
                $$rAF: Ef,
                $$jqLite: Ff,
                $$HashMap: Gf,
                $$cookieReader: Hf
            })
        }])
    }

    function cb(a) {
        return a.replace(If, function(a, d, c, e) {
            return e ? c.toUpperCase() : c
        }).replace(Jf, "Moz$1")
    }

    function Kc(a) {
        a = a.nodeType;
        return 1 === a || !a || 9 === a
    }

    function Lc(a, b) {
        var d, c, e = b.createDocumentFragment(),
            f = [];
        if (Tb.test(a)) {
            d = d || e.appendChild(b.createElement("div"));
            c = (Kf.exec(a) || ["", ""])[1].toLowerCase();
            c = ia[c] || ia._default;
            d.innerHTML = c[1] + a.replace(Lf, "<$1></$2>") + c[2];
            for (c = c[0]; c--;) d = d.lastChild;
            f = $a(f, d.childNodes);
            d = e.firstChild;
            d.textContent = ""
        } else f.push(b.createTextNode(a));
        e.textContent = "";
        e.innerHTML = "";
        q(f, function(a) {
            e.appendChild(a)
        });
        return e
    }

    function Mc(a, b) {
        var d = a.parentNode;
        d && d.replaceChild(b, a);
        b.appendChild(a)
    }

    function U(a) {
        if (a instanceof U) return a;
        var b;
        F(a) && (a = V(a), b = !0);
        if (!(this instanceof U)) {
            if (b && "<" != a.charAt(0)) throw Ub("nosel");
            return new U(a)
        }
        if (b) {
            b = v.document;
            var d;
            a = (d = Mf.exec(a)) ? [b.createElement(d[1])] : (d = Lc(a, b)) ?
                d.childNodes : []
        }
        Nc(this, a)
    }

    function Vb(a) {
        return a.cloneNode(!0)
    }

    function ub(a, b) {
        b || db(a);
        if (a.querySelectorAll)
            for (var d = a.querySelectorAll("*"), c = 0, e = d.length; c <
                e; c++) db(d[c])
    }

    function Oc(a, b, d, c) {
        if (x(c)) throw Ub("offargs");
        var e = (c = vb(a)) && c.events,
            f = c && c.handle;
        if (f)
            if (b) {
                var g = function(b) {
                    var c = e[b];
                    x(d) && Za(c || [], d);
                    x(d) && c && 0 < c.length || (a.removeEventListener(
                        b, f, !1), delete e[b])
                };
                q(b.split(" "), function(a) {
                    g(a);
                    wb[a] && g(wb[a])
                })
            } else
                for (b in e) "$destroy" !== b && a.removeEventListener(b, f, !
                    1), delete e[b]
    }

    function db(a, b) {
        var d = a.ng339,
            c = d && eb[d];
        c && (b ? delete c.data[b] : (c.handle && (c.events.$destroy && c.handle({},
            "$destroy"), Oc(a)), delete eb[d], a.ng339 = void 0))
    }

    function vb(a, b) {
        var d = a.ng339,
            d = d && eb[d];
        b && !d && (a.ng339 = d = ++Nf, d = eb[d] = {
            events: {},
            data: {},
            handle: void 0
        });
        return d
    }

    function Wb(a, b, d) {
        if (Kc(a)) {
            var c = x(d),
                e = !c && b && !G(b),
                f = !b;
            a = (a = vb(a, !e)) && a.data;
            if (c) a[b] = d;
            else {
                if (f) return a;
                if (e) return a && a[b];
                R(a, b)
            }
        }
    }

    function xb(a, b) {
        return a.getAttribute ? -1 < (" " + (a.getAttribute("class") || "") +
            " ").replace(/[\n\t]/g, " ").indexOf(" " + b + " ") : !1
    }

    function yb(a, b) {
        b && a.setAttribute && q(b.split(" "), function(b) {
            a.setAttribute("class", V((" " + (a.getAttribute(
                "class") || "") + " ").replace(
                /[\n\t]/g, " ").replace(" " + V(b) +
                " ", " ")))
        })
    }

    function zb(a, b) {
        if (b && a.setAttribute) {
            var d = (" " + (a.getAttribute("class") || "") + " ").replace(
                /[\n\t]/g, " ");
            q(b.split(" "), function(a) {
                a = V(a); - 1 === d.indexOf(" " + a + " ") && (d +=
                    a + " ")
            });
            a.setAttribute("class", V(d))
        }
    }

    function Nc(a, b) {
        if (b)
            if (b.nodeType) a[a.length++] = b;
            else {
                var d = b.length;
                if ("number" === typeof d && b.window !== b) {
                    if (d)
                        for (var c = 0; c < d; c++) a[a.length++] = b[c]
                } else a[a.length++] = b
            }
    }

    function Pc(a, b) {
        return Ab(a, "$" + (b || "ngController") + "Controller")
    }

    function Ab(a, b, d) {
        9 == a.nodeType && (a = a.documentElement);
        for (b = K(b) ? b : [b]; a;) {
            for (var c = 0, e = b.length; c < e; c++)
                if (x(d = B.data(a, b[c]))) return d;
            a = a.parentNode || 11 === a.nodeType && a.host
        }
    }

    function Qc(a) {
        for (ub(a, !0); a.firstChild;) a.removeChild(a.firstChild)
    }

    function Bb(a, b) {
        b || ub(a);
        var d = a.parentNode;
        d && d.removeChild(a)
    }

    function Of(a, b) {
        b = b || v;
        if ("complete" === b.document.readyState) b.setTimeout(a);
        else B(b).on("load", a)
    }

    function Rc(a, b) {
        var d = Cb[b.toLowerCase()];
        return d && Sc[va(a)] && d
    }

    function Pf(a, b) {
        var d = function(c, d) {
            c.isDefaultPrevented = function() {
                return c.defaultPrevented
            };
            var f = b[d || c.type],
                g = f ? f.length : 0;
            if (g) {
                if (y(c.immediatePropagationStopped)) {
                    var h = c.stopImmediatePropagation;
                    c.stopImmediatePropagation = function() {
                        c.immediatePropagationStopped = !0;
                        c.stopPropagation && c.stopPropagation();
                        h && h.call(c)
                    }
                }
                c.isImmediatePropagationStopped = function() {
                    return !0 === c.immediatePropagationStopped
                };
                var k = f.specialHandlerWrapper || Qf;
                1 < g && (f = ha(f));
                for (var l = 0; l < g; l++) c.isImmediatePropagationStopped() ||
                    k(a, c, f[l])
            }
        };
        d.elem = a;
        return d
    }

    function Qf(a, b, d) {
        d.call(a, b)
    }

    function Rf(a, b, d) {
        var c = b.relatedTarget;
        c && (c === a || Sf.call(a, c)) || d.call(a, b)
    }

    function Ff() {
        this.$get = function() {
            return R(U, {
                hasClass: function(a, b) {
                    a.attr && (a = a[0]);
                    return xb(a, b)
                },
                addClass: function(a, b) {
                    a.attr && (a = a[0]);
                    return zb(a, b)
                },
                removeClass: function(a, b) {
                    a.attr && (a = a[0]);
                    return yb(a, b)
                }
            })
        }
    }

    function Fa(a, b) {
        var d = a && a.$$hashKey;
        if (d) return "function" === typeof d && (d = a.$$hashKey()), d;
        d = typeof a;
        return d = "function" == d || "object" == d && null !== a ? a.$$hashKey =
            d + ":" + (b || Xd)() : d + ":" + a
    }

    function Ra(a, b) {
        if (b) {
            var d = 0;
            this.nextUid = function() {
                return ++d
            }
        }
        q(a, this.put, this)
    }

    function Tc(a) {
        a = Function.prototype.toString.call(a).replace(Tf, "");
        return a.match(Uf) || a.match(Vf)
    }

    function Wf(a) {
        return (a = Tc(a)) ? "function(" + (a[1] || "").replace(/[\s\r\n]+/,
            " ") + ")" : "fn"
    }

    function bb(a, b) {
        function d(a) {
            return function(b, c) {
                if (G(b)) q(b, qc(a));
                else return a(b, c)
            }
        }

        function c(a, b) {
            Qa(a, "service");
            if (E(b) || K(b)) b = r.instantiate(b);
            if (!b.$get) throw Ga("pget", a);
            return m[a + "Provider"] = b
        }

        function e(a, b) {
            return function() {
                var c = w.invoke(b, this);
                if (y(c)) throw Ga("undef", a);
                return c
            }
        }

        function f(a, b, d) {
            return c(a, {
                $get: !1 !== d ? e(a, b) : b
            })
        }

        function g(a) {
            qb(y(a) || K(a), "modulesToLoad", "not an array");
            var b = [],
                c;
            q(a, function(a) {
                function d(a) {
                    var b, c;
                    b = 0;
                    for (c = a.length; b < c; b++) {
                        var e = a[b],
                            f = r.get(e[0]);
                        f[e[1]].apply(f, e[2])
                    }
                }
                if (!n.get(a)) {
                    n.put(a, !0);
                    try {
                        F(a) ? (c = Sb(a), b = b.concat(g(c.requires))
                            .concat(c._runBlocks), d(c._invokeQueue),
                            d(c._configBlocks)) : E(a) ? b.push(
                            r.invoke(a)) : K(a) ? b.push(r.invoke(
                            a)) : Pa(a, "module")
                    } catch (e) {
                        throw K(a) && (a = a[a.length - 1]), e.message &&
                            e.stack && -1 == e.stack.indexOf(e.message) &&
                            (e = e.message + "\n" + e.stack), Ga(
                                "modulerr", a, e.stack || e.message ||
                                e);
                    }
                }
            });
            return b
        }

        function h(a, c) {
            function d(b, e) {
                if (a.hasOwnProperty(b)) {
                    if (a[b] === k) throw Ga("cdep", b + " <- " + l.join(
                        " <- "));
                    return a[b]
                }
                try {
                    return l.unshift(b), a[b] = k, a[b] = c(b, e)
                } catch (f) {
                    throw a[b] === k && delete a[b], f;
                } finally {
                    l.shift()
                }
            }

            function e(a, c, f) {
                var g = [];
                a = bb.$$annotate(a, b, f);
                for (var h = 0, k = a.length; h < k; h++) {
                    var l = a[h];
                    if ("string" !== typeof l) throw Ga("itkn", l);
                    g.push(c && c.hasOwnProperty(l) ? c[l] : d(l, f))
                }
                return g
            }
            return {
                invoke: function(a, b, c, d) {
                    "string" === typeof c && (d = c, c = null);
                    c = e(a, c, d);
                    K(a) && (a = a[a.length - 1]);
                    d = 11 >= Ca ? !1 : "function" === typeof a &&
                        /^(?:class\s|constructor\()/.test(Function.prototype
                            .toString.call(a));
                    return d ? (c.unshift(null), new(Function.prototype
                        .bind.apply(a, c))) : a.apply(b, c)
                },
                instantiate: function(a, b, c) {
                    var d = K(a) ? a[a.length - 1] : a;
                    a = e(a, b, c);
                    a.unshift(null);
                    return new(Function.prototype.bind.apply(d, a))
                },
                get: d,
                annotate: bb.$$annotate,
                has: function(b) {
                    return m.hasOwnProperty(b + "Provider") || a.hasOwnProperty(
                        b)
                }
            }
        }
        b = !0 === b;
        var k = {},
            l = [],
            n = new Ra([], !0),
            m = {
                $provide: {
                    provider: d(c),
                    factory: d(f),
                    service: d(function(a, b) {
                        return f(a, ["$injector", function(a) {
                            return a.instantiate(b)
                        }])
                    }),
                    value: d(function(a, b) {
                        return f(a, da(b), !1)
                    }),
                    constant: d(function(a, b) {
                        Qa(a, "constant");
                        m[a] = b;
                        N[a] = b
                    }),
                    decorator: function(a, b) {
                        var c = r.get(a + "Provider"),
                            d = c.$get;
                        c.$get = function() {
                            var a = w.invoke(d, c);
                            return w.invoke(b, null, {
                                $delegate: a
                            })
                        }
                    }
                }
            },
            r = m.$injector = h(m, function(a, b) {
                ea.isString(b) && l.push(b);
                throw Ga("unpr", l.join(" <- "));
            }),
            N = {},
            M = h(N, function(a, b) {
                var c = r.get(a + "Provider", b);
                return w.invoke(c.$get, c, void 0, a)
            }),
            w = M;
        m.$injectorProvider = {
            $get: da(M)
        };
        var p = g(a),
            w = M.get("$injector");
        w.strictDi = b;
        q(p, function(a) {
            a && w.invoke(a)
        });
        return w
    }

    function We() {
        var a = !0;
        this.disableAutoScrolling = function() {
            a = !1
        };
        this.$get = ["$window", "$location", "$rootScope", function(b, d, c) {
            function e(a) {
                var b = null;
                Array.prototype.some.call(a, function(a) {
                    if ("a" === va(a)) return b = a, !0
                });
                return b
            }

            function f(a) {
                if (a) {
                    a.scrollIntoView();
                    var c;
                    c = g.yOffset;
                    E(c) ? c = c() : Ob(c) ? (c = c[0], c = "fixed" !==
                        b.getComputedStyle(c).position ? 0 : c.getBoundingClientRect()
                        .bottom) : Q(c) || (c = 0);
                    c && (a = a.getBoundingClientRect().top, b.scrollBy(
                        0, a - c))
                } else b.scrollTo(0, 0)
            }

            function g(a) {
                a = F(a) ? a : d.hash();
                var b;
                a ? (b = h.getElementById(a)) ? f(b) : (b = e(h.getElementsByName(
                    a))) ? f(b) : "top" === a && f(null) : f(
                    null)
            }
            var h = b.document;
            a && c.$watch(function() {
                return d.hash()
            }, function(a, b) {
                a === b && "" === a || Of(function() {
                    c.$evalAsync(g)
                })
            });
            return g
        }]
    }

    function fb(a, b) {
        if (!a && !b) return "";
        if (!a) return b;
        if (!b) return a;
        K(a) && (a = a.join(" "));
        K(b) && (b = b.join(" "));
        return a + " " + b
    }

    function Xf(a) {
        F(a) && (a = a.split(" "));
        var b = T();
        q(a, function(a) {
            a.length && (b[a] = !0)
        });
        return b
    }

    function Ha(a) {
        return G(a) ? a : {}
    }

    function Yf(a, b, d, c) {
        function e(a) {
            try {
                a.apply(null, za.call(arguments, 1))
            } finally {
                if (M--, 0 === M)
                    for (; w.length;) try {
                        w.pop()()
                    } catch (b) {
                        d.error(b)
                    }
            }
        }

        function f() {
            u = null;
            g();
            h()
        }

        function g() {
            p = I();
            p = y(p) ? null : p;
            pa(p, L) && (p = L);
            L = p
        }

        function h() {
            if (t !== k.url() || H !== p) t = k.url(), H = p, q(J, function(
                a) {
                a(k.url(), p)
            })
        }
        var k = this,
            l = a.location,
            n = a.history,
            m = a.setTimeout,
            r = a.clearTimeout,
            N = {};
        k.isMock = !1;
        var M = 0,
            w = [];
        k.$$completeOutstandingRequest = e;
        k.$$incOutstandingRequestCount = function() {
            M++
        };
        k.notifyWhenNoOutstandingRequests = function(a) {
            0 === M ? a() : w.push(a)
        };
        var p, H, t = l.href,
            z = b.find("base"),
            u = null,
            I = c.history ? function() {
                try {
                    return n.state
                } catch (a) {}
            } : C;
        g();
        H = p;
        k.url = function(b, d, e) {
            y(e) && (e = null);
            l !== a.location && (l = a.location);
            n !== a.history && (n = a.history);
            if (b) {
                var f = H === e;
                if (t === b && (!c.history || f)) return k;
                var h = t && Ia(t) === Ia(b);
                t = b;
                H = e;
                if (!c.history || h && f) {
                    if (!h || u) u = b;
                    d ? l.replace(b) : h ? (d = l, e = b.indexOf("#"),
                        e = -1 === e ? "" : b.substr(e), d.hash = e
                    ) : l.href = b;
                    l.href !== b && (u = b)
                } else n[d ? "replaceState" : "pushState"](e, "", b), g(),
                    H = p;
                return k
            }
            return u || l.href.replace(/%27/g, "'")
        };
        k.state = function() {
            return p
        };
        var J = [],
            D = !1,
            L = null;
        k.onUrlChange = function(b) {
            if (!D) {
                if (c.history) B(a).on("popstate", f);
                B(a).on("hashchange", f);
                D = !0
            }
            J.push(b);
            return b
        };
        k.$$applicationDestroyed = function() {
            B(a).off("hashchange popstate", f)
        };
        k.$$checkUrlChange = h;
        k.baseHref = function() {
            var a = z.attr("href");
            return a ? a.replace(/^(https?\:)?\/\/[^\/]*/, "") : ""
        };
        k.defer = function(a, b) {
            var c;
            M++;
            c = m(function() {
                delete N[c];
                e(a)
            }, b || 0);
            N[c] = !0;
            return c
        };
        k.defer.cancel = function(a) {
            return N[a] ? (delete N[a], r(a), e(C), !0) : !1
        }
    }

    function cf() {
        this.$get = ["$window", "$log", "$sniffer", "$document", function(a,
            b, d, c) {
            return new Yf(a, c, b, d)
        }]
    }

    function df() {
        this.$get = function() {
            function a(a, c) {
                function e(a) {
                    a != m && (r ? r == a && (r = a.n) : r = a, f(a.n,
                        a.p), f(a, m), m = a, m.n = null)
                }

                function f(a, b) {
                    a != b && (a && (a.p = b), b && (b.n = a))
                }
                if (a in b) throw O("$cacheFactory")("iid", a);
                var g = 0,
                    h = R({}, c, {
                        id: a
                    }),
                    k = T(),
                    l = c && c.capacity || Number.MAX_VALUE,
                    n = T(),
                    m = null,
                    r = null;
                return b[a] = {
                    put: function(a, b) {
                        if (!y(b)) {
                            if (l < Number.MAX_VALUE) {
                                var c = n[a] || (n[a] = {
                                    key: a
                                });
                                e(c)
                            }
                            a in k || g++;
                            k[a] = b;
                            g > l && this.remove(r.key);
                            return b
                        }
                    },
                    get: function(a) {
                        if (l < Number.MAX_VALUE) {
                            var b = n[a];
                            if (!b) return;
                            e(b)
                        }
                        return k[a]
                    },
                    remove: function(a) {
                        if (l < Number.MAX_VALUE) {
                            var b = n[a];
                            if (!b) return;
                            b == m && (m = b.p);
                            b == r && (r = b.n);
                            f(b.n, b.p);
                            delete n[a]
                        }
                        a in k && (delete k[a], g--)
                    },
                    removeAll: function() {
                        k = T();
                        g = 0;
                        n = T();
                        m = r = null
                    },
                    destroy: function() {
                        n = h = k = null;
                        delete b[a]
                    },
                    info: function() {
                        return R({}, h, {
                            size: g
                        })
                    }
                }
            }
            var b = {};
            a.info = function() {
                var a = {};
                q(b, function(b, e) {
                    a[e] = b.info()
                });
                return a
            };
            a.get = function(a) {
                return b[a]
            };
            return a
        }
    }

    function zf() {
        this.$get = ["$cacheFactory", function(a) {
            return a("templates")
        }]
    }

    function Cc(a, b) {
        function d(a, b, c) {
            var d = /^\s*([@&<]|=(\*?))(\??)\s*(\w*)\s*$/,
                e = T();
            q(a, function(a, f) {
                if (a in n) e[f] = n[a];
                else {
                    var g = a.match(d);
                    if (!g) throw ga("iscp", b, f, a, c ?
                        "controller bindings definition" :
                        "isolate scope definition");
                    e[f] = {
                        mode: g[1][0],
                        collection: "*" === g[2],
                        optional: "?" === g[3],
                        attrName: g[4] || f
                    };
                    g[4] && (n[a] = e[f])
                }
            });
            return e
        }

        function c(a) {
            var b = a.charAt(0);
            if (!b || b !== P(b)) throw ga("baddir", a);
            if (a !== a.trim()) throw ga("baddir", a);
        }
        var e = {},
            f = /^\s*directive\:\s*([\w\-]+)\s+(.*)$/,
            g = /(([\w\-]+)(?:\:([^;]+))?;?)/,
            h = ae("ngSrc,ngSrcset,src,srcset"),
            k = /^(?:(\^\^?)?(\?)?(\^\^?)?)?/,
            l = /^(on[a-z]+|formaction)$/,
            n = T();
        this.directive = function M(b, d) {
            Qa(b, "directive");
            F(b) ? (c(b), qb(d, "directiveFactory"), e.hasOwnProperty(b) ||
                (e[b] = [], a.factory(b + "Directive", ["$injector",
                    "$exceptionHandler",
                    function(a, c) {
                        var d = [];
                        q(e[b], function(e, f) {
                            try {
                                var g = a.invoke(e);
                                E(g) ? g = {
                                        compile: da(
                                            g)
                                    } : !g.compile &&
                                    g.link && (g.compile =
                                        da(g.link));
                                g.priority = g.priority ||
                                    0;
                                g.index = f;
                                g.name = g.name ||
                                    b;
                                g.require = g.require ||
                                    g.controller &&
                                    g.name;
                                g.restrict = g.restrict ||
                                    "EA";
                                g.$$moduleName = e.$$moduleName;
                                d.push(g)
                            } catch (h) {
                                c(h)
                            }
                        });
                        return d
                    }
                ])), e[b].push(d)) : q(b, qc(M));
            return this
        };
        this.component = function(a, b) {
            function c(a) {
                function e(b) {
                    return E(b) || K(b) ? function(c, d) {
                        return a.invoke(b, this, {
                            $element: c,
                            $attrs: d
                        })
                    } : b
                }
                var f = b.template || b.templateUrl ? b.template : "",
                    g = {
                        controller: d,
                        controllerAs: Uc(b.controller) || b.controllerAs ||
                            "$ctrl",
                        template: e(f),
                        templateUrl: e(b.templateUrl),
                        transclude: b.transclude,
                        scope: {},
                        bindToController: b.bindings || {},
                        restrict: "E",
                        require: b.require
                    };
                q(b, function(a, b) {
                    "$" === b.charAt(0) && (g[b] = a)
                });
                return g
            }
            var d = b.controller || function() {};
            q(b, function(a, b) {
                "$" === b.charAt(0) && (c[b] = a, E(d) && (d[b] =
                    a))
            });
            c.$inject = ["$injector"];
            return this.directive(a, c)
        };
        this.aHrefSanitizationWhitelist = function(a) {
            return x(a) ? (b.aHrefSanitizationWhitelist(a), this) : b.aHrefSanitizationWhitelist()
        };
        this.imgSrcSanitizationWhitelist = function(a) {
            return x(a) ? (b.imgSrcSanitizationWhitelist(a), this) : b.imgSrcSanitizationWhitelist()
        };
        var m = !0;
        this.debugInfoEnabled = function(a) {
            return x(a) ? (m = a, this) : m
        };
        var r = 10;
        this.onChangesTtl = function(a) {
            return arguments.length ? (r = a, this) : r
        };
        this.$get = ["$injector", "$interpolate", "$exceptionHandler",
            "$templateRequest", "$parse", "$controller", "$rootScope",
            "$sce", "$animate", "$$sanitizeUri",
            function(a, b, c, n, t, z, u, I, J, D) {
                function L() {
                    try {
                        if (!--qa) throw Z = void 0, ga("infchng", r);
                        u.$apply(function() {
                            for (var a = 0, b = Z.length; a < b; ++
                                a) Z[a]();
                            Z = void 0
                        })
                    } finally {
                        qa++
                    }
                }

                function S(a, b) {
                    if (b) {
                        var c = Object.keys(b),
                            d, e, f;
                        d = 0;
                        for (e = c.length; d < e; d++) f = c[d], this[f] =
                            b[f]
                    } else this.$attr = {};
                    this.$$element = a
                }

                function $(a, b, c) {
                    na.innerHTML = "<span " + b + ">";
                    b = na.firstChild.attributes;
                    var d = b[0];
                    b.removeNamedItem(d.name);
                    d.value = c;
                    a.attributes.setNamedItem(d)
                }

                function A(a, b) {
                    try {
                        a.addClass(b)
                    } catch (c) {}
                }

                function ba(a, b, c, d, e) {
                    a instanceof B || (a = B(a));
                    for (var f = /\S+/, g = 0, h = a.length; g < h; g++) {
                        var k = a[g];
                        k.nodeType === Ma && k.nodeValue.match(f) && Mc(
                            k, a[g] = v.document.createElement(
                                "span"))
                    }
                    var l = s(a, b, a, c, d, e);
                    ba.$$addScopeClass(a);
                    var m = null;
                    return function(b, c, d) {
                        qb(b, "scope");
                        e && e.needsNewScope && (b = b.$parent.$new());
                        d = d || {};
                        var f = d.parentBoundTranscludeFn,
                            g = d.transcludeControllers;
                        d = d.futureParentElement;
                        f && f.$$boundTransclude && (f = f.$$boundTransclude);
                        m || (m = (d = d && d[0]) ? "foreignobject" !==
                            va(d) && ma.call(d).match(/SVG/) ?
                            "svg" : "html" : "html");
                        d = "html" !== m ? B(ca(m, B("<div>").append(
                                a).html())) : c ? Oa.clone.call(a) :
                            a;
                        if (g)
                            for (var h in g) d.data("$" + h +
                                "Controller", g[h].instance);
                        ba.$$addScopeInfo(d, b);
                        c && c(d, b);
                        l && l(b, d, d, f);
                        return d
                    }
                }

                function s(a, b, c, d, e, f) {
                    function g(a, c, d, e) {
                        var f, k, l, m, n, t, p;
                        if (r)
                            for (p = Array(c.length), m = 0; m < h.length; m +=
                                3) f = h[m], p[f] = c[f];
                        else p = c;
                        m = 0;
                        for (n = h.length; m < n;) k = p[h[m++]], c = h[
                            m++], f = h[m++], c ? (c.scope ? (l = a
                                .$new(), ba.$$addScopeInfo(B(k), l)
                            ) : l = a, t = c.transcludeOnThisElement ?
                            ka(a, c.transclude, e) : !c.templateOnThisElement &&
                            e ? e : !e && b ? ka(a, b) : null, c(f,
                                l, k, d, t)) : f && f(a, k.childNodes,
                            void 0, e)
                    }
                    for (var h = [], k, l, m, n, r, t = 0; t < a.length; t++) {
                        k = new S;
                        l = x(a[t], [], k, 0 === t ? d : void 0, e);
                        (f = l.length ? Ba(l, a[t], k, b, c, null, [], [],
                            f) : null) && f.scope && ba.$$addScopeClass(
                            k.$$element);
                        k = f && f.terminal || !(m = a[t].childNodes) ||
                            !m.length ? null : s(m, f ? (f.transcludeOnThisElement ||
                                    !f.templateOnThisElement) && f.transclude :
                                b);
                        if (f || k) h.push(t, f, k), n = !0, r = r || f;
                        f = null
                    }
                    return n ? g : null
                }

                function ka(a, b, c) {
                    function d(e, f, g, h, k) {
                        e || (e = a.$new(!1, k), e.$$transcluded = !0);
                        return b(e, f, {
                            parentBoundTranscludeFn: c,
                            transcludeControllers: g,
                            futureParentElement: h
                        })
                    }
                    var e = d.$$slots = T(),
                        f;
                    for (f in b.$$slots) e[f] = b.$$slots[f] ? ka(a, b.$$slots[
                        f], c) : null;
                    return d
                }

                function x(a, b, c, d, e) {
                    var h = c.$attr,
                        k;
                    switch (a.nodeType) {
                        case 1:
                            la(b, xa(va(a)), "E", d, e);
                            for (var l, m, n, t = a.attributes, r = 0,
                                    p = t && t.length; r < p; r++) {
                                var I = !1,
                                    D = !1;
                                l = t[r];
                                k = l.name;
                                m = V(l.value);
                                l = xa(k);
                                if (n = ya.test(l)) k = k.replace(Vc,
                                    "").substr(8).replace(/_(.)/g,
                                    function(a, b) {
                                        return b.toUpperCase()
                                    });
                                (l = l.match(Aa)) && Q(l[1]) && (I = k,
                                    D = k.substr(0, k.length - 5) +
                                    "end", k = k.substr(0, k.length -
                                        6));
                                l = xa(k.toLowerCase());
                                h[l] = k;
                                if (n || !c.hasOwnProperty(l)) c[l] = m,
                                    Rc(a, l) && (c[l] = !0);
                                fa(a, b, m, l, n);
                                la(b, l, "A", d, e, I, D)
                            }
                            a = a.className;
                            G(a) && (a = a.animVal);
                            if (F(a) && "" !== a)
                                for (; k = g.exec(a);) l = xa(k[2]), la(
                                    b, l, "C", d, e) && (c[l] = V(k[
                                    3])), a = a.substr(k.index + k[
                                    0].length);
                            break;
                        case Ma:
                            if (11 === Ca)
                                for (; a.parentNode && a.nextSibling &&
                                    a.nextSibling.nodeType === Ma;) a.nodeValue +=
                                    a.nextSibling.nodeValue, a.parentNode
                                    .removeChild(a.nextSibling);
                            X(b, a.nodeValue);
                            break;
                        case 8:
                            try {
                                if (k = f.exec(a.nodeValue)) l = xa(k[1]),
                                    la(b, l, "M", d, e) && (c[l] = V(k[
                                        2]))
                            } catch (J) {}
                    }
                    b.sort(Y);
                    return b
                }

                function Wc(a, b, c) {
                    var d = [],
                        e = 0;
                    if (b && a.hasAttribute && a.hasAttribute(b)) {
                        do {
                            if (!a) throw ga("uterdir", b, c);
                            1 == a.nodeType && (a.hasAttribute(b) && e++,
                                a.hasAttribute(c) && e--);
                            d.push(a);
                            a = a.nextSibling
                        } while (0 < e)
                    } else d.push(a);
                    return B(d)
                }

                function Xc(a, b, c) {
                    return function(d, e, f, g, h) {
                        e = Wc(e[0], b, c);
                        return a(d, e, f, g, h)
                    }
                }

                function Yb(a, b, c, d, e, f) {
                    var g;
                    return a ? ba(b, c, d, e, f) : function() {
                        g || (g = ba(b, c, d, e, f), b = c = f =
                            null);
                        return g.apply(this, arguments)
                    }
                }

                function Ba(a, b, d, e, f, g, h, k, l) {
                    function m(a, b, c, d) {
                        if (a) {
                            c && (a = Xc(a, c, d));
                            a.require = A.require;
                            a.directiveName = M;
                            if (D === A || A.$$isolateScope) a = ha(a, {
                                isolateScope: !0
                            });
                            h.push(a)
                        }
                        if (b) {
                            c && (b = Xc(b, c, d));
                            b.require = A.require;
                            b.directiveName = M;
                            if (D === A || A.$$isolateScope) b = ha(b, {
                                isolateScope: !0
                            });
                            k.push(b)
                        }
                    }

                    function n(a, c, e, f, g) {
                        function l(a, b, c, d) {
                            var e;
                            Ya(a) || (d = c, c = b, b = a, a = void 0);
                            H && (e = u);
                            c || (c = H ? z.parent() : z);
                            if (d) {
                                var f = g.$$slots[d];
                                if (f) return f(a, b, e, c, $);
                                if (y(f)) throw ga("noslot", d, wa(z));
                            } else return g(a, b, e, c, $)
                        }
                        var m, t, p, A, w, u, L, z;
                        b === e ? (f = d, z = d.$$element) : (z = B(e),
                            f = new S(z, d));
                        w = c;
                        D ? A = c.$new(!0) : r && (w = c.$parent);
                        g && (L = l, L.$$boundTransclude = g, L.isSlotFilled =
                            function(a) {
                                return !!g.$$slots[a]
                            });
                        I && (u = O(z, f, L, I, A, c, D));
                        D && (ba.$$addScopeInfo(z, A, !0, !(J && (J ===
                                D || J === D.$$originalDirective
                            ))), ba.$$addScopeClass(z, !0), A.$$isolateBindings =
                            D.$$isolateBindings, t = ia(c, f, A, A.$$isolateBindings,
                                D), t.removeWatches && A.$on(
                                "$destroy", t.removeWatches));
                        for (m in u) {
                            t = I[m];
                            p = u[m];
                            var Xb = t.$$bindings.bindToController;
                            p.bindingInfo = p.identifier && Xb ? ia(w,
                                f, p.instance, Xb, t) : {};
                            var M = p();
                            M !== p.instance && (p.instance = M, z.data(
                                    "$" + t.name + "Controller", M),
                                p.bindingInfo.removeWatches && p.bindingInfo
                                .removeWatches(), p.bindingInfo =
                                ia(w, f, p.instance, Xb, t))
                        }
                        q(I, function(a, b) {
                            var c = a.require;
                            a.bindToController && !K(c) && G(c) &&
                                R(u[b].instance, gb(b, c, z, u))
                        });
                        q(u, function(a) {
                            var b = a.instance;
                            E(b.$onChanges) && b.$onChanges(a.bindingInfo
                                .initialChanges);
                            E(b.$onInit) && b.$onInit();
                            E(b.$onDestroy) && w.$on("$destroy",
                                function() {
                                    b.$onDestroy()
                                })
                        });
                        m = 0;
                        for (t = h.length; m < t; m++) p = h[m], ja(p,
                            p.isolateScope ? A : c, z, f, p.require &&
                            gb(p.directiveName, p.require, z, u), L
                        );
                        var $ = c;
                        D && (D.template || null === D.templateUrl) &&
                            ($ = A);
                        a && a($, e.childNodes, void 0, g);
                        for (m = k.length - 1; 0 <= m; m--) p = k[m],
                            ja(p, p.isolateScope ? A : c, z, f, p.require &&
                                gb(p.directiveName, p.require, z, u), L
                            );
                        q(u, function(a) {
                            a = a.instance;
                            E(a.$postLink) && a.$postLink()
                        })
                    }
                    l = l || {};
                    for (var t = -Number.MAX_VALUE, r = l.newScopeDirective,
                            I = l.controllerDirectives, D = l.newIsolateScopeDirective,
                            J = l.templateDirective, w = l.nonTlbTranscludeDirective,
                            u = !1, L = !1, H = l.hasElementTranscludeDirective,
                            z = d.$$element = B(b), A, M, $, s = e, Sa,
                            ka = !1, C = !1, v, F = 0, Ba = a.length; F <
                        Ba; F++) {
                        A = a[F];
                        var P = A.$$start,
                            Q = A.$$end;
                        P && (z = Wc(b, P, Q));
                        $ = void 0;
                        if (t > A.priority) break;
                        if (v = A.scope) A.templateUrl || (G(v) ? (W(
                            "new/isolated scope", D || r, A,
                            z), D = A) : W("new/isolated scope",
                            D, A, z)), r = r || A;
                        M = A.name;
                        if (!ka && (A.replace && (A.templateUrl || A.template) ||
                                A.transclude && !A.$$tlb)) {
                            for (v = F + 1; ka = a[v++];)
                                if (ka.transclude && !ka.$$tlb || ka.replace &&
                                    (ka.templateUrl || ka.template)) {
                                    C = !0;
                                    break
                                }
                            ka = !0
                        }!A.templateUrl && A.controller && (v = A.controller,
                            I = I || T(), W("'" + M +
                                "' controller", I[M], A, z), I[M] =
                            A);
                        if (v = A.transclude)
                            if (u = !0, A.$$tlb || (W("transclusion", w,
                                    A, z), w = A), "element" == v) H = !
                                0, t = A.priority, $ = z, z = d.$$element =
                                B(ba.$$createComment(M, d[M])), b = z[0],
                                da(f, za.call($, 0), b), $[0].$$parentNode =
                                $[0].parentNode, s = Yb(C, $, e, t, g &&
                                    g.name, {
                                        nonTlbTranscludeDirective: w
                                    });
                            else {
                                var la = T();
                                $ = B(Vb(b)).contents();
                                if (G(v)) {
                                    $ = [];
                                    var Y = T(),
                                        X = T();
                                    q(v, function(a, b) {
                                        var c = "?" === a.charAt(
                                            0);
                                        a = c ? a.substring(1) :
                                            a;
                                        Y[a] = b;
                                        la[b] = null;
                                        X[b] = c
                                    });
                                    q(z.contents(), function(a) {
                                        var b = Y[xa(va(a))];
                                        b ? (X[b] = !0, la[b] =
                                                la[b] || [], la[
                                                    b].push(a)) :
                                            $.push(a)
                                    });
                                    q(X, function(a, b) {
                                        if (!a) throw ga(
                                            "reqslot", b);
                                    });
                                    for (var Z in la) la[Z] && (la[Z] =
                                        Yb(C, la[Z], e))
                                }
                                z.empty();
                                s = Yb(C, $, e, void 0, void 0, {
                                    needsNewScope: A.$$isolateScope ||
                                        A.$$newScope
                                });
                                s.$$slots = la
                            }
                        if (A.template)
                            if (L = !0, W("template", J, A, z), J = A,
                                v = E(A.template) ? A.template(z, d) :
                                A.template, v = ta(v), A.replace) {
                                g = A;
                                $ = Tb.test(v) ? Yc(ca(A.templateNamespace,
                                    V(v))) : [];
                                b = $[0];
                                if (1 != $.length || 1 !== b.nodeType)
                                    throw ga("tplrt", M, "");
                                da(f, z, b);
                                Ba = {
                                    $attr: {}
                                };
                                v = x(b, [], Ba);
                                var ea = a.splice(F + 1, a.length - (F +
                                    1));
                                (D || r) && Zc(v, D, r);
                                a = a.concat(v).concat(ea);
                                U(d, Ba);
                                Ba = a.length
                            } else z.html(v);
                        if (A.templateUrl) L = !0, W("template", J, A,
                            z), J = A, A.replace && (g = A), n = aa(
                            a.splice(F, a.length - F), z, d, f, u &&
                            s, h, k, {
                                controllerDirectives: I,
                                newScopeDirective: r !== A && r,
                                newIsolateScopeDirective: D,
                                templateDirective: J,
                                nonTlbTranscludeDirective: w
                            }), Ba = a.length;
                        else if (A.compile) try {
                            Sa = A.compile(z, d, s), E(Sa) ? m(null,
                                Sa, P, Q) : Sa && m(Sa.pre, Sa.post,
                                P, Q)
                        } catch (fa) {
                            c(fa, wa(z))
                        }
                        A.terminal && (n.terminal = !0, t = Math.max(t,
                            A.priority))
                    }
                    n.scope = r && !0 === r.scope;
                    n.transcludeOnThisElement = u;
                    n.templateOnThisElement = L;
                    n.transclude = s;
                    l.hasElementTranscludeDirective = H;
                    return n
                }

                function gb(a, b, c, d) {
                    var e;
                    if (F(b)) {
                        var f = b.match(k);
                        b = b.substring(f[0].length);
                        var g = f[1] || f[3],
                            f = "?" === f[2];
                        "^^" === g ? c = c.parent() : e = (e = d && d[b]) &&
                            e.instance;
                        if (!e) {
                            var h = "$" + b + "Controller";
                            e = g ? c.inheritedData(h) : c.data(h)
                        }
                        if (!e && !f) throw ga("ctreq", b, a);
                    } else if (K(b))
                        for (e = [], g = 0, f = b.length; g < f; g++) e[
                            g] = gb(a, b[g], c, d);
                    else G(b) && (e = {}, q(b, function(b, f) {
                        e[f] = gb(a, b, c, d)
                    }));
                    return e || null
                }

                function O(a, b, c, d, e, f, g) {
                    var h = T(),
                        k;
                    for (k in d) {
                        var l = d[k],
                            m = {
                                $scope: l === g || l.$$isolateScope ? e : f,
                                $element: a,
                                $attrs: b,
                                $transclude: c
                            },
                            n = l.controller;
                        "@" == n && (n = b[l.name]);
                        m = z(n, m, !0, l.controllerAs);
                        h[l.name] = m;
                        a.data("$" + l.name + "Controller", m.instance)
                    }
                    return h
                }

                function Zc(a, b, c) {
                    for (var d = 0, e = a.length; d < e; d++) a[d] = Pb(
                        a[d], {
                            $$isolateScope: b,
                            $$newScope: c
                        })
                }

                function la(b, f, g, h, k, l, m) {
                    if (f === k) return null;
                    k = null;
                    if (e.hasOwnProperty(f)) {
                        var n;
                        f = a.get(f + "Directive");
                        for (var t = 0, r = f.length; t < r; t++) try {
                            if (n = f[t], (y(h) || h > n.priority) &&
                                -1 != n.restrict.indexOf(g)) {
                                l && (n = Pb(n, {
                                    $$start: l,
                                    $$end: m
                                }));
                                if (!n.$$bindings) {
                                    var I = n,
                                        D = n,
                                        A = n.name,
                                        J = {
                                            isolateScope: null,
                                            bindToController: null
                                        };
                                    G(D.scope) && (!0 === D.bindToController ?
                                        (J.bindToController = d(
                                                D.scope, A, !0),
                                            J.isolateScope = {}
                                        ) : J.isolateScope = d(
                                            D.scope, A, !1));
                                    G(D.bindToController) && (J.bindToController =
                                        d(D.bindToController, A, !
                                            0));
                                    if (G(J.bindToController)) {
                                        var w = D.controller,
                                            z = D.controllerAs;
                                        if (!w) throw ga("noctrl",
                                            A);
                                        if (!Uc(w, z)) throw ga(
                                            "noident", A);
                                    }
                                    var u = I.$$bindings = J;
                                    G(u.isolateScope) && (n.$$isolateBindings =
                                        u.isolateScope)
                                }
                                b.push(n);
                                k = n
                            }
                        } catch (L) {
                            c(L)
                        }
                    }
                    return k
                }

                function Q(b) {
                    if (e.hasOwnProperty(b))
                        for (var c = a.get(b + "Directive"), d = 0, f =
                                c.length; d < f; d++)
                            if (b = c[d], b.multiElement) return !0;
                    return !1
                }

                function U(a, b) {
                    var c = b.$attr,
                        d = a.$attr,
                        e = a.$$element;
                    q(a, function(d, e) {
                        "$" != e.charAt(0) && (b[e] && b[e] !==
                            d && (d += ("style" === e ? ";" :
                                " ") + b[e]), a.$set(e, d, !
                                0, c[e]))
                    });
                    q(b, function(b, f) {
                        "class" == f ? (A(e, b), a["class"] = (
                                a["class"] ? a["class"] +
                                " " : "") + b) : "style" == f ?
                            (e.attr("style", e.attr("style") +
                                ";" + b), a.style = (a.style ?
                                a.style + ";" : "") + b) : "$" ==
                            f.charAt(0) || a.hasOwnProperty(f) ||
                            (a[f] = b, d[f] = c[f])
                    })
                }

                function aa(a, b, c, d, e, f, g, h) {
                    var k = [],
                        l, m, t = b[0],
                        p = a.shift(),
                        r = Pb(p, {
                            templateUrl: null,
                            transclude: null,
                            replace: null,
                            $$originalDirective: p
                        }),
                        I = E(p.templateUrl) ? p.templateUrl(b, c) : p.templateUrl,
                        D = p.templateNamespace;
                    b.empty();
                    n(I).then(function(n) {
                        var J, w;
                        n = ta(n);
                        if (p.replace) {
                            n = Tb.test(n) ? Yc(ca(D, V(n))) : [];
                            J = n[0];
                            if (1 != n.length || 1 !== J.nodeType)
                                throw ga("tplrt", p.name, I);
                            n = {
                                $attr: {}
                            };
                            da(d, b, J);
                            var z = x(J, [], n);
                            G(p.scope) && Zc(z, !0);
                            a = z.concat(a);
                            U(c, n)
                        } else J = t, b.html(n);
                        a.unshift(r);
                        l = Ba(a, J, c, e, b, p, f, g, h);
                        q(d, function(a, c) {
                            a == J && (d[c] = b[0])
                        });
                        for (m = s(b[0].childNodes, e); k.length;) {
                            n = k.shift();
                            w = k.shift();
                            var u = k.shift(),
                                L = k.shift(),
                                z = b[0];
                            if (!n.$$destroyed) {
                                if (w !== t) {
                                    var S = w.className;
                                    h.hasElementTranscludeDirective &&
                                        p.replace || (z = Vb(J));
                                    da(u, B(w), z);
                                    A(B(z), S)
                                }
                                w = l.transcludeOnThisElement ?
                                    ka(n, l.transclude, L) : L;
                                l(m, n, z, d, w)
                            }
                        }
                        k = null
                    });
                    return function(a, b, c, d, e) {
                        a = e;
                        b.$$destroyed || (k ? k.push(b, c, d, a) :
                            (l.transcludeOnThisElement && (a =
                                ka(b, l.transclude, e)), l(
                                m, b, c, d, a)))
                    }
                }

                function Y(a, b) {
                    var c = b.priority - a.priority;
                    return 0 !== c ? c : a.name !== b.name ? a.name < b
                        .name ? -1 : 1 : a.index - b.index
                }

                function W(a, b, c, d) {
                    function e(a) {
                        return a ? " (module: " + a + ")" : ""
                    }
                    if (b) throw ga("multidir", b.name, e(b.$$moduleName),
                        c.name, e(c.$$moduleName), a, wa(d));
                }

                function X(a, c) {
                    var d = b(c, !0);
                    d && a.push({
                        priority: 0,
                        compile: function(a) {
                            a = a.parent();
                            var b = !!a.length;
                            b && ba.$$addBindingClass(a);
                            return function(a, c) {
                                var e = c.parent();
                                b || ba.$$addBindingClass(
                                    e);
                                ba.$$addBindingInfo(e,
                                    d.expressions);
                                a.$watch(d, function(a) {
                                    c[0].nodeValue =
                                        a
                                })
                            }
                        }
                    })
                }

                function ca(a, b) {
                    a = P(a || "html");
                    switch (a) {
                        case "svg":
                        case "math":
                            var c = v.document.createElement("div");
                            c.innerHTML = "<" + a + ">" + b + "</" + a +
                                ">";
                            return c.childNodes[0].childNodes;
                        default:
                            return b
                    }
                }

                function ea(a, b) {
                    if ("srcdoc" == b) return I.HTML;
                    var c = va(a);
                    if ("xlinkHref" == b || "form" == c && "action" ==
                        b || "img" != c && ("src" == b || "ngSrc" == b)
                    ) return I.RESOURCE_URL
                }

                function fa(a, c, d, e, f) {
                    var g = ea(a, e);
                    f = h[e] || f;
                    var k = b(d, !0, g, f);
                    if (k) {
                        if ("multiple" === e && "select" === va(a))
                            throw ga("selmulti", wa(a));
                        c.push({
                            priority: 100,
                            compile: function() {
                                return {
                                    pre: function(a, c, h) {
                                        c = h.$$observers ||
                                            (h.$$observers =
                                                T());
                                        if (l.test(e))
                                            throw ga(
                                                "nodomevents"
                                            );
                                        var m = h[e];
                                        m !== d && (k =
                                            m && b(
                                                m, !
                                                0,
                                                g,
                                                f),
                                            d = m);
                                        k && (h[e] = k(
                                                a), (
                                                c[e] ||
                                                (c[
                                                    e
                                                ] = [])
                                            ).$$inter = !
                                            0, (h.$$observers &&
                                                h.$$observers[
                                                    e
                                                ].$$scope ||
                                                a).$watch(
                                                k,
                                                function(
                                                    a,
                                                    b
                                                ) {
                                                    "class" ===
                                                    e
                                                        &&
                                                        a !=
                                                        b ?
                                                        h
                                                        .$updateClass(
                                                            a,
                                                            b
                                                        ) :
                                                        h
                                                        .$set(
                                                            e,
                                                            a
                                                        )
                                                }))
                                    }
                                }
                            }
                        })
                    }
                }

                function da(a, b, c) {
                    var d = b[0],
                        e = b.length,
                        f = d.parentNode,
                        g, h;
                    if (a)
                        for (g = 0, h = a.length; g < h; g++)
                            if (a[g] == d) {
                                a[g++] = c;
                                h = g + e - 1;
                                for (var k = a.length; g < k; g++, h++)
                                    h < k ? a[g] = a[h] : delete a[g];
                                a.length -= e - 1;
                                a.context === d && (a.context = c);
                                break
                            }
                    f && f.replaceChild(c, d);
                    a = v.document.createDocumentFragment();
                    for (g = 0; g < e; g++) a.appendChild(b[g]);
                    B.hasData(d) && (B.data(c, B.data(d)), B(d).off(
                        "$destroy"));
                    B.cleanData(a.querySelectorAll("*"));
                    for (g = 1; g < e; g++) delete b[g];
                    b[0] = c;
                    b.length = 1
                }

                function ha(a, b) {
                    return R(function() {
                        return a.apply(null, arguments)
                    }, a, b)
                }

                function ja(a, b, d, e, f, g) {
                    try {
                        a(b, d, e, f, g)
                    } catch (h) {
                        c(h, wa(d))
                    }
                }

                function ia(a, c, d, e, f) {
                    function g(b, c, e) {
                        E(d.$onChanges) && c !== e && (Z || (a.$$postDigest(
                                L), Z = []), m || (m = {}, Z.push(h)),
                            m[b] && (e = m[b].previousValue), m[b] =
                            new Db(e, c))
                    }

                    function h() {
                        d.$onChanges(m);
                        m = void 0
                    }
                    var k = [],
                        l = {},
                        m;
                    q(e, function(e, h) {
                        var m = e.attrName,
                            n = e.optional,
                            p, r, I, D;
                        switch (e.mode) {
                            case "@":
                                n || ua.call(c, m) || (d[h] = c[
                                    m] = void 0);
                                c.$observe(m, function(a) {
                                    if (F(a) || Da(a)) g(
                                            h, a, d[h]),
                                        d[h] = a
                                });
                                c.$$observers[m].$$scope = a;
                                p = c[m];
                                F(p) ? d[h] = b(p)(a) : Da(p) &&
                                    (d[h] = p);
                                l[h] = new Db(Zb, d[h]);
                                break;
                            case "=":
                                if (!ua.call(c, m)) {
                                    if (n) break;
                                    c[m] = void 0
                                }
                                if (n && !c[m]) break;
                                r = t(c[m]);
                                D = r.literal ? pa : function(a,
                                    b) {
                                    return a === b || a !==
                                        a && b !== b
                                };
                                I = r.assign || function() {
                                    p = d[h] = r(a);
                                    throw ga("nonassign", c[
                                        m], m, f.name);
                                };
                                p = d[h] = r(a);
                                n = function(b) {
                                    D(b, d[h]) || (D(b, p) ?
                                        I(a, b = d[h]) :
                                        d[h] = b);
                                    return p = b
                                };
                                n.$stateful = !0;
                                n = e.collection ? a.$watchCollection(
                                    c[m], n) : a.$watch(t(c[
                                    m], n), null, r.literal);
                                k.push(n);
                                break;
                            case "<":
                                if (!ua.call(c, m)) {
                                    if (n) break;
                                    c[m] = void 0
                                }
                                if (n && !c[m]) break;
                                r = t(c[m]);
                                d[h] = r(a);
                                l[h] = new Db(Zb, d[h]);
                                n = a.$watch(r, function(a, b) {
                                    a === b && (b = d[h]);
                                    g(h, a, b);
                                    d[h] = a
                                }, r.literal);
                                k.push(n);
                                break;
                            case "&":
                                r = c.hasOwnProperty(m) ? t(c[m]) :
                                    C;
                                if (r === C && n) break;
                                d[h] = function(b) {
                                    return r(a, b)
                                }
                        }
                    });
                    return {
                        initialChanges: l,
                        removeWatches: k.length && function() {
                            for (var a = 0, b = k.length; a < b; ++
                                a) k[a]()
                        }
                    }
                }
                var oa = /^\w/,
                    na = v.document.createElement("div"),
                    qa = r,
                    Z;
                S.prototype = {
                    $normalize: xa,
                    $addClass: function(a) {
                        a && 0 < a.length && J.addClass(this.$$element,
                            a)
                    },
                    $removeClass: function(a) {
                        a && 0 < a.length && J.removeClass(this
                            .$$element, a)
                    },
                    $updateClass: function(a, b) {
                        var c = $c(a, b);
                        c && c.length && J.addClass(this.$$element,
                            c);
                        (c = $c(b, a)) && c.length && J.removeClass(
                            this.$$element, c)
                    },
                    $set: function(a, b, d, e) {
                        var f = Rc(this.$$element[0], a),
                            g = ad[a],
                            h = a;
                        f ? (this.$$element.prop(a, b), e = f) :
                            g && (this[g] = b, h = g);
                        this[a] = b;
                        e ? this.$attr[a] = e : (e = this.$attr[
                            a]) || (this.$attr[a] = e = zc(
                            a, "-"));
                        f = va(this.$$element);
                        if ("a" === f && ("href" === a ||
                                "xlinkHref" === a) || "img" ===
                            f && "src" === a) this[a] = b = D(b,
                            "src" === a);
                        else if ("img" === f && "srcset" === a) {
                            for (var f = "", g = V(b), k =
                                    /(\s+\d+x\s*,|\s+\d+w\s*,|\s+,|,\s+)/,
                                    k = /\s/.test(g) ? k :
                                    /(,)/, g = g.split(k), k =
                                    Math.floor(g.length / 2), l =
                                    0; l < k; l++) var m = 2 *
                                l,
                                f = f + D(V(g[m]), !0),
                                f = f + (" " + V(g[m + 1]));
                            g = V(g[2 * l]).split(/\s/);
                            f += D(V(g[0]), !0);
                            2 === g.length && (f += " " + V(g[1]));
                            this[a] = b = f
                        }!1 !== d && (null === b || y(b) ? this
                            .$$element.removeAttr(e) : oa.test(
                                e) ? this.$$element.attr(e,
                                b) : $(this.$$element[0], e,
                                b));
                        (a = this.$$observers) && q(a[h],
                            function(a) {
                                try {
                                    a(b)
                                } catch (d) {
                                    c(d)
                                }
                            })
                    },
                    $observe: function(a, b) {
                        var c = this,
                            d = c.$$observers || (c.$$observers =
                                T()),
                            e = d[a] || (d[a] = []);
                        e.push(b);
                        u.$evalAsync(function() {
                            e.$$inter || !c.hasOwnProperty(
                                a) || y(c[a]) || b(
                                c[a])
                        });
                        return function() {
                            Za(e, b)
                        }
                    }
                };
                var ra = b.startSymbol(),
                    sa = b.endSymbol(),
                    ta = "{{" == ra && "}}" == sa ? Xa : function(a) {
                        return a.replace(/\{\{/g, ra).replace(/}}/g, sa)
                    },
                    ya = /^ngAttr[A-Z]/,
                    Aa = /^(.+)Start$/;
                ba.$$addBindingInfo = m ? function(a, b) {
                    var c = a.data("$binding") || [];
                    K(b) ? c = c.concat(b) : c.push(b);
                    a.data("$binding", c)
                } : C;
                ba.$$addBindingClass = m ? function(a) {
                    A(a, "ng-binding")
                } : C;
                ba.$$addScopeInfo = m ? function(a, b, c, d) {
                    a.data(c ? d ? "$isolateScopeNoTemplate" :
                        "$isolateScope" : "$scope", b)
                } : C;
                ba.$$addScopeClass = m ? function(a, b) {
                    A(a, b ? "ng-isolate-scope" : "ng-scope")
                } : C;
                ba.$$createComment = function(a, b) {
                    var c = "";
                    m && (c = " " + (a || "") + ": " + (b || "") +
                        " ");
                    return v.document.createComment(c)
                };
                return ba
            }
        ]
    }

    function Db(a, b) {
        this.previousValue = a;
        this.currentValue = b
    }

    function xa(a) {
        return cb(a.replace(Vc, ""))
    }

    function $c(a, b) {
        var d = "",
            c = a.split(/\s+/),
            e = b.split(/\s+/),
            f = 0;
        a: for (; f < c.length; f++) {
            for (var g = c[f], h = 0; h < e.length; h++)
                if (g == e[h]) continue a;
            d += (0 < d.length ? " " : "") + g
        }
        return d
    }

    function Yc(a) {
        a = B(a);
        var b = a.length;
        if (1 >= b) return a;
        for (; b--;) 8 === a[b].nodeType && Zf.call(a, b, 1);
        return a
    }

    function Uc(a, b) {
        if (b && F(b)) return b;
        if (F(a)) {
            var d = bd.exec(a);
            if (d) return d[3]
        }
    }

    function ef() {
        var a = {},
            b = !1;
        this.has = function(b) {
            return a.hasOwnProperty(b)
        };
        this.register = function(b, c) {
            Qa(b, "controller");
            G(b) ? R(a, b) : a[b] = c
        };
        this.allowGlobals = function() {
            b = !0
        };
        this.$get = ["$injector", "$window", function(d, c) {
            function e(a, b, c, d) {
                if (!a || !G(a.$scope)) throw O("$controller")(
                    "noscp", d, b);
                a.$scope[b] = c
            }
            return function(f, g, h, k) {
                var l, n, m;
                h = !0 === h;
                k && F(k) && (m = k);
                if (F(f)) {
                    k = f.match(bd);
                    if (!k) throw $f("ctrlfmt", f);
                    n = k[1];
                    m = m || k[3];
                    f = a.hasOwnProperty(n) ? a[n] : Bc(g.$scope,
                        n, !0) || (b ? Bc(c, n, !0) : void 0);
                    Pa(f, n, !0)
                }
                if (h) return h = (K(f) ? f[f.length - 1] : f).prototype,
                    l = Object.create(h || null), m && e(g,
                        m, l, n || f.name), R(function() {
                        var a = d.invoke(f, l, g, n);
                        a !== l && (G(a) || E(a)) && (l =
                            a, m && e(g, m, l, n ||
                                f.name));
                        return l
                    }, {
                        instance: l,
                        identifier: m
                    });
                l = d.instantiate(f, g, n);
                m && e(g, m, l, n || f.name);
                return l
            }
        }]
    }

    function ff() {
        this.$get = ["$window", function(a) {
            return B(a.document)
        }]
    }

    function gf() {
        this.$get = ["$log", function(a) {
            return function(b, d) {
                a.error.apply(a, arguments)
            }
        }]
    }

    function $b(a) {
        return G(a) ? fa(a) ? a.toISOString() : ab(a) : a
    }

    function mf() {
        this.$get = function() {
            return function(a) {
                if (!a) return "";
                var b = [];
                pc(a, function(a, c) {
                    null === a || y(a) || (K(a) ? q(a,
                        function(a) {
                            b.push(ja(c) + "=" + ja(
                                $b(a)))
                        }) : b.push(ja(c) + "=" +
                        ja($b(a))))
                });
                return b.join("&")
            }
        }
    }

    function nf() {
        this.$get = function() {
            return function(a) {
                function b(a, e, f) {
                    null === a || y(a) || (K(a) ? q(a, function(a,
                        c) {
                        b(a, e + "[" + (G(a) ? c : "") +
                            "]")
                    }) : G(a) && !fa(a) ? pc(a, function(a,
                        c) {
                        b(a, e + (f ? "" : "[") + c + (
                            f ? "" : "]"))
                    }) : d.push(ja(e) + "=" + ja($b(a))))
                }
                if (!a) return "";
                var d = [];
                b(a, "", !0);
                return d.join("&")
            }
        }
    }

    function ac(a, b) {
        if (F(a)) {
            var d = a.replace(ag, "").trim();
            if (d) {
                var c = b("Content-Type");
                (c = c && 0 === c.indexOf(cd)) || (c = (c = d.match(bg)) &&
                    cg[c[0]].test(d));
                c && (a = uc(d))
            }
        }
        return a
    }

    function dd(a) {
        var b = T(),
            d;
        F(a) ? q(a.split("\n"), function(a) {
            d = a.indexOf(":");
            var e = P(V(a.substr(0, d)));
            a = V(a.substr(d + 1));
            e && (b[e] = b[e] ? b[e] + ", " + a : a)
        }) : G(a) && q(a, function(a, d) {
            var f = P(d),
                g = V(a);
            f && (b[f] = b[f] ? b[f] + ", " + g : g)
        });
        return b
    }

    function ed(a) {
        var b;
        return function(d) {
            b || (b = dd(a));
            return d ? (d = b[P(d)], void 0 === d && (d = null), d) : b
        }
    }

    function fd(a, b, d, c) {
        if (E(c)) return c(a, b, d);
        q(c, function(c) {
            a = c(a, b, d)
        });
        return a
    }

    function lf() {
        var a = this.defaults = {
                transformResponse: [ac],
                transformRequest: [function(a) {
                    return G(a) && "[object File]" !== ma.call(a) &&
                        "[object Blob]" !== ma.call(a) &&
                        "[object FormData]" !== ma.call(a) ? ab(a) :
                        a
                }],
                headers: {
                    common: {
                        Accept: "application/json, text/plain, */*"
                    },
                    post: ha(bc),
                    put: ha(bc),
                    patch: ha(bc)
                },
                xsrfCookieName: "XSRF-TOKEN",
                xsrfHeaderName: "X-XSRF-TOKEN",
                paramSerializer: "$httpParamSerializer"
            },
            b = !1;
        this.useApplyAsync = function(a) {
            return x(a) ? (b = !!a, this) : b
        };
        var d = !0;
        this.useLegacyPromiseExtensions = function(a) {
            return x(a) ? (d = !!a, this) : d
        };
        var c = this.interceptors = [];
        this.$get = ["$httpBackend", "$$cookieReader", "$cacheFactory",
            "$rootScope", "$q", "$injector",
            function(e, f, g, h, k, l) {
                function n(b) {
                    function c(a) {
                        var b = R({}, a);
                        b.data = fd(a.data, a.headers, a.status, f.transformResponse);
                        a = a.status;
                        return 200 <= a && 300 > a ? b : k.reject(b)
                    }

                    function e(a, b) {
                        var c, d = {};
                        q(a, function(a, e) {
                            E(a) ? (c = a(b), null != c && (d[e] =
                                c)) : d[e] = a
                        });
                        return d
                    }
                    if (!G(b)) throw O("$http")("badreq", b);
                    if (!F(b.url)) throw O("$http")("badreq", b.url);
                    var f = R({
                        method: "get",
                        transformRequest: a.transformRequest,
                        transformResponse: a.transformResponse,
                        paramSerializer: a.paramSerializer
                    }, b);
                    f.headers = function(b) {
                        var c = a.headers,
                            d = R({}, b.headers),
                            f, g, h, c = R({}, c.common, c[P(b.method)]);
                        a: for (f in c) {
                            g = P(f);
                            for (h in d)
                                if (P(h) === g) continue a;
                            d[f] = c[f]
                        }
                        return e(d, ha(b))
                    }(b);
                    f.method = sb(f.method);
                    f.paramSerializer = F(f.paramSerializer) ? l.get(f.paramSerializer) :
                        f.paramSerializer;
                    var g = [function(b) {
                            var d = b.headers,
                                e = fd(b.data, ed(d), void 0, b.transformRequest);
                            y(e) && q(d, function(a, b) {
                                "content-type" === P(b) &&
                                    delete d[b]
                            });
                            y(b.withCredentials) && !y(a.withCredentials) &&
                                (b.withCredentials = a.withCredentials);
                            return m(b, e).then(c, c)
                        }, void 0],
                        h = k.when(f);
                    for (q(M, function(a) {
                            (a.request || a.requestError) && g.unshift(
                                a.request, a.requestError);
                            (a.response || a.responseError) && g.push(
                                a.response, a.responseError)
                        }); g.length;) {
                        b = g.shift();
                        var n = g.shift(),
                            h = h.then(b, n)
                    }
                    d ? (h.success = function(a) {
                        Pa(a, "fn");
                        h.then(function(b) {
                            a(b.data, b.status, b.headers,
                                f)
                        });
                        return h
                    }, h.error = function(a) {
                        Pa(a, "fn");
                        h.then(null, function(b) {
                            a(b.data, b.status, b.headers,
                                f)
                        });
                        return h
                    }) : (h.success = gd("success"), h.error = gd(
                        "error"));
                    return h
                }

                function m(c, d) {
                    function g(a) {
                        if (a) {
                            var c = {};
                            q(a, function(a, d) {
                                c[d] = function(c) {
                                    function d() {
                                        a(c)
                                    }
                                    b ? h.$applyAsync(d) :
                                        h.$$phase ? d() : h
                                        .$apply(d)
                                }
                            });
                            return c
                        }
                    }

                    function l(a, c, d, e) {
                        function f() {
                            m(c, a, d, e)
                        }
                        L && (200 <= a && 300 > a ? L.put(A, [a, c, dd(
                            d), e]) : L.remove(A));
                        b ? h.$applyAsync(f) : (f(), h.$$phase || h.$apply())
                    }

                    function m(a, b, d, e) {
                        b = -1 <= b ? b : 0;
                        (200 <= b && 300 > b ? J.resolve : J.reject)({
                            data: a,
                            status: b,
                            headers: ed(d),
                            config: c,
                            statusText: e
                        })
                    }

                    function u(a) {
                        m(a.data, a.status, ha(a.headers()), a.statusText)
                    }

                    function I() {
                        var a = n.pendingRequests.indexOf(c); - 1 !== a &&
                            n.pendingRequests.splice(a, 1)
                    }
                    var J = k.defer(),
                        D = J.promise,
                        L, S, M = c.headers,
                        A = r(c.url, c.paramSerializer(c.params));
                    n.pendingRequests.push(c);
                    D.then(I, I);
                    !c.cache && !a.cache || !1 === c.cache || "GET" !==
                        c.method && "JSONP" !== c.method || (L = G(c.cache) ?
                            c.cache : G(a.cache) ? a.cache : N);
                    L && (S = L.get(A), x(S) ? S && E(S.then) ? S.then(
                        u, u) : K(S) ? m(S[1], S[0], ha(S[2]),
                        S[3]) : m(S, 200, {}, "OK") : L.put(A,
                        D));
                    y(S) && ((S = hd(c.url) ? f()[c.xsrfCookieName || a
                        .xsrfCookieName] : void 0) && (M[c.xsrfHeaderName ||
                        a.xsrfHeaderName] = S), e(c.method, A,
                        d, l, M, c.timeout, c.withCredentials,
                        c.responseType, g(c.eventHandlers), g(c
                            .uploadEventHandlers)));
                    return D
                }

                function r(a, b) {
                    0 < b.length && (a += (-1 == a.indexOf("?") ? "?" :
                        "&") + b);
                    return a
                }
                var N = g("$http");
                a.paramSerializer = F(a.paramSerializer) ? l.get(a.paramSerializer) :
                    a.paramSerializer;
                var M = [];
                q(c, function(a) {
                    M.unshift(F(a) ? l.get(a) : l.invoke(a))
                });
                n.pendingRequests = [];
                (function(a) {
                    q(arguments, function(a) {
                        n[a] = function(b, c) {
                            return n(R({}, c || {}, {
                                method: a,
                                url: b
                            }))
                        }
                    })
                })("get", "delete", "head", "jsonp");
                (function(a) {
                    q(arguments, function(a) {
                        n[a] = function(b, c, d) {
                            return n(R({}, d || {}, {
                                method: a,
                                url: b,
                                data: c
                            }))
                        }
                    })
                })("post", "put", "patch");
                n.defaults = a;
                return n
            }
        ]
    }

    function pf() {
        this.$get = function() {
            return function() {
                return new v.XMLHttpRequest
            }
        }
    }

    function of() {
        this.$get = ["$browser", "$window", "$document", "$xhrFactory",
            function(a, b, d, c) {
                return dg(a, c, a.defer, b.angular.callbacks, d[0])
            }
        ]
    }

    function dg(a, b, d, c, e) {
        function f(a, b, d) {
            var f = e.createElement("script"),
                n = null;
            f.type = "text/javascript";
            f.src = a;
            f.async = !0;
            n = function(a) {
                f.removeEventListener("load", n, !1);
                f.removeEventListener("error", n, !1);
                e.body.removeChild(f);
                f = null;
                var g = -1,
                    N = "unknown";
                a && ("load" !== a.type || c[b].called || (a = {
                        type: "error"
                    }), N = a.type, g = "error" === a.type ? 404 :
                    200);
                d && d(g, N)
            };
            f.addEventListener("load", n, !1);
            f.addEventListener("error", n, !1);
            e.body.appendChild(f);
            return n
        }
        return function(e, h, k, l, n, m, r, N, M, w) {
            function p() {
                z && z();
                u && u.abort()
            }

            function H(b, c, e, f, g) {
                x(J) && d.cancel(J);
                z = u = null;
                b(c, e, f, g);
                a.$$completeOutstandingRequest(C)
            }
            a.$$incOutstandingRequestCount();
            h = h || a.url();
            if ("jsonp" == P(e)) {
                var t = "_" + (c.counter++).toString(36);
                c[t] = function(a) {
                    c[t].data = a;
                    c[t].called = !0
                };
                var z = f(h.replace("JSON_CALLBACK",
                    "angular.callbacks." + t), t, function(a, b) {
                    H(l, a, c[t].data, "", b);
                    c[t] = C
                })
            } else {
                var u = b(e, h);
                u.open(e, h, !0);
                q(n, function(a, b) {
                    x(a) && u.setRequestHeader(b, a)
                });
                u.onload = function() {
                    var a = u.statusText || "",
                        b = "response" in u ? u.response : u.responseText,
                        c = 1223 === u.status ? 204 : u.status;
                    0 === c && (c = b ? 200 : "file" == ra(h).protocol ?
                        404 : 0);
                    H(l, c, b, u.getAllResponseHeaders(), a)
                };
                e = function() {
                    H(l, -1, null, null, "")
                };
                u.onerror = e;
                u.onabort = e;
                q(M, function(a, b) {
                    u.addEventListener(b, a)
                });
                q(w, function(a, b) {
                    u.upload.addEventListener(b, a)
                });
                r && (u.withCredentials = !0);
                if (N) try {
                    u.responseType = N
                } catch (I) {
                    if ("json" !== N) throw I;
                }
                u.send(y(k) ? null : k)
            }
            if (0 < m) var J = d(p, m);
            else m && E(m.then) && m.then(p)
        }
    }

    function jf() {
        var a = "{{",
            b = "}}";
        this.startSymbol = function(b) {
            return b ? (a = b, this) : a
        };
        this.endSymbol = function(a) {
            return a ? (b = a, this) : b
        };
        this.$get = ["$parse", "$exceptionHandler", "$sce", function(d, c,
            e) {
            function f(a) {
                return "\\\\\\" + a
            }

            function g(c) {
                return c.replace(m, a).replace(r, b)
            }

            function h(a, b, c, d) {
                var e;
                return e = a.$watch(function(a) {
                    e();
                    return d(a)
                }, b, c)
            }

            function k(f, k, m, r) {
                function H(a) {
                    try {
                        var b = a;
                        a = m ? e.getTrusted(m, b) : e.valueOf(b);
                        var d;
                        if (r && !x(a)) d = a;
                        else if (null == a) d = "";
                        else {
                            switch (typeof a) {
                                case "string":
                                    break;
                                case "number":
                                    a = "" + a;
                                    break;
                                default:
                                    a = ab(a)
                            }
                            d = a
                        }
                        return d
                    } catch (g) {
                        c(Ja.interr(f, g))
                    }
                }
                if (!f.length || -1 === f.indexOf(a)) {
                    var t;
                    k || (k = g(f), t = da(k), t.exp = f, t.expressions = [],
                        t.$$watchDelegate = h);
                    return t
                }
                r = !!r;
                var z, u, I = 0,
                    J = [],
                    D = [];
                t = f.length;
                for (var L = [], S = []; I < t;)
                    if (-1 != (z = f.indexOf(a, I)) && -1 != (u = f
                            .indexOf(b, z + l))) I !== z && L.push(
                            g(f.substring(I, z))), I = f.substring(
                            z + l, u), J.push(I), D.push(d(I, H)),
                        I = u + n, S.push(L.length), L.push("");
                    else {
                        I !== t && L.push(g(f.substring(I)));
                        break
                    }
                m && 1 < L.length && Ja.throwNoconcat(f);
                if (!k || J.length) {
                    var q = function(a) {
                        for (var b = 0, c = J.length; b < c; b++) {
                            if (r && y(a[b])) return;
                            L[S[b]] = a[b]
                        }
                        return L.join("")
                    };
                    return R(function(a) {
                        var b = 0,
                            d = J.length,
                            e = Array(d);
                        try {
                            for (; b < d; b++) e[b] = D[b](
                                a);
                            return q(e)
                        } catch (g) {
                            c(Ja.interr(f, g))
                        }
                    }, {
                        exp: f,
                        expressions: J,
                        $$watchDelegate: function(a, b) {
                            var c;
                            return a.$watchGroup(D,
                                function(d, e) {
                                    var f = q(d);
                                    E(b) && b.call(
                                        this, f,
                                        d !== e ?
                                        c : f,
                                        a);
                                    c = f
                                })
                        }
                    })
                }
            }
            var l = a.length,
                n = b.length,
                m = new RegExp(a.replace(/./g, f), "g"),
                r = new RegExp(b.replace(/./g, f), "g");
            k.startSymbol = function() {
                return a
            };
            k.endSymbol = function() {
                return b
            };
            return k
        }]
    }

    function kf() {
        this.$get = ["$rootScope", "$window", "$q", "$$q", "$browser",
            function(a, b, d, c, e) {
                function f(f, k, l, n) {
                    function m() {
                        r ? f.apply(null, N) : f(p)
                    }
                    var r = 4 < arguments.length,
                        N = r ? za.call(arguments, 4) : [],
                        q = b.setInterval,
                        w = b.clearInterval,
                        p = 0,
                        H = x(n) && !n,
                        t = (H ? c : d).defer(),
                        z = t.promise;
                    l = x(l) ? l : 0;
                    z.$$intervalId = q(function() {
                        H ? e.defer(m) : a.$evalAsync(m);
                        t.notify(p++);
                        0 < l && p >= l && (t.resolve(p), w(z.$$intervalId),
                            delete g[z.$$intervalId]);
                        H || a.$apply()
                    }, k);
                    g[z.$$intervalId] = t;
                    return z
                }
                var g = {};
                f.cancel = function(a) {
                    return a && a.$$intervalId in g ? (g[a.$$intervalId]
                        .reject("canceled"), b.clearInterval(a.$$intervalId),
                        delete g[a.$$intervalId], !0) : !1
                };
                return f
            }
        ]
    }

    function cc(a) {
        a = a.split("/");
        for (var b = a.length; b--;) a[b] = ob(a[b]);
        return a.join("/")
    }

    function id(a, b) {
        var d = ra(a);
        b.$$protocol = d.protocol;
        b.$$host = d.hostname;
        b.$$port = X(d.port) || eg[d.protocol] || null
    }

    function jd(a, b) {
        var d = "/" !== a.charAt(0);
        d && (a = "/" + a);
        var c = ra(a);
        b.$$path = decodeURIComponent(d && "/" === c.pathname.charAt(0) ? c
            .pathname.substring(1) : c.pathname);
        b.$$search = xc(c.search);
        b.$$hash = decodeURIComponent(c.hash);
        b.$$path && "/" != b.$$path.charAt(0) && (b.$$path = "/" + b.$$path)
    }

    function na(a, b) {
        if (0 === b.indexOf(a)) return b.substr(a.length)
    }

    function Ia(a) {
        var b = a.indexOf("#");
        return -1 == b ? a : a.substr(0, b)
    }

    function hb(a) {
        return a.replace(/(#.+)|#$/, "$1")
    }

    function dc(a, b, d) {
        this.$$html5 = !0;
        d = d || "";
        id(a, this);
        this.$$parse = function(a) {
            var d = na(b, a);
            if (!F(d)) throw Eb("ipthprfx", a, b);
            jd(d, this);
            this.$$path || (this.$$path = "/");
            this.$$compose()
        };
        this.$$compose = function() {
            var a = Rb(this.$$search),
                d = this.$$hash ? "#" + ob(this.$$hash) : "";
            this.$$url = cc(this.$$path) + (a ? "?" + a : "") + d;
            this.$$absUrl = b + this.$$url.substr(1)
        };
        this.$$parseLinkUrl = function(c, e) {
            if (e && "#" === e[0]) return this.hash(e.slice(1)), !0;
            var f, g;
            x(f = na(a, c)) ? (g = f, g = x(f = na(d, f)) ? b + (na("/",
                    f) || f) : a + g) : x(f = na(b, c)) ? g = b + f : b ==
                c + "/" && (g = b);
            g && this.$$parse(g);
            return !!g
        }
    }

    function ec(a, b, d) {
        id(a, this);
        this.$$parse = function(c) {
            var e = na(a, c) || na(b, c),
                f;
            y(e) || "#" !== e.charAt(0) ? this.$$html5 ? f = e : (f =
                "", y(e) && (a = c, this.replace())) : (f = na(d, e),
                y(f) && (f = e));
            jd(f, this);
            c = this.$$path;
            var e = a,
                g = /^\/[A-Z]:(\/.*)/;
            0 === f.indexOf(e) && (f = f.replace(e, ""));
            g.exec(f) || (c = (f = g.exec(c)) ? f[1] : c);
            this.$$path = c;
            this.$$compose()
        };
        this.$$compose = function() {
            var b = Rb(this.$$search),
                e = this.$$hash ? "#" + ob(this.$$hash) : "";
            this.$$url = cc(this.$$path) + (b ? "?" + b : "") + e;
            this.$$absUrl = a + (this.$$url ? d + this.$$url : "")
        };
        this.$$parseLinkUrl = function(b, d) {
            return Ia(a) == Ia(b) ? (this.$$parse(b), !0) : !1
        }
    }

    function kd(a, b, d) {
        this.$$html5 = !0;
        ec.apply(this, arguments);
        this.$$parseLinkUrl = function(c, e) {
            if (e && "#" === e[0]) return this.hash(e.slice(1)), !0;
            var f, g;
            a == Ia(c) ? f = c : (g = na(b, c)) ? f = a + d + g : b ===
                c + "/" && (f = b);
            f && this.$$parse(f);
            return !!f
        };
        this.$$compose = function() {
            var b = Rb(this.$$search),
                e = this.$$hash ? "#" + ob(this.$$hash) : "";
            this.$$url = cc(this.$$path) + (b ? "?" + b : "") + e;
            this.$$absUrl = a + d + this.$$url
        }
    }

    function Fb(a) {
        return function() {
            return this[a]
        }
    }

    function ld(a, b) {
        return function(d) {
            if (y(d)) return this[a];
            this[a] = b(d);
            this.$$compose();
            return this
        }
    }

    function qf() {
        var a = "",
            b = {
                enabled: !1,
                requireBase: !0,
                rewriteLinks: !0
            };
        this.hashPrefix = function(b) {
            return x(b) ? (a = b, this) : a
        };
        this.html5Mode = function(a) {
            return Da(a) ? (b.enabled = a, this) : G(a) ? (Da(a.enabled) &&
                (b.enabled = a.enabled), Da(a.requireBase) && (b.requireBase =
                    a.requireBase), Da(a.rewriteLinks) && (b.rewriteLinks =
                    a.rewriteLinks), this) : b
        };
        this.$get = ["$rootScope", "$browser", "$sniffer", "$rootElement",
            "$window",
            function(d, c, e, f, g) {
                function h(a, b, d) {
                    var e = l.url(),
                        f = l.$$state;
                    try {
                        c.url(a, b, d), l.$$state = c.state()
                    } catch (g) {
                        throw l.url(e), l.$$state = f, g;
                    }
                }

                function k(a, b) {
                    d.$broadcast("$locationChangeSuccess", l.absUrl(),
                        a, l.$$state, b)
                }
                var l, n;
                n = c.baseHref();
                var m = c.url(),
                    r;
                if (b.enabled) {
                    if (!n && b.requireBase) throw Eb("nobase");
                    r = m.substring(0, m.indexOf("/", m.indexOf("//") +
                        2)) + (n || "/");
                    n = e.history ? dc : kd
                } else r = Ia(m), n = ec;
                var N = r.substr(0, Ia(r).lastIndexOf("/") + 1);
                l = new n(r, N, "#" + a);
                l.$$parseLinkUrl(m, m);
                l.$$state = c.state();
                var q = /^\s*(javascript|mailto):/i;
                f.on("click", function(a) {
                    if (b.rewriteLinks && !a.ctrlKey && !a.metaKey &&
                        !a.shiftKey && 2 != a.which && 2 != a.button
                    ) {
                        for (var e = B(a.target);
                            "a" !== va(e[0]);)
                            if (e[0] === f[0] || !(e = e.parent())[
                                    0]) return;
                        var h = e.prop("href"),
                            k = e.attr("href") || e.attr(
                                "xlink:href");
                        G(h) && "[object SVGAnimatedString]" ===
                            h.toString() && (h = ra(h.animVal).href);
                        q.test(h) || !h || e.attr("target") ||
                            a.isDefaultPrevented() || !l.$$parseLinkUrl(
                                h, k) || (a.preventDefault(), l
                                .absUrl() != c.url() && (d.$apply(),
                                    g.angular[
                                        "ff-684208-preventDefault"
                                    ] = !0))
                    }
                });
                hb(l.absUrl()) != hb(m) && c.url(l.absUrl(), !0);
                var w = !0;
                c.onUrlChange(function(a, b) {
                    y(na(N, a)) ? g.location.href = a : (d.$evalAsync(
                        function() {
                            var c = l.absUrl(),
                                e = l.$$state,
                                f;
                            a = hb(a);
                            l.$$parse(a);
                            l.$$state = b;
                            f = d.$broadcast(
                                "$locationChangeStart",
                                a, c, b, e).defaultPrevented;
                            l.absUrl() === a && (f ? (l
                                    .$$parse(c), l.$$state =
                                    e, h(c, !1, e)) :
                                (w = !1, k(c, e)))
                        }), d.$$phase || d.$digest())
                });
                d.$watch(function() {
                    var a = hb(c.url()),
                        b = hb(l.absUrl()),
                        f = c.state(),
                        g = l.$$replace,
                        m = a !== b || l.$$html5 && e.history &&
                        f !== l.$$state;
                    if (w || m) w = !1, d.$evalAsync(function() {
                        var b = l.absUrl(),
                            c = d.$broadcast(
                                "$locationChangeStart",
                                b, a, l.$$state, f).defaultPrevented;
                        l.absUrl() === b && (c ? (l.$$parse(
                                a), l.$$state =
                            f) : (m && h(b, g,
                            f === l.$$state ?
                            null : l.$$state
                        ), k(a, f)))
                    });
                    l.$$replace = !1
                });
                return l
            }
        ]
    }

    function rf() {
        var a = !0,
            b = this;
        this.debugEnabled = function(b) {
            return x(b) ? (a = b, this) : a
        };
        this.$get = ["$window", function(d) {
            function c(a) {
                a instanceof Error && (a.stack ? a = a.message && -
                    1 === a.stack.indexOf(a.message) ?
                    "Error: " + a.message + "\n" + a.stack : a.stack :
                    a.sourceURL && (a = a.message + "\n" + a.sourceURL +
                        ":" + a.line));
                return a
            }

            function e(a) {
                var b = d.console || {},
                    e = b[a] || b.log || C;
                a = !1;
                try {
                    a = !!e.apply
                } catch (k) {}
                return a ? function() {
                    var a = [];
                    q(arguments, function(b) {
                        a.push(c(b))
                    });
                    return e.apply(b, a)
                } : function(a, b) {
                    e(a, null == b ? "" : b)
                }
            }
            return {
                log: e("log"),
                info: e("info"),
                warn: e("warn"),
                error: e("error"),
                debug: function() {
                    var c = e("debug");
                    return function() {
                        a && c.apply(b, arguments)
                    }
                }()
            }
        }]
    }

    function Ta(a, b) {
        if ("__defineGetter__" === a || "__defineSetter__" === a ||
            "__lookupGetter__" === a || "__lookupSetter__" === a ||
            "__proto__" === a) throw ca("isecfld", b);
        return a
    }

    function fg(a) {
        return a + ""
    }

    function sa(a, b) {
        if (a) {
            if (a.constructor === a) throw ca("isecfn", b);
            if (a.window === a) throw ca("isecwindow", b);
            if (a.children && (a.nodeName || a.prop && a.attr && a.find))
                throw ca("isecdom", b);
            if (a === Object) throw ca("isecobj", b);
        }
        return a
    }

    function md(a, b) {
        if (a) {
            if (a.constructor === a) throw ca("isecfn", b);
            if (a === gg || a === hg || a === ig) throw ca("isecff", b);
        }
    }

    function Gb(a, b) {
        if (a && (a === (0).constructor || a === (!1).constructor || a ===
                "".constructor || a === {}.constructor || a === [].constructor ||
                a === Function.constructor)) throw ca("isecaf", b);
    }

    function jg(a, b) {
        return "undefined" !== typeof a ? a : b
    }

    function nd(a, b) {
        return "undefined" === typeof a ? b : "undefined" === typeof b ? a :
            a + b
    }

    function aa(a, b) {
        var d, c;
        switch (a.type) {
            case s.Program:
                d = !0;
                q(a.body, function(a) {
                    aa(a.expression, b);
                    d = d && a.expression.constant
                });
                a.constant = d;
                break;
            case s.Literal:
                a.constant = !0;
                a.toWatch = [];
                break;
            case s.UnaryExpression:
                aa(a.argument, b);
                a.constant = a.argument.constant;
                a.toWatch = a.argument.toWatch;
                break;
            case s.BinaryExpression:
                aa(a.left, b);
                aa(a.right, b);
                a.constant = a.left.constant && a.right.constant;
                a.toWatch = a.left.toWatch.concat(a.right.toWatch);
                break;
            case s.LogicalExpression:
                aa(a.left, b);
                aa(a.right, b);
                a.constant = a.left.constant && a.right.constant;
                a.toWatch = a.constant ? [] : [a];
                break;
            case s.ConditionalExpression:
                aa(a.test, b);
                aa(a.alternate, b);
                aa(a.consequent, b);
                a.constant = a.test.constant && a.alternate.constant && a.consequent
                    .constant;
                a.toWatch = a.constant ? [] : [a];
                break;
            case s.Identifier:
                a.constant = !1;
                a.toWatch = [a];
                break;
            case s.MemberExpression:
                aa(a.object, b);
                a.computed && aa(a.property, b);
                a.constant = a.object.constant && (!a.computed || a.property
                    .constant);
                a.toWatch = [a];
                break;
            case s.CallExpression:
                d = a.filter ? !b(a.callee.name).$stateful : !1;
                c = [];
                q(a.arguments, function(a) {
                    aa(a, b);
                    d = d && a.constant;
                    a.constant || c.push.apply(c, a.toWatch)
                });
                a.constant = d;
                a.toWatch = a.filter && !b(a.callee.name).$stateful ? c : [
                    a
                ];
                break;
            case s.AssignmentExpression:
                aa(a.left, b);
                aa(a.right, b);
                a.constant = a.left.constant && a.right.constant;
                a.toWatch = [a];
                break;
            case s.ArrayExpression:
                d = !0;
                c = [];
                q(a.elements, function(a) {
                    aa(a, b);
                    d = d && a.constant;
                    a.constant || c.push.apply(c, a.toWatch)
                });
                a.constant = d;
                a.toWatch = c;
                break;
            case s.ObjectExpression:
                d = !0;
                c = [];
                q(a.properties, function(a) {
                    aa(a.value, b);
                    d = d && a.value.constant;
                    a.value.constant || c.push.apply(c, a.value.toWatch)
                });
                a.constant = d;
                a.toWatch = c;
                break;
            case s.ThisExpression:
                a.constant = !1;
                a.toWatch = [];
                break;
            case s.LocalsExpression:
                a.constant = !1, a.toWatch = []
        }
    }

    function od(a) {
        if (1 == a.length) {
            a = a[0].expression;
            var b = a.toWatch;
            return 1 !== b.length ? b : b[0] !== a ? b : void 0
        }
    }

    function pd(a) {
        return a.type === s.Identifier || a.type === s.MemberExpression
    }

    function qd(a) {
        if (1 === a.body.length && pd(a.body[0].expression)) return {
            type: s.AssignmentExpression,
            left: a.body[0].expression,
            right: {
                type: s.NGValueParameter
            },
            operator: "="
        }
    }

    function rd(a) {
        return 0 === a.body.length || 1 === a.body.length && (a.body[0].expression
            .type === s.Literal || a.body[0].expression.type === s.ArrayExpression ||
            a.body[0].expression.type === s.ObjectExpression)
    }

    function sd(a, b) {
        this.astBuilder = a;
        this.$filter = b
    }

    function td(a, b) {
        this.astBuilder = a;
        this.$filter = b
    }

    function Hb(a) {
        return "constructor" == a
    }

    function fc(a) {
        return E(a.valueOf) ? a.valueOf() : kg.call(a)
    }

    function sf() {
        var a = T(),
            b = T(),
            d = {
                "true": !0,
                "false": !1,
                "null": null,
                undefined: void 0
            },
            c, e;
        this.addLiteral = function(a, b) {
            d[a] = b
        };
        this.setIdentifierFns = function(a, b) {
            c = a;
            e = b;
            return this
        };
        this.$get = ["$filter", function(f) {
            function g(c, d, e) {
                var g, k, D;
                e = e || H;
                switch (typeof c) {
                    case "string":
                        D = c = c.trim();
                        var q = e ? b : a;
                        g = q[D];
                        if (!g) {
                            ":" === c.charAt(0) && ":" === c.charAt(
                                1) && (k = !0, c = c.substring(
                                2));
                            g = e ? p : w;
                            var S = new gc(g);
                            g = (new hc(S, f, g)).parse(c);
                            g.constant ? g.$$watchDelegate = r : k ?
                                g.$$watchDelegate = g.literal ? m :
                                n : g.inputs && (g.$$watchDelegate =
                                    l);
                            e && (g = h(g));
                            q[D] = g
                        }
                        return N(g, d);
                    case "function":
                        return N(c, d);
                    default:
                        return N(C, d)
                }
            }

            function h(a) {
                function b(c, d, e, f) {
                    var g = H;
                    H = !0;
                    try {
                        return a(c, d, e, f)
                    } finally {
                        H = g
                    }
                }
                if (!a) return a;
                b.$$watchDelegate = a.$$watchDelegate;
                b.assign = h(a.assign);
                b.constant = a.constant;
                b.literal = a.literal;
                for (var c = 0; a.inputs && c < a.inputs.length; ++
                    c) a.inputs[c] = h(a.inputs[c]);
                b.inputs = a.inputs;
                return b
            }

            function k(a, b) {
                return null == a || null == b ? a === b : "object" ===
                    typeof a && (a = fc(a), "object" === typeof a) ?
                    !1 : a === b || a !== a && b !== b
            }

            function l(a, b, c, d, e) {
                var f = d.inputs,
                    g;
                if (1 === f.length) {
                    var h = k,
                        f = f[0];
                    return a.$watch(function(a) {
                        var b = f(a);
                        k(b, h) || (g = d(a, void 0, void 0, [
                            b
                        ]), h = b && fc(b));
                        return g
                    }, b, c, e)
                }
                for (var l = [], m = [], n = 0, r = f.length; n < r; n++)
                    l[n] = k, m[n] = null;
                return a.$watch(function(a) {
                    for (var b = !1, c = 0, e = f.length; c <
                        e; c++) {
                        var h = f[c](a);
                        if (b || (b = !k(h, l[c]))) m[c] =
                            h, l[c] = h && fc(h)
                    }
                    b && (g = d(a, void 0, void 0, m));
                    return g
                }, b, c, e)
            }

            function n(a, b, c, d) {
                var e, f;
                return e = a.$watch(function(a) {
                    return d(a)
                }, function(a, c, d) {
                    f = a;
                    E(b) && b.apply(this, arguments);
                    x(a) && d.$$postDigest(function() {
                        x(f) && e()
                    })
                }, c)
            }

            function m(a, b, c, d) {
                function e(a) {
                    var b = !0;
                    q(a, function(a) {
                        x(a) || (b = !1)
                    });
                    return b
                }
                var f, g;
                return f = a.$watch(function(a) {
                    return d(a)
                }, function(a, c, d) {
                    g = a;
                    E(b) && b.call(this, a, c, d);
                    e(a) && d.$$postDigest(function() {
                        e(g) && f()
                    })
                }, c)
            }

            function r(a, b, c, d) {
                var e;
                return e = a.$watch(function(a) {
                    e();
                    return d(a)
                }, b, c)
            }

            function N(a, b) {
                if (!b) return a;
                var c = a.$$watchDelegate,
                    d = !1,
                    c = c !== m && c !== n ? function(c, e, f, g) {
                        f = d && g ? g[0] : a(c, e, f, g);
                        return b(f, c, e)
                    } : function(c, d, e, f) {
                        e = a(c, d, e, f);
                        c = b(e, c, d);
                        return x(e) ? c : e
                    };
                a.$$watchDelegate && a.$$watchDelegate !== l ? c.$$watchDelegate =
                    a.$$watchDelegate : b.$stateful || (c.$$watchDelegate =
                        l, d = !a.inputs, c.inputs = a.inputs ? a.inputs : [
                            a
                        ]);
                return c
            }
            var M = Ea().noUnsafeEval,
                w = {
                    csp: M,
                    expensiveChecks: !1,
                    literals: qa(d),
                    isIdentifierStart: E(c) && c,
                    isIdentifierContinue: E(e) && e
                },
                p = {
                    csp: M,
                    expensiveChecks: !0,
                    literals: qa(d),
                    isIdentifierStart: E(c) && c,
                    isIdentifierContinue: E(e) && e
                },
                H = !1;
            g.$$runningExpensiveChecks = function() {
                return H
            };
            return g
        }]
    }

    function uf() {
        this.$get = ["$rootScope", "$exceptionHandler", function(a, b) {
            return ud(function(b) {
                a.$evalAsync(b)
            }, b)
        }]
    }

    function vf() {
        this.$get = ["$browser", "$exceptionHandler", function(a, b) {
            return ud(function(b) {
                a.defer(b)
            }, b)
        }]
    }

    function ud(a, b) {
        function d() {
            this.$$state = {
                status: 0
            }
        }

        function c(a, b) {
            return function(c) {
                b.call(a, c)
            }
        }

        function e(c) {
            !c.processScheduled && c.pending && (c.processScheduled = !0, a(
                function() {
                    var a, d, e;
                    e = c.pending;
                    c.processScheduled = !1;
                    c.pending = void 0;
                    for (var f = 0, g = e.length; f < g; ++f) {
                        d = e[f][0];
                        a = e[f][c.status];
                        try {
                            E(a) ? d.resolve(a(c.value)) : 1 === c.status ?
                                d.resolve(c.value) : d.reject(c.value)
                        } catch (h) {
                            d.reject(h), b(h)
                        }
                    }
                }))
        }

        function f() {
            this.promise = new d
        }
        var g = O("$q", TypeError);
        R(d.prototype, {
            then: function(a, b, c) {
                if (y(a) && y(b) && y(c)) return this;
                var d = new f;
                this.$$state.pending = this.$$state.pending || [];
                this.$$state.pending.push([d, a, b, c]);
                0 < this.$$state.status && e(this.$$state);
                return d.promise
            },
            "catch": function(a) {
                return this.then(null, a)
            },
            "finally": function(a, b) {
                return this.then(function(b) {
                    return k(b, !0, a)
                }, function(b) {
                    return k(b, !1, a)
                }, b)
            }
        });
        R(f.prototype, {
            resolve: function(a) {
                this.promise.$$state.status || (a === this.promise ?
                    this.$$reject(g("qcycle", a)) : this.$$resolve(
                        a))
            },
            $$resolve: function(a) {
                function d(a) {
                    k || (k = !0, h.$$resolve(a))
                }

                function f(a) {
                    k || (k = !0, h.$$reject(a))
                }
                var g, h = this,
                    k = !1;
                try {
                    if (G(a) || E(a)) g = a && a.then;
                    E(g) ? (this.promise.$$state.status = -1, g
                        .call(a, d, f, c(this, this.notify))
                    ) : (this.promise.$$state.value = a,
                        this.promise.$$state.status = 1, e(
                            this.promise.$$state))
                } catch (l) {
                    f(l), b(l)
                }
            },
            reject: function(a) {
                this.promise.$$state.status || this.$$reject(a)
            },
            $$reject: function(a) {
                this.promise.$$state.value = a;
                this.promise.$$state.status = 2;
                e(this.promise.$$state)
            },
            notify: function(c) {
                var d = this.promise.$$state.pending;
                0 >= this.promise.$$state.status && d && d.length &&
                    a(function() {
                        for (var a, e, f = 0, g = d.length; f <
                            g; f++) {
                            e = d[f][0];
                            a = d[f][3];
                            try {
                                e.notify(E(a) ? a(c) : c)
                            } catch (h) {
                                b(h)
                            }
                        }
                    })
            }
        });
        var h = function(a, b) {
                var c = new f;
                b ? c.resolve(a) : c.reject(a);
                return c.promise
            },
            k = function(a, b, c) {
                var d = null;
                try {
                    E(c) && (d = c())
                } catch (e) {
                    return h(e, !1)
                }
                return d && E(d.then) ? d.then(function() {
                    return h(a, b)
                }, function(a) {
                    return h(a, !1)
                }) : h(a, b)
            },
            l = function(a, b, c, d) {
                var e = new f;
                e.resolve(a);
                return e.promise.then(b, c, d)
            },
            n = function(a) {
                if (!E(a)) throw g("norslvr", a);
                var b = new f;
                a(function(a) {
                    b.resolve(a)
                }, function(a) {
                    b.reject(a)
                });
                return b.promise
            };
        n.prototype = d.prototype;
        n.defer = function() {
            var a = new f;
            a.resolve = c(a, a.resolve);
            a.reject = c(a, a.reject);
            a.notify = c(a, a.notify);
            return a
        };
        n.reject = function(a) {
            var b = new f;
            b.reject(a);
            return b.promise
        };
        n.when = l;
        n.resolve = l;
        n.all = function(a) {
            var b = new f,
                c = 0,
                d = K(a) ? [] : {};
            q(a, function(a, e) {
                c++;
                l(a).then(function(a) {
                    d.hasOwnProperty(e) || (d[e] = a, --
                        c || b.resolve(d))
                }, function(a) {
                    d.hasOwnProperty(e) || b.reject(a)
                })
            });
            0 === c && b.resolve(d);
            return b.promise
        };
        return n
    }

    function Ef() {
        this.$get = ["$window", "$timeout", function(a, b) {
            var d = a.requestAnimationFrame || a.webkitRequestAnimationFrame,
                c = a.cancelAnimationFrame || a.webkitCancelAnimationFrame ||
                a.webkitCancelRequestAnimationFrame,
                e = !!d,
                f = e ? function(a) {
                    var b = d(a);
                    return function() {
                        c(b)
                    }
                } : function(a) {
                    var c = b(a, 16.66, !1);
                    return function() {
                        b.cancel(c)
                    }
                };
            f.supported = e;
            return f
        }]
    }

    function tf() {
        function a(a) {
            function b() {
                this.$$watchers = this.$$nextSibling = this.$$childHead =
                    this.$$childTail = null;
                this.$$listeners = {};
                this.$$listenerCount = {};
                this.$$watchersCount = 0;
                this.$id = ++nb;
                this.$$ChildScope = null
            }
            b.prototype = a;
            return b
        }
        var b = 10,
            d = O("$rootScope"),
            c = null,
            e = null;
        this.digestTtl = function(a) {
            arguments.length && (b = a);
            return b
        };
        this.$get = ["$exceptionHandler", "$parse", "$browser", function(f,
            g, h) {
            function k(a) {
                a.currentScope.$$destroyed = !0
            }

            function l(a) {
                9 === Ca && (a.$$childHead && l(a.$$childHead), a.$$nextSibling &&
                    l(a.$$nextSibling));
                a.$parent = a.$$nextSibling = a.$$prevSibling = a.$$childHead =
                    a.$$childTail = a.$root = a.$$watchers = null
            }

            function n() {
                this.$id = ++nb;
                this.$$phase = this.$parent = this.$$watchers =
                    this.$$nextSibling = this.$$prevSibling = this.$$childHead =
                    this.$$childTail = null;
                this.$root = this;
                this.$$destroyed = !1;
                this.$$listeners = {};
                this.$$listenerCount = {};
                this.$$watchersCount = 0;
                this.$$isolateBindings = null
            }

            function m(a) {
                if (H.$$phase) throw d("inprog", H.$$phase);
                H.$$phase = a
            }

            function r(a, b) {
                do a.$$watchersCount += b; while (a = a.$parent)
            }

            function N(a, b, c) {
                do a.$$listenerCount[c] -= b, 0 === a.$$listenerCount[
                    c] && delete a.$$listenerCount[c]; while (a = a
                    .$parent)
            }

            function s() {}

            function w() {
                for (; u.length;) try {
                    u.shift()()
                } catch (a) {
                    f(a)
                }
                e = null
            }

            function p() {
                null === e && (e = h.defer(function() {
                    H.$apply(w)
                }))
            }
            n.prototype = {
                constructor: n,
                $new: function(b, c) {
                    var d;
                    c = c || this;
                    b ? (d = new n, d.$root = this.$root) :
                        (this.$$ChildScope || (this.$$ChildScope =
                            a(this)), d = new this.$$ChildScope);
                    d.$parent = c;
                    d.$$prevSibling = c.$$childTail;
                    c.$$childHead ? (c.$$childTail.$$nextSibling =
                            d, c.$$childTail = d) : c.$$childHead =
                        c.$$childTail = d;
                    (b || c != this) && d.$on("$destroy", k);
                    return d
                },
                $watch: function(a, b, d, e) {
                    var f = g(a);
                    if (f.$$watchDelegate) return f.$$watchDelegate(
                        this, b, d, f, a);
                    var h = this,
                        k = h.$$watchers,
                        l = {
                            fn: b,
                            last: s,
                            get: f,
                            exp: e || a,
                            eq: !!d
                        };
                    c = null;
                    E(b) || (l.fn = C);
                    k || (k = h.$$watchers = []);
                    k.unshift(l);
                    r(this, 1);
                    return function() {
                        0 <= Za(k, l) && r(h, -1);
                        c = null
                    }
                },
                $watchGroup: function(a, b) {
                    function c() {
                        h = !1;
                        k ? (k = !1, b(e, e, g)) : b(e, d,
                            g)
                    }
                    var d = Array(a.length),
                        e = Array(a.length),
                        f = [],
                        g = this,
                        h = !1,
                        k = !0;
                    if (!a.length) {
                        var l = !0;
                        g.$evalAsync(function() {
                            l && b(e, e, g)
                        });
                        return function() {
                            l = !1
                        }
                    }
                    if (1 === a.length) return this.$watch(
                        a[0],
                        function(a, c, f) {
                            e[0] = a;
                            d[0] = c;
                            b(e, a === c ? e : d, f)
                        });
                    q(a, function(a, b) {
                        var k = g.$watch(a,
                            function(a, f) {
                                e[b] = a;
                                d[b] = f;
                                h || (h = !0, g
                                    .$evalAsync(
                                        c))
                            });
                        f.push(k)
                    });
                    return function() {
                        for (; f.length;) f.shift()()
                    }
                },
                $watchCollection: function(a, b) {
                    function c(a) {
                        e = a;
                        var b, d, g, h;
                        if (!y(e)) {
                            if (G(e))
                                if (ya(e))
                                    for (f !== m && (f = m,
                                            t = f.length =
                                            0, l++), a = e.length,
                                        t !== a && (l++, f.length =
                                            t = a), b = 0; b <
                                        a; b++) h = f[b], g =
                                        e[b], d = h !== h &&
                                        g !== g, d || h ===
                                        g || (l++, f[b] = g);
                                else {
                                    f !== r && (f = r = {},
                                        t = 0, l++);
                                    a = 0;
                                    for (b in e) ua.call(e,
                                        b) && (a++, g =
                                        e[b], h = f[b],
                                        b in f ? (d = h !==
                                            h && g !==
                                            g, d || h ===
                                            g || (l++,
                                                f[b] =
                                                g)) : (
                                            t++, f[b] =
                                            g, l++));
                                    if (t > a)
                                        for (b in l++, f) ua
                                            .call(e, b) ||
                                            (t--, delete f[
                                                b])
                                } else f !== e && (f = e, l++);
                            return l
                        }
                    }
                    c.$stateful = !0;
                    var d = this,
                        e, f, h, k = 1 < b.length,
                        l = 0,
                        n = g(a, c),
                        m = [],
                        r = {},
                        p = !0,
                        t = 0;
                    return this.$watch(n, function() {
                        p ? (p = !1, b(e, e, d)) :
                            b(e, h, d);
                        if (k)
                            if (G(e))
                                if (ya(e)) {
                                    h = Array(e.length);
                                    for (var a = 0; a <
                                        e.length; a++
                                    ) h[a] = e[a]
                                } else
                                    for (a in h = {},
                                        e) ua.call(
                                            e, a) &&
                                        (h[a] = e[a]);
                        else h = e
                    })
                },
                $digest: function() {
                    var a, g, k, l, n, r, p, q, N = b,
                        u, x = [],
                        y, v;
                    m("$digest");
                    h.$$checkUrlChange();
                    this === H && null !== e && (h.defer.cancel(
                        e), w());
                    c = null;
                    do {
                        q = !1;
                        for (u = this; t.length;) {
                            try {
                                v = t.shift(), v.scope.$eval(
                                    v.expression, v.locals
                                )
                            } catch (C) {
                                f(C)
                            }
                            c = null
                        }
                        a: do {
                            if (r = u.$$watchers)
                                for (p = r.length; p--;)
                                    try {
                                        if (a = r[p])
                                            if (n = a.get, (
                                                    g =
                                                    n(u)
                                                ) !== (
                                                    k =
                                                    a.last
                                                ) && !(
                                                    a.eq ?
                                                    pa(
                                                        g,
                                                        k
                                                    ) :
                                                    "number" ===
                                                    typeof g &&
                                                    "number" ===
                                                    typeof k &&
                                                    isNaN(
                                                        g
                                                    ) &&
                                                    isNaN(
                                                        k
                                                    )))
                                                q = !0,
                                                c = a,
                                                a.last =
                                                a.eq ?
                                                qa(g,
                                                    null
                                                ) : g,
                                                l = a.fn,
                                                l(g, k ===
                                                    s ?
                                                    g :
                                                    k,
                                                    u),
                                                5 > N &&
                                                (y = 4 -
                                                    N,
                                                    x[y] ||
                                                    (x[
                                                        y
                                                    ] = []),
                                                    x[y]
                                                    .push({
                                                        msg: E(
                                                                a
                                                                .exp
                                                            ) ?
                                                            "fn: " +
                                                            (
                                                                a
                                                                .exp
                                                                .name ||
                                                                a
                                                                .exp
                                                                .toString()
                                                            ) : a
                                                            .exp,
                                                        newVal: g,
                                                        oldVal: k
                                                    }));
                                            else if (a ===
                                            c) {
                                            q = !1;
                                            break a
                                        }
                                    } catch (F) {
                                        f(F)
                                    }
                            if (!(r = u.$$watchersCount &&
                                    u.$$childHead || u !==
                                    this && u.$$nextSibling
                                ))
                                for (; u !== this && !(
                                        r = u.$$nextSibling
                                    );) u = u.$parent
                        } while (u = r);
                        if ((q || t.length) && !N--) throw H
                            .$$phase = null, d("infdig", b,
                                x);
                    } while (q || t.length);
                    for (H.$$phase = null; z.length;) try {
                        z.shift()()
                    } catch (B) {
                        f(B)
                    }
                },
                $destroy: function() {
                    if (!this.$$destroyed) {
                        var a = this.$parent;
                        this.$broadcast("$destroy");
                        this.$$destroyed = !0;
                        this === H && h.$$applicationDestroyed();
                        r(this, -this.$$watchersCount);
                        for (var b in this.$$listenerCount)
                            N(this, this.$$listenerCount[b],
                                b);
                        a && a.$$childHead == this && (a.$$childHead =
                            this.$$nextSibling);
                        a && a.$$childTail == this && (a.$$childTail =
                            this.$$prevSibling);
                        this.$$prevSibling && (this.$$prevSibling
                            .$$nextSibling = this.$$nextSibling
                        );
                        this.$$nextSibling && (this.$$nextSibling
                            .$$prevSibling = this.$$prevSibling
                        );
                        this.$destroy = this.$digest = this
                            .$apply = this.$evalAsync =
                            this.$applyAsync = C;
                        this.$on = this.$watch = this.$watchGroup =
                            function() {
                                return C
                            };
                        this.$$listeners = {};
                        this.$$nextSibling = null;
                        l(this)
                    }
                },
                $eval: function(a, b) {
                    return g(a)(this, b)
                },
                $evalAsync: function(a, b) {
                    H.$$phase || t.length || h.defer(
                        function() {
                            t.length && H.$digest()
                        });
                    t.push({
                        scope: this,
                        expression: g(a),
                        locals: b
                    })
                },
                $$postDigest: function(a) {
                    z.push(a)
                },
                $apply: function(a) {
                    try {
                        m("$apply");
                        try {
                            return this.$eval(a)
                        } finally {
                            H.$$phase = null
                        }
                    } catch (b) {
                        f(b)
                    } finally {
                        try {
                            H.$digest()
                        } catch (c) {
                            throw f(c), c;
                        }
                    }
                },
                $applyAsync: function(a) {
                    function b() {
                        c.$eval(a)
                    }
                    var c = this;
                    a && u.push(b);
                    a = g(a);
                    p()
                },
                $on: function(a, b) {
                    var c = this.$$listeners[a];
                    c || (this.$$listeners[a] = c = []);
                    c.push(b);
                    var d = this;
                    do d.$$listenerCount[a] || (d.$$listenerCount[
                        a] = 0), d.$$listenerCount[a]++; while (
                        d = d.$parent);
                    var e = this;
                    return function() {
                        var d = c.indexOf(b); - 1 !== d &&
                            (c[d] = null, N(e, 1, a))
                    }
                },
                $emit: function(a, b) {
                    var c = [],
                        d, e = this,
                        g = !1,
                        h = {
                            name: a,
                            targetScope: e,
                            stopPropagation: function() {
                                g = !0
                            },
                            preventDefault: function() {
                                h.defaultPrevented = !0
                            },
                            defaultPrevented: !1
                        },
                        k = $a([h], arguments, 1),
                        l, n;
                    do {
                        d = e.$$listeners[a] || c;
                        h.currentScope = e;
                        l = 0;
                        for (n = d.length; l < n; l++)
                            if (d[l]) try {
                                d[l].apply(null, k)
                            } catch (m) {
                                f(m)
                            } else d.splice(l, 1), l--,
                                n--;
                        if (g) return h.currentScope = null,
                            h;
                        e = e.$parent
                    } while (e);
                    h.currentScope = null;
                    return h
                },
                $broadcast: function(a, b) {
                    var c = this,
                        d = this,
                        e = {
                            name: a,
                            targetScope: this,
                            preventDefault: function() {
                                e.defaultPrevented = !0
                            },
                            defaultPrevented: !1
                        };
                    if (!this.$$listenerCount[a]) return e;
                    for (var g = $a([e], arguments, 1), h,
                            k; c = d;) {
                        e.currentScope = c;
                        d = c.$$listeners[a] || [];
                        h = 0;
                        for (k = d.length; h < k; h++)
                            if (d[h]) try {
                                d[h].apply(null, g)
                            } catch (l) {
                                f(l)
                            } else d.splice(h, 1), h--,
                                k--;
                        if (!(d = c.$$listenerCount[a] && c
                                .$$childHead || c !== this &&
                                c.$$nextSibling))
                            for (; c !== this && !(d = c.$$nextSibling);)
                                c = c.$parent
                    }
                    e.currentScope = null;
                    return e
                }
            };
            var H = new n,
                t = H.$$asyncQueue = [],
                z = H.$$postDigestQueue = [],
                u = H.$$applyAsyncQueue = [];
            return H
        }]
    }

    function me() {
        var a = /^\s*(https?|ftp|mailto|tel|file):/,
            b = /^\s*((https?|ftp|file|blob):|data:image\/)/;
        this.aHrefSanitizationWhitelist = function(b) {
            return x(b) ? (a = b, this) : a
        };
        this.imgSrcSanitizationWhitelist = function(a) {
            return x(a) ? (b = a, this) : b
        };
        this.$get = function() {
            return function(d, c) {
                var e = c ? b : a,
                    f;
                f = ra(d).href;
                return "" === f || f.match(e) ? d : "unsafe:" + f
            }
        }
    }

    function lg(a) {
        if ("self" === a) return a;
        if (F(a)) {
            if (-1 < a.indexOf("***")) throw ta("iwcard", a);
            a = vd(a).replace("\\*\\*", ".*").replace("\\*", "[^:/.?&;]*");
            return new RegExp("^" + a + "$")
        }
        if (Wa(a)) return new RegExp("^" + a.source + "$");
        throw ta("imatcher");
    }

    function wd(a) {
        var b = [];
        x(a) && q(a, function(a) {
            b.push(lg(a))
        });
        return b
    }

    function xf() {
        this.SCE_CONTEXTS = oa;
        var a = ["self"],
            b = [];
        this.resourceUrlWhitelist = function(b) {
            arguments.length && (a = wd(b));
            return a
        };
        this.resourceUrlBlacklist = function(a) {
            arguments.length && (b = wd(a));
            return b
        };
        this.$get = ["$injector", function(d) {
            function c(a, b) {
                return "self" === a ? hd(b) : !!a.exec(b.href)
            }

            function e(a) {
                var b = function(a) {
                    this.$$unwrapTrustedValue = function() {
                        return a
                    }
                };
                a && (b.prototype = new a);
                b.prototype.valueOf = function() {
                    return this.$$unwrapTrustedValue()
                };
                b.prototype.toString = function() {
                    return this.$$unwrapTrustedValue().toString()
                };
                return b
            }
            var f = function(a) {
                throw ta("unsafe");
            };
            d.has("$sanitize") && (f = d.get("$sanitize"));
            var g = e(),
                h = {};
            h[oa.HTML] = e(g);
            h[oa.CSS] = e(g);
            h[oa.URL] = e(g);
            h[oa.JS] = e(g);
            h[oa.RESOURCE_URL] = e(h[oa.URL]);
            return {
                trustAs: function(a, b) {
                    var c = h.hasOwnProperty(a) ? h[a] : null;
                    if (!c) throw ta("icontext", a, b);
                    if (null === b || y(b) || "" === b) return b;
                    if ("string" !== typeof b) throw ta("itype",
                        a);
                    return new c(b)
                },
                getTrusted: function(d, e) {
                    if (null === e || y(e) || "" === e) return e;
                    var g = h.hasOwnProperty(d) ? h[d] : null;
                    if (g && e instanceof g) return e.$$unwrapTrustedValue();
                    if (d === oa.RESOURCE_URL) {
                        var g = ra(e.toString()),
                            m, r, q = !1;
                        m = 0;
                        for (r = a.length; m < r; m++)
                            if (c(a[m], g)) {
                                q = !0;
                                break
                            }
                        if (q)
                            for (m = 0, r = b.length; m < r; m++)
                                if (c(b[m], g)) {
                                    q = !1;
                                    break
                                }
                        if (q) return e;
                        throw ta("insecurl", e.toString());
                    }
                    if (d === oa.HTML) return f(e);
                    throw ta("unsafe");
                },
                valueOf: function(a) {
                    return a instanceof g ? a.$$unwrapTrustedValue() :
                        a
                }
            }
        }]
    }

    function wf() {
        var a = !0;
        this.enabled = function(b) {
            arguments.length && (a = !!b);
            return a
        };
        this.$get = ["$parse", "$sceDelegate", function(b, d) {
            if (a && 8 > Ca) throw ta("iequirks");
            var c = ha(oa);
            c.isEnabled = function() {
                return a
            };
            c.trustAs = d.trustAs;
            c.getTrusted = d.getTrusted;
            c.valueOf = d.valueOf;
            a || (c.trustAs = c.getTrusted = function(a, b) {
                return b
            }, c.valueOf = Xa);
            c.parseAs = function(a, d) {
                var e = b(d);
                return e.literal && e.constant ? e : b(d,
                    function(b) {
                        return c.getTrusted(a, b)
                    })
            };
            var e = c.parseAs,
                f = c.getTrusted,
                g = c.trustAs;
            q(oa, function(a, b) {
                var d = P(b);
                c[cb("parse_as_" + d)] = function(b) {
                    return e(a, b)
                };
                c[cb("get_trusted_" + d)] = function(b) {
                    return f(a, b)
                };
                c[cb("trust_as_" + d)] = function(b) {
                    return g(a, b)
                }
            });
            return c
        }]
    }

    function yf() {
        this.$get = ["$window", "$document", function(a, b) {
            var d = {},
                c = !(a.chrome && a.chrome.app && a.chrome.app.runtime) &&
                a.history && a.history.pushState,
                e = X((/android (\d+)/.exec(P((a.navigator || {}).userAgent)) || [])[
                    1]),
                f = /Boxee/i.test((a.navigator || {}).userAgent),
                g = b[0] || {},
                h, k = /^(Moz|webkit|ms)(?=[A-Z])/,
                l = g.body && g.body.style,
                n = !1,
                m = !1;
            if (l) {
                for (var r in l)
                    if (n = k.exec(r)) {
                        h = n[0];
                        h = h.substr(0, 1).toUpperCase() + h.substr(
                            1);
                        break
                    }
                h || (h = "WebkitOpacity" in l && "webkit");
                n = !!("transition" in l || h + "Transition" in l);
                m = !!("animation" in l || h + "Animation" in l);
                !e || n && m || (n = F(l.webkitTransition), m = F(l
                    .webkitAnimation))
            }
            return {
                history: !(!c || 4 > e || f),
                hasEvent: function(a) {
                    if ("input" === a && 11 >= Ca) return !1;
                    if (y(d[a])) {
                        var b = g.createElement("div");
                        d[a] = "on" + a in b
                    }
                    return d[a]
                },
                csp: Ea(),
                vendorPrefix: h,
                transitions: n,
                animations: m,
                android: e
            }
        }]
    }

    function Af() {
        var a;
        this.httpOptions = function(b) {
            return b ? (a = b, this) : a
        };
        this.$get = ["$templateCache", "$http", "$q", "$sce", function(b, d,
            c, e) {
            function f(g, h) {
                f.totalPendingRequests++;
                F(g) && b.get(g) || (g = e.getTrustedResourceUrl(g));
                var k = d.defaults && d.defaults.transformResponse;
                K(k) ? k = k.filter(function(a) {
                    return a !== ac
                }) : k === ac && (k = null);
                return d.get(g, R({
                    cache: b,
                    transformResponse: k
                }, a))["finally"](function() {
                    f.totalPendingRequests--
                }).then(function(a) {
                    b.put(g, a.data);
                    return a.data
                }, function(a) {
                    if (!h) throw mg("tpload", g, a.status,
                        a.statusText);
                    return c.reject(a)
                })
            }
            f.totalPendingRequests = 0;
            return f
        }]
    }

    function Bf() {
        this.$get = ["$rootScope", "$browser", "$location", function(a, b,
            d) {
            return {
                findBindings: function(a, b, d) {
                    a = a.getElementsByClassName("ng-binding");
                    var g = [];
                    q(a, function(a) {
                        var c = ea.element(a).data(
                            "$binding");
                        c && q(c, function(c) {
                            d ? (new RegExp(
                                    "(^|\\s)" +
                                    vd(b) +
                                    "(\\s|\\||$)"
                                )).test(c) && g
                                .push(a) : -1 !=
                                c.indexOf(b) &&
                                g.push(a)
                        })
                    });
                    return g
                },
                findModels: function(a, b, d) {
                    for (var g = ["ng-", "data-ng-", "ng\\:"],
                            h = 0; h < g.length; ++h) {
                        var k = a.querySelectorAll("[" + g[h] +
                            "model" + (d ? "=" : "*=") +
                            '"' + b + '"]');
                        if (k.length) return k
                    }
                },
                getLocation: function() {
                    return d.url()
                },
                setLocation: function(b) {
                    b !== d.url() && (d.url(b), a.$digest())
                },
                whenStable: function(a) {
                    b.notifyWhenNoOutstandingRequests(a)
                }
            }
        }]
    }

    function Cf() {
        this.$get = ["$rootScope", "$browser", "$q", "$$q",
            "$exceptionHandler",
            function(a, b, d, c, e) {
                function f(f, k, l) {
                    E(f) || (l = k, k = f, f = C);
                    var n = za.call(arguments, 3),
                        m = x(l) && !l,
                        r = (m ? c : d).defer(),
                        q = r.promise,
                        s;
                    s = b.defer(function() {
                        try {
                            r.resolve(f.apply(null, n))
                        } catch (b) {
                            r.reject(b), e(b)
                        } finally {
                            delete g[q.$$timeoutId]
                        }
                        m || a.$apply()
                    }, k);
                    q.$$timeoutId = s;
                    g[s] = r;
                    return q
                }
                var g = {};
                f.cancel = function(a) {
                    return a && a.$$timeoutId in g ? (g[a.$$timeoutId]
                        .reject("canceled"), delete g[a.$$timeoutId],
                        b.defer.cancel(a.$$timeoutId)) : !1
                };
                return f
            }
        ]
    }

    function ra(a) {
        Ca && (Y.setAttribute("href", a), a = Y.href);
        Y.setAttribute("href", a);
        return {
            href: Y.href,
            protocol: Y.protocol ? Y.protocol.replace(/:$/, "") : "",
            host: Y.host,
            search: Y.search ? Y.search.replace(/^\?/, "") : "",
            hash: Y.hash ? Y.hash.replace(/^#/, "") : "",
            hostname: Y.hostname,
            port: Y.port,
            pathname: "/" === Y.pathname.charAt(0) ? Y.pathname : "/" + Y.pathname
        }
    }

    function hd(a) {
        a = F(a) ? ra(a) : a;
        return a.protocol === xd.protocol && a.host === xd.host
    }

    function Df() {
        this.$get = da(v)
    }

    function yd(a) {
        function b(a) {
            try {
                return decodeURIComponent(a)
            } catch (b) {
                return a
            }
        }
        var d = a[0] || {},
            c = {},
            e = "";
        return function() {
            var a, g, h, k, l;
            a = d.cookie || "";
            if (a !== e)
                for (e = a, a = e.split("; "), c = {}, h = 0; h < a.length; h++)
                    g = a[h], k = g.indexOf("="), 0 < k && (l = b(g.substring(
                        0, k)), y(c[l]) && (c[l] = b(g.substring(k +
                        1))));
            return c
        }
    }

    function Hf() {
        this.$get = yd
    }

    function Jc(a) {
        function b(d, c) {
            if (G(d)) {
                var e = {};
                q(d, function(a, c) {
                    e[c] = b(c, a)
                });
                return e
            }
            return a.factory(d + "Filter", c)
        }
        this.register = b;
        this.$get = ["$injector", function(a) {
            return function(b) {
                return a.get(b + "Filter")
            }
        }];
        b("currency", zd);
        b("date", Ad);
        b("filter", ng);
        b("json", og);
        b("limitTo", pg);
        b("lowercase", qg);
        b("number", Bd);
        b("orderBy", Cd);
        b("uppercase", rg)
    }

    function ng() {
        return function(a, b, d) {
            if (!ya(a)) {
                if (null == a) return a;
                throw O("filter")("notarray", a);
            }
            var c;
            switch (ic(b)) {
                case "function":
                    break;
                case "boolean":
                case "null":
                case "number":
                case "string":
                    c = !0;
                case "object":
                    b = sg(b, d, c);
                    break;
                default:
                    return a
            }
            return Array.prototype.filter.call(a, b)
        }
    }

    function sg(a, b, d) {
        var c = G(a) && "$" in a;
        !0 === b ? b = pa : E(b) || (b = function(a, b) {
            if (y(a)) return !1;
            if (null === a || null === b) return a === b;
            if (G(b) || G(a) && !rc(a)) return !1;
            a = P("" + a);
            b = P("" + b);
            return -1 !== a.indexOf(b)
        });
        return function(e) {
            return c && !G(e) ? Ka(e, a.$, b, !1) : Ka(e, a, b, d)
        }
    }

    function Ka(a, b, d, c, e) {
        var f = ic(a),
            g = ic(b);
        if ("string" === g && "!" === b.charAt(0)) return !Ka(a, b.substring(
            1), d, c);
        if (K(a)) return a.some(function(a) {
            return Ka(a, b, d, c)
        });
        switch (f) {
            case "object":
                var h;
                if (c) {
                    for (h in a)
                        if ("$" !== h.charAt(0) && Ka(a[h], b, d, !0))
                            return !0;
                    return e ? !1 : Ka(a, b, d, !1)
                }
                if ("object" === g) {
                    for (h in b)
                        if (e = b[h], !E(e) && !y(e) && (f = "$" === h, !Ka(
                                f ? a : a[h], e, d, f, f))) return !1;
                    return !0
                }
                return d(a, b);
            case "function":
                return !1;
            default:
                return d(a, b)
        }
    }

    function ic(a) {
        return null === a ? "null" : typeof a
    }

    function zd(a) {
        var b = a.NUMBER_FORMATS;
        return function(a, c, e) {
            y(c) && (c = b.CURRENCY_SYM);
            y(e) && (e = b.PATTERNS[1].maxFrac);
            return null == a ? a : Dd(a, b.PATTERNS[1], b.GROUP_SEP, b.DECIMAL_SEP,
                e).replace(/\u00A4/g, c)
        }
    }

    function Bd(a) {
        var b = a.NUMBER_FORMATS;
        return function(a, c) {
            return null == a ? a : Dd(a, b.PATTERNS[0], b.GROUP_SEP, b.DECIMAL_SEP,
                c)
        }
    }

    function tg(a) {
        var b = 0,
            d, c, e, f, g; - 1 < (c = a.indexOf(Ed)) && (a = a.replace(Ed,
            ""));
        0 < (e = a.search(/e/i)) ? (0 > c && (c = e), c += +a.slice(e + 1),
            a = a.substring(0, e)) : 0 > c && (c = a.length);
        for (e = 0; a.charAt(e) == jc; e++);
        if (e == (g = a.length)) d = [0], c = 1;
        else {
            for (g--; a.charAt(g) == jc;) g--;
            c -= e;
            d = [];
            for (f = 0; e <= g; e++, f++) d[f] = +a.charAt(e)
        }
        c > Fd && (d = d.splice(0, Fd - 1), b = c - 1, c = 1);
        return {
            d: d,
            e: b,
            i: c
        }
    }

    function ug(a, b, d, c) {
        var e = a.d,
            f = e.length - a.i;
        b = y(b) ? Math.min(Math.max(d, f), c) : +b;
        d = b + a.i;
        c = e[d];
        if (0 < d) {
            e.splice(Math.max(a.i, d));
            for (var g = d; g < e.length; g++) e[g] = 0
        } else
            for (f = Math.max(0, f), a.i = 1, e.length = Math.max(1, d = b +
                    1), e[0] = 0, g = 1; g < d; g++) e[g] = 0;
        if (5 <= c)
            if (0 > d - 1) {
                for (c = 0; c > d; c--) e.unshift(0), a.i++;
                e.unshift(1);
                a.i++
            } else e[d - 1]++;
        for (; f < Math.max(0, b); f++) e.push(0);
        if (b = e.reduceRight(function(a, b, c, d) {
                b += a;
                d[c] = b % 10;
                return Math.floor(b / 10)
            }, 0)) e.unshift(b), a.i++
    }

    function Dd(a, b, d, c, e) {
        if (!F(a) && !Q(a) || isNaN(a)) return "";
        var f = !isFinite(a),
            g = !1,
            h = Math.abs(a) + "",
            k = "";
        if (f) k = "\u221e";
        else {
            g = tg(h);
            ug(g, e, b.minFrac, b.maxFrac);
            k = g.d;
            h = g.i;
            e = g.e;
            f = [];
            for (g = k.reduce(function(a, b) {
                    return a && !b
                }, !0); 0 > h;) k.unshift(0), h++;
            0 < h ? f = k.splice(h) : (f = k, k = [0]);
            h = [];
            for (k.length >= b.lgSize && h.unshift(k.splice(-b.lgSize).join(
                    "")); k.length > b.gSize;) h.unshift(k.splice(-b.gSize)
                .join(""));
            k.length && h.unshift(k.join(""));
            k = h.join(d);
            f.length && (k += c + f.join(""));
            e && (k += "e+" + e)
        }
        return 0 > a && !g ? b.negPre + k + b.negSuf : b.posPre + k + b.posSuf
    }

    function Ib(a, b, d, c) {
        var e = "";
        if (0 > a || c && 0 >= a) c ? a = -a + 1 : (a = -a, e = "-");
        for (a = "" + a; a.length < b;) a = jc + a;
        d && (a = a.substr(a.length - b));
        return e + a
    }

    function W(a, b, d, c, e) {
        d = d || 0;
        return function(f) {
            f = f["get" + a]();
            if (0 < d || f > -d) f += d;
            0 === f && -12 == d && (f = 12);
            return Ib(f, b, c, e)
        }
    }

    function ib(a, b, d) {
        return function(c, e) {
            var f = c["get" + a](),
                g = sb((d ? "STANDALONE" : "") + (b ? "SHORT" : "") + a);
            return e[g][f]
        }
    }

    function Gd(a) {
        var b = (new Date(a, 0, 1)).getDay();
        return new Date(a, 0, (4 >= b ? 5 : 12) - b)
    }

    function Hd(a) {
        return function(b) {
            var d = Gd(b.getFullYear());
            b = +new Date(b.getFullYear(), b.getMonth(), b.getDate() +
                (4 - b.getDay())) - +d;
            b = 1 + Math.round(b / 6048E5);
            return Ib(b, a)
        }
    }

    function kc(a, b) {
        return 0 >= a.getFullYear() ? b.ERAS[0] : b.ERAS[1]
    }

    function Ad(a) {
        function b(a) {
            var b;
            if (b = a.match(d)) {
                a = new Date(0);
                var f = 0,
                    g = 0,
                    h = b[8] ? a.setUTCFullYear : a.setFullYear,
                    k = b[8] ? a.setUTCHours : a.setHours;
                b[9] && (f = X(b[9] + b[10]), g = X(b[9] + b[11]));
                h.call(a, X(b[1]), X(b[2]) - 1, X(b[3]));
                f = X(b[4] || 0) - f;
                g = X(b[5] || 0) - g;
                h = X(b[6] || 0);
                b = Math.round(1E3 * parseFloat("0." + (b[7] || 0)));
                k.call(a, f, g, h, b)
            }
            return a
        }
        var d =
            /^(\d{4})-?(\d\d)-?(\d\d)(?:T(\d\d)(?::?(\d\d)(?::?(\d\d)(?:\.(\d+))?)?)?(Z|([+-])(\d\d):?(\d\d))?)?$/;
        return function(c, d, f) {
            var g = "",
                h = [],
                k, l;
            d = d || "mediumDate";
            d = a.DATETIME_FORMATS[d] || d;
            F(c) && (c = vg.test(c) ? X(c) : b(c));
            Q(c) && (c = new Date(c));
            if (!fa(c) || !isFinite(c.getTime())) return c;
            for (; d;)(l = wg.exec(d)) ? (h = $a(h, l, 1), d = h.pop()) :
                (h.push(d), d = null);
            var n = c.getTimezoneOffset();
            f && (n = vc(f, n), c = Qb(c, f, !0));
            q(h, function(b) {
                k = xg[b];
                g += k ? k(c, a.DATETIME_FORMATS, n) : "''" ===
                    b ? "'" : b.replace(/(^'|'$)/g, "").replace(
                        /''/g, "'")
            });
            return g
        }
    }

    function og() {
        return function(a, b) {
            y(b) && (b = 2);
            return ab(a, b)
        }
    }

    function pg() {
        return function(a, b, d) {
            b = Infinity === Math.abs(Number(b)) ? Number(b) : X(b);
            if (isNaN(b)) return a;
            Q(a) && (a = a.toString());
            if (!K(a) && !F(a)) return a;
            d = !d || isNaN(d) ? 0 : X(d);
            d = 0 > d ? Math.max(0, a.length + d) : d;
            return 0 <= b ? a.slice(d, d + b) : 0 === d ? a.slice(b, a.length) :
                a.slice(Math.max(0, d + b), d)
        }
    }

    function Cd(a) {
        function b(b, d) {
            d = d ? -1 : 1;
            return b.map(function(b) {
                var c = 1,
                    h = Xa;
                if (E(b)) h = b;
                else if (F(b)) {
                    if ("+" == b.charAt(0) || "-" == b.charAt(0)) c =
                        "-" == b.charAt(0) ? -1 : 1, b = b.substring(
                            1);
                    if ("" !== b && (h = a(b), h.constant)) var k =
                        h(),
                        h = function(a) {
                            return a[k]
                        }
                }
                return {
                    get: h,
                    descending: c * d
                }
            })
        }

        function d(a) {
            switch (typeof a) {
                case "number":
                case "boolean":
                case "string":
                    return !0;
                default:
                    return !1
            }
        }
        return function(a, e, f) {
            if (null == a) return a;
            if (!ya(a)) throw O("orderBy")("notarray", a);
            K(e) || (e = [e]);
            0 === e.length && (e = ["+"]);
            var g = b(e, f);
            g.push({
                get: function() {
                    return {}
                },
                descending: f ? -1 : 1
            });
            a = Array.prototype.map.call(a, function(a, b) {
                return {
                    value: a,
                    predicateValues: g.map(function(c) {
                        var e = c.get(a);
                        c = typeof e;
                        if (null === e) c = "string", e =
                            "null";
                        else if ("string" === c) e = e.toLowerCase();
                        else if ("object" === c) a: {
                            if ("function" ===
                                typeof e.valueOf &&
                                (e = e.valueOf(), d(
                                    e))) break a;
                            if (rc(e) && (e = e.toString(),
                                    d(e))) break a;
                            e = b
                        }
                        return {
                            value: e,
                            type: c
                        }
                    })
                }
            });
            a.sort(function(a, b) {
                for (var c = 0, d = 0, e = g.length; d < e; ++d) {
                    var c = a.predicateValues[d],
                        f = b.predicateValues[d],
                        q = 0;
                    c.type === f.type ? c.value !== f.value &&
                        (q = c.value < f.value ? -1 : 1) : q =
                        c.type < f.type ? -1 : 1;
                    if (c = q * g[d].descending) break
                }
                return c
            });
            return a = a.map(function(a) {
                return a.value
            })
        }
    }

    function La(a) {
        E(a) && (a = {
            link: a
        });
        a.restrict = a.restrict || "AC";
        return da(a)
    }

    function Id(a, b, d, c, e) {
        var f = this,
            g = [];
        f.$error = {};
        f.$$success = {};
        f.$pending = void 0;
        f.$name = e(b.name || b.ngForm || "")(d);
        f.$dirty = !1;
        f.$pristine = !0;
        f.$valid = !0;
        f.$invalid = !1;
        f.$submitted = !1;
        f.$$parentForm = Jb;
        f.$rollbackViewValue = function() {
            q(g, function(a) {
                a.$rollbackViewValue()
            })
        };
        f.$commitViewValue = function() {
            q(g, function(a) {
                a.$commitViewValue()
            })
        };
        f.$addControl = function(a) {
            Qa(a.$name, "input");
            g.push(a);
            a.$name && (f[a.$name] = a);
            a.$$parentForm = f
        };
        f.$$renameControl = function(a, b) {
            var c = a.$name;
            f[c] === a && delete f[c];
            f[b] = a;
            a.$name = b
        };
        f.$removeControl = function(a) {
            a.$name && f[a.$name] === a && delete f[a.$name];
            q(f.$pending, function(b, c) {
                f.$setValidity(c, null, a)
            });
            q(f.$error, function(b, c) {
                f.$setValidity(c, null, a)
            });
            q(f.$$success, function(b, c) {
                f.$setValidity(c, null, a)
            });
            Za(g, a);
            a.$$parentForm = Jb
        };
        Jd({
            ctrl: this,
            $element: a,
            set: function(a, b, c) {
                var d = a[b];
                d ? -1 === d.indexOf(c) && d.push(c) : a[b] = [
                    c
                ]
            },
            unset: function(a, b, c) {
                var d = a[b];
                d && (Za(d, c), 0 === d.length && delete a[b])
            },
            $animate: c
        });
        f.$setDirty = function() {
            c.removeClass(a, Ua);
            c.addClass(a, Kb);
            f.$dirty = !0;
            f.$pristine = !1;
            f.$$parentForm.$setDirty()
        };
        f.$setPristine = function() {
            c.setClass(a, Ua, Kb + " ng-submitted");
            f.$dirty = !1;
            f.$pristine = !0;
            f.$submitted = !1;
            q(g, function(a) {
                a.$setPristine()
            })
        };
        f.$setUntouched = function() {
            q(g, function(a) {
                a.$setUntouched()
            })
        };
        f.$setSubmitted = function() {
            c.addClass(a, "ng-submitted");
            f.$submitted = !0;
            f.$$parentForm.$setSubmitted()
        }
    }

    function lc(a) {
        a.$formatters.push(function(b) {
            return a.$isEmpty(b) ? b : b.toString()
        })
    }

    function jb(a, b, d, c, e, f) {
        var g = P(b[0].type);
        if (!e.android) {
            var h = !1;
            b.on("compositionstart", function() {
                h = !0
            });
            b.on("compositionend", function() {
                h = !1;
                l()
            })
        }
        var k, l = function(a) {
            k && (f.defer.cancel(k), k = null);
            if (!h) {
                var e = b.val();
                a = a && a.type;
                "password" === g || d.ngTrim && "false" === d.ngTrim ||
                    (e = V(e));
                (c.$viewValue !== e || "" === e && c.$$hasNativeValidators) &&
                c.$setViewValue(e, a)
            }
        };
        if (e.hasEvent("input")) b.on("input", l);
        else {
            var n = function(a, b, c) {
                k || (k = f.defer(function() {
                    k = null;
                    b && b.value === c || l(a)
                }))
            };
            b.on("keydown", function(a) {
                var b = a.keyCode;
                91 === b || 15 < b && 19 > b || 37 <= b && 40 >= b ||
                    n(a, this, this.value)
            });
            if (e.hasEvent("paste")) b.on("paste cut", n)
        }
        b.on("change", l);
        if (Kd[g] && c.$$hasNativeValidators && g === d.type) b.on(
            "keydown wheel mousedown",
            function(a) {
                if (!k) {
                    var b = this.validity,
                        c = b.badInput,
                        d = b.typeMismatch;
                    k = f.defer(function() {
                        k = null;
                        b.badInput === c && b.typeMismatch ===
                            d || l(a)
                    })
                }
            });
        c.$render = function() {
            var a = c.$isEmpty(c.$viewValue) ? "" : c.$viewValue;
            b.val() !== a && b.val(a)
        }
    }

    function Lb(a, b) {
        return function(d, c) {
            var e, f;
            if (fa(d)) return d;
            if (F(d)) {
                '"' == d.charAt(0) && '"' == d.charAt(d.length - 1) &&
                    (d = d.substring(1, d.length - 1));
                if (yg.test(d)) return new Date(d);
                a.lastIndex = 0;
                if (e = a.exec(d)) return e.shift(), f = c ? {
                    yyyy: c.getFullYear(),
                    MM: c.getMonth() + 1,
                    dd: c.getDate(),
                    HH: c.getHours(),
                    mm: c.getMinutes(),
                    ss: c.getSeconds(),
                    sss: c.getMilliseconds() / 1E3
                } : {
                    yyyy: 1970,
                    MM: 1,
                    dd: 1,
                    HH: 0,
                    mm: 0,
                    ss: 0,
                    sss: 0
                }, q(e, function(a, c) {
                    c < b.length && (f[b[c]] = +a)
                }), new Date(f.yyyy, f.MM - 1, f.dd, f.HH, f.mm,
                    f.ss || 0, 1E3 * f.sss || 0)
            }
            return NaN
        }
    }

    function kb(a, b, d, c) {
        return function(e, f, g, h, k, l, n) {
            function m(a) {
                return a && !(a.getTime && a.getTime() !== a.getTime())
            }

            function r(a) {
                return x(a) && !fa(a) ? d(a) || void 0 : a
            }
            Ld(e, f, g, h);
            jb(e, f, g, h, k, l);
            var q = h && h.$options && h.$options.timezone,
                s;
            h.$$parserName = a;
            h.$parsers.push(function(a) {
                if (h.$isEmpty(a)) return null;
                if (b.test(a)) return a = d(a, s), q && (a = Qb(
                    a, q)), a
            });
            h.$formatters.push(function(a) {
                if (a && !fa(a)) throw lb("datefmt", a);
                if (m(a)) return (s = a) && q && (s = Qb(s, q, !
                    0)), n("date")(a, c, q);
                s = null;
                return ""
            });
            if (x(g.min) || g.ngMin) {
                var w;
                h.$validators.min = function(a) {
                    return !m(a) || y(w) || d(a) >= w
                };
                g.$observe("min", function(a) {
                    w = r(a);
                    h.$validate()
                })
            }
            if (x(g.max) || g.ngMax) {
                var p;
                h.$validators.max = function(a) {
                    return !m(a) || y(p) || d(a) <= p
                };
                g.$observe("max", function(a) {
                    p = r(a);
                    h.$validate()
                })
            }
        }
    }

    function Ld(a, b, d, c) {
        (c.$$hasNativeValidators = G(b[0].validity)) && c.$parsers.push(
            function(a) {
                var c = b.prop("validity") || {};
                return c.badInput || c.typeMismatch ? void 0 : a
            })
    }

    function Md(a, b, d, c, e) {
        if (x(c)) {
            a = a(c);
            if (!a.constant) throw lb("constexpr", d, c);
            return a(b)
        }
        return e
    }

    function mc(a, b) {
        a = "ngClass" + a;
        return ["$animate", function(d) {
            function c(a, b) {
                var c = [],
                    d = 0;
                a: for (; d < a.length; d++) {
                    for (var e = a[d], n = 0; n < b.length; n++)
                        if (e == b[n]) continue a;
                    c.push(e)
                }
                return c
            }

            function e(a) {
                var b = [];
                return K(a) ? (q(a, function(a) {
                    b = b.concat(e(a))
                }), b) : F(a) ? a.split(" ") : G(a) ? (q(a,
                    function(a, c) {
                        a && (b = b.concat(c.split(" ")))
                    }), b) : a
            }
            return {
                restrict: "AC",
                link: function(f, g, h) {
                    function k(a) {
                        a = l(a, 1);
                        h.$addClass(a)
                    }

                    function l(a, b) {
                        var c = g.data("$classCounts") || T(),
                            d = [];
                        q(a, function(a) {
                            if (0 < b || c[a]) c[a] = (
                                    c[a] || 0) + b, c[a] ===
                                +(0 < b) && d.push(a)
                        });
                        g.data("$classCounts", c);
                        return d.join(" ")
                    }

                    function n(a, b) {
                        var e = c(b, a),
                            f = c(a, b),
                            e = l(e, 1),
                            f = l(f, -1);
                        e && e.length && d.addClass(g, e);
                        f && f.length && d.removeClass(g, f)
                    }

                    function m(a) {
                        if (!0 === b || f.$index % 2 === b) {
                            var c = e(a || []);
                            if (!r) k(c);
                            else if (!pa(a, r)) {
                                var d = e(r);
                                n(d, c)
                            }
                        }
                        r = K(a) ? a.map(function(a) {
                            return ha(a)
                        }) : ha(a)
                    }
                    var r;
                    f.$watch(h[a], m, !0);
                    h.$observe("class", function(b) {
                        m(f.$eval(h[a]))
                    });
                    "ngClass" !== a && f.$watch("$index",
                        function(c, d) {
                            var g = c & 1;
                            if (g !== (d & 1)) {
                                var m = e(f.$eval(h[a]));
                                g === b ? k(m) : (g = l(m, -
                                    1), h.$removeClass(
                                    g))
                            }
                        })
                }
            }
        }]
    }

    function Jd(a) {
        function b(a, b) {
            b && !f[a] ? (k.addClass(e, a), f[a] = !0) : !b && f[a] && (k.removeClass(
                e, a), f[a] = !1)
        }

        function d(a, c) {
            a = a ? "-" + zc(a, "-") : "";
            b(mb + a, !0 === c);
            b(Nd + a, !1 === c)
        }
        var c = a.ctrl,
            e = a.$element,
            f = {},
            g = a.set,
            h = a.unset,
            k = a.$animate;
        f[Nd] = !(f[mb] = e.hasClass(mb));
        c.$setValidity = function(a, e, f) {
            y(e) ? (c.$pending || (c.$pending = {}), g(c.$pending, a, f)) :
                (c.$pending && h(c.$pending, a, f), Od(c.$pending) && (
                    c.$pending = void 0));
            Da(e) ? e ? (h(c.$error, a, f), g(c.$$success, a, f)) : (g(
                c.$error, a, f), h(c.$$success, a, f)) : (h(c.$error,
                a, f), h(c.$$success, a, f));
            c.$pending ? (b(Pd, !0), c.$valid = c.$invalid = void 0, d(
                "", null)) : (b(Pd, !1), c.$valid = Od(c.$error), c
                .$invalid = !c.$valid, d("", c.$valid));
            e = c.$pending && c.$pending[a] ? void 0 : c.$error[a] ? !1 :
                c.$$success[a] ? !0 : null;
            d(a, e);
            c.$$parentForm.$setValidity(a, e, c)
        }
    }

    function Od(a) {
        if (a)
            for (var b in a)
                if (a.hasOwnProperty(b)) return !1;
        return !0
    }
    var zg = /^\/(.+)\/([a-z]*)$/,
        ua = Object.prototype.hasOwnProperty,
        P = function(a) {
            return F(a) ? a.toLowerCase() : a
        },
        sb = function(a) {
            return F(a) ? a.toUpperCase() : a
        },
        Ca, B, Z, za = [].slice,
        Zf = [].splice,
        Ag = [].push,
        ma = Object.prototype.toString,
        sc = Object.getPrototypeOf,
        Aa = O("ng"),
        ea = v.angular || (v.angular = {}),
        Sb, nb = 0;
    Ca = v.document.documentMode;
    C.$inject = [];
    Xa.$inject = [];
    var K = Array.isArray,
        $d =
        /^\[object (?:Uint8|Uint8Clamped|Uint16|Uint32|Int8|Int16|Int32|Float32|Float64)Array\]$/,
        V = function(a) {
            return F(a) ? a.trim() : a
        },
        vd = function(a) {
            return a.replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(
                /\x08/g, "\\x08")
        },
        Ea = function() {
            if (!x(Ea.rules)) {
                var a = v.document.querySelector("[ng-csp]") || v.document.querySelector(
                    "[data-ng-csp]");
                if (a) {
                    var b = a.getAttribute("ng-csp") || a.getAttribute(
                        "data-ng-csp");
                    Ea.rules = {
                        noUnsafeEval: !b || -1 !== b.indexOf(
                            "no-unsafe-eval"),
                        noInlineStyle: !b || -1 !== b.indexOf(
                            "no-inline-style")
                    }
                } else {
                    a = Ea;
                    try {
                        new Function(""), b = !1
                    } catch (d) {
                        b = !0
                    }
                    a.rules = {
                        noUnsafeEval: b,
                        noInlineStyle: !1
                    }
                }
            }
            return Ea.rules
        },
        pb = function() {
            if (x(pb.name_)) return pb.name_;
            var a, b, d = Na.length,
                c, e;
            for (b = 0; b < d; ++b)
                if (c = Na[b], a = v.document.querySelector("[" + c.replace(
                        ":", "\\:") + "jq]")) {
                    e = a.getAttribute(c + "jq");
                    break
                }
            return pb.name_ = e
        },
        ce = /:/g,
        Na = ["ng-", "data-ng-", "ng:", "x-ng-"],
        he = /[A-Z]/g,
        Ac = !1,
        Ma = 3,
        le = {
            full: "1.5.5",
            major: 1,
            minor: 5,
            dot: 5,
            codeName: "material-conspiration"
        };
    U.expando = "ng339";
    var eb = U.cache = {},
        Nf = 1;
    U._data = function(a) {
        return this.cache[a[this.expando]] || {}
    };
    var If = /([\:\-\_]+(.))/g,
        Jf = /^moz([A-Z])/,
        wb = {
            mouseleave: "mouseout",
            mouseenter: "mouseover"
        },
        Ub = O("jqLite"),
        Mf = /^<([\w-]+)\s*\/?>(?:<\/\1>|)$/,
        Tb = /<|&#?\w+;/,
        Kf = /<([\w:-]+)/,
        Lf =
        /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:-]+)[^>]*)\/>/gi,
        ia = {
            option: [1, '<select multiple="multiple">', "</select>"],
            thead: [1, "<table>", "</table>"],
            col: [2, "<table><colgroup>", "</colgroup></table>"],
            tr: [2, "<table><tbody>", "</tbody></table>"],
            td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
            _default: [0, "", ""]
        };
    ia.optgroup = ia.option;
    ia.tbody = ia.tfoot = ia.colgroup = ia.caption = ia.thead;
    ia.th = ia.td;
    var Sf = v.Node.prototype.contains || function(a) {
            return !!(this.compareDocumentPosition(a) & 16)
        },
        Oa = U.prototype = {
            ready: function(a) {
                function b() {
                    d || (d = !0, a())
                }
                var d = !1;
                "complete" === v.document.readyState ? v.setTimeout(b) :
                    (this.on("DOMContentLoaded", b), U(v).on("load", b))
            },
            toString: function() {
                var a = [];
                q(this, function(b) {
                    a.push("" + b)
                });
                return "[" + a.join(", ") + "]"
            },
            eq: function(a) {
                return 0 <= a ? B(this[a]) : B(this[this.length + a])
            },
            length: 0,
            push: Ag,
            sort: [].sort,
            splice: [].splice
        },
        Cb = {};
    q("multiple selected checked disabled readOnly required open".split(" "),
        function(a) {
            Cb[P(a)] = a
        });
    var Sc = {};
    q("input select option textarea button form details".split(" "),
        function(a) {
            Sc[a] = !0
        });
    var ad = {
        ngMinlength: "minlength",
        ngMaxlength: "maxlength",
        ngMin: "min",
        ngMax: "max",
        ngPattern: "pattern"
    };
    q({
        data: Wb,
        removeData: db,
        hasData: function(a) {
            for (var b in eb[a.ng339]) return !0;
            return !1
        },
        cleanData: function(a) {
            for (var b = 0, d = a.length; b < d; b++) db(a[b])
        }
    }, function(a, b) {
        U[b] = a
    });
    q({
        data: Wb,
        inheritedData: Ab,
        scope: function(a) {
            return B.data(a, "$scope") || Ab(a.parentNode || a, [
                "$isolateScope", "$scope"
            ])
        },
        isolateScope: function(a) {
            return B.data(a, "$isolateScope") || B.data(a,
                "$isolateScopeNoTemplate")
        },
        controller: Pc,
        injector: function(a) {
            return Ab(a, "$injector")
        },
        removeAttr: function(a, b) {
            a.removeAttribute(b)
        },
        hasClass: xb,
        css: function(a, b, d) {
            b = cb(b);
            if (x(d)) a.style[b] = d;
            else return a.style[b]
        },
        attr: function(a, b, d) {
            var c = a.nodeType;
            if (c !== Ma && 2 !== c && 8 !== c)
                if (c = P(b), Cb[c])
                    if (x(d)) d ? (a[b] = !0, a.setAttribute(b,
                        c)) : (a[b] = !1, a.removeAttribute(
                        c));
                    else return a[b] || (a.attributes.getNamedItem(
                        b) || C).specified ? c : void 0;
            else if (x(d)) a.setAttribute(b, d);
            else if (a.getAttribute) return a = a.getAttribute(
                b, 2), null === a ? void 0 : a
        },
        prop: function(a, b, d) {
            if (x(d)) a[b] = d;
            else return a[b]
        },
        text: function() {
            function a(a, d) {
                if (y(d)) {
                    var c = a.nodeType;
                    return 1 === c || c === Ma ? a.textContent :
                        ""
                }
                a.textContent = d
            }
            a.$dv = "";
            return a
        }(),
        val: function(a, b) {
            if (y(b)) {
                if (a.multiple && "select" === va(a)) {
                    var d = [];
                    q(a.options, function(a) {
                        a.selected && d.push(a.value ||
                            a.text)
                    });
                    return 0 === d.length ? null : d
                }
                return a.value
            }
            a.value = b
        },
        html: function(a, b) {
            if (y(b)) return a.innerHTML;
            ub(a, !0);
            a.innerHTML = b
        },
        empty: Qc
    }, function(a, b) {
        U.prototype[b] = function(b, c) {
            var e, f, g = this.length;
            if (a !== Qc && y(2 == a.length && a !== xb && a !==
                    Pc ? b : c)) {
                if (G(b)) {
                    for (e = 0; e < g; e++)
                        if (a === Wb) a(this[e], b);
                        else
                            for (f in b) a(this[e], f, b[f]);
                    return this
                }
                e = a.$dv;
                g = y(e) ? Math.min(g, 1) : g;
                for (f = 0; f < g; f++) {
                    var h = a(this[f], b, c);
                    e = e ? e + h : h
                }
                return e
            }
            for (e = 0; e < g; e++) a(this[e], b, c);
            return this
        }
    });
    q({
        removeData: db,
        on: function(a, b, d, c) {
            if (x(c)) throw Ub("onargs");
            if (Kc(a)) {
                c = vb(a, !0);
                var e = c.events,
                    f = c.handle;
                f || (f = c.handle = Pf(a, e));
                c = 0 <= b.indexOf(" ") ? b.split(" ") : [b];
                for (var g = c.length, h = function(b, c, g) {
                        var h = e[b];
                        h || (h = e[b] = [], h.specialHandlerWrapper =
                            c, "$destroy" === b || g ||
                            a.addEventListener(b, f, !1)
                        );
                        h.push(d)
                    }; g--;) b = c[g], wb[b] ? (h(wb[b], Rf), h(
                    b, void 0, !0)) : h(b)
            }
        },
        off: Oc,
        one: function(a, b, d) {
            a = B(a);
            a.on(b, function e() {
                a.off(b, d);
                a.off(b, e)
            });
            a.on(b, d)
        },
        replaceWith: function(a, b) {
            var d, c = a.parentNode;
            ub(a);
            q(new U(b), function(b) {
                d ? c.insertBefore(b, d.nextSibling) :
                    c.replaceChild(b, a);
                d = b
            })
        },
        children: function(a) {
            var b = [];
            q(a.childNodes, function(a) {
                1 === a.nodeType && b.push(a)
            });
            return b
        },
        contents: function(a) {
            return a.contentDocument || a.childNodes || []
        },
        append: function(a, b) {
            var d = a.nodeType;
            if (1 === d || 11 === d) {
                b = new U(b);
                for (var d = 0, c = b.length; d < c; d++) a.appendChild(
                    b[d])
            }
        },
        prepend: function(a, b) {
            if (1 === a.nodeType) {
                var d = a.firstChild;
                q(new U(b), function(b) {
                    a.insertBefore(b, d)
                })
            }
        },
        wrap: function(a, b) {
            Mc(a, B(b).eq(0).clone()[0])
        },
        remove: Bb,
        detach: function(a) {
            Bb(a, !0)
        },
        after: function(a, b) {
            var d = a,
                c = a.parentNode;
            b = new U(b);
            for (var e = 0, f = b.length; e < f; e++) {
                var g = b[e];
                c.insertBefore(g, d.nextSibling);
                d = g
            }
        },
        addClass: zb,
        removeClass: yb,
        toggleClass: function(a, b, d) {
            b && q(b.split(" "), function(b) {
                var e = d;
                y(e) && (e = !xb(a, b));
                (e ? zb : yb)(a, b)
            })
        },
        parent: function(a) {
            return (a = a.parentNode) && 11 !== a.nodeType ? a :
                null
        },
        next: function(a) {
            return a.nextElementSibling
        },
        find: function(a, b) {
            return a.getElementsByTagName ? a.getElementsByTagName(
                b) : []
        },
        clone: Vb,
        triggerHandler: function(a, b, d) {
            var c, e, f = b.type || b,
                g = vb(a);
            if (g = (g = g && g.events) && g[f]) c = {
                preventDefault: function() {
                    this.defaultPrevented = !0
                },
                isDefaultPrevented: function() {
                    return !0 === this.defaultPrevented
                },
                stopImmediatePropagation: function() {
                    this.immediatePropagationStopped = !
                        0
                },
                isImmediatePropagationStopped: function() {
                    return !0 === this.immediatePropagationStopped
                },
                stopPropagation: C,
                type: f,
                target: a
            }, b.type && (c = R(c, b)), b = ha(g), e = d ? [
                c
            ].concat(d) : [c], q(b, function(b) {
                c.isImmediatePropagationStopped() || b.apply(
                    a, e)
            })
        }
    }, function(a, b) {
        U.prototype[b] = function(b, c, e) {
            for (var f, g = 0, h = this.length; g < h; g++) y(f) ?
                (f = a(this[g], b, c, e), x(f) && (f = B(f))) :
                Nc(f, a(this[g], b, c, e));
            return x(f) ? f : this
        };
        U.prototype.bind = U.prototype.on;
        U.prototype.unbind = U.prototype.off
    });
    Ra.prototype = {
        put: function(a, b) {
            this[Fa(a, this.nextUid)] = b
        },
        get: function(a) {
            return this[Fa(a, this.nextUid)]
        },
        remove: function(a) {
            var b = this[a = Fa(a, this.nextUid)];
            delete this[a];
            return b
        }
    };
    var Gf = [function() {
            this.$get = [function() {
                return Ra
            }]
        }],
        Uf = /^([^\(]+?)=>/,
        Vf = /^[^\(]*\(\s*([^\)]*)\)/m,
        Bg = /,/,
        Cg = /^\s*(_?)(\S+?)\1\s*$/,
        Tf = /((\/\/.*$)|(\/\*[\s\S]*?\*\/))/mg,
        Ga = O("$injector");
    bb.$$annotate = function(a, b, d) {
        var c;
        if ("function" === typeof a) {
            if (!(c = a.$inject)) {
                c = [];
                if (a.length) {
                    if (b) throw F(d) && d || (d = a.name || Wf(a)), Ga(
                        "strictdi", d);
                    b = Tc(a);
                    q(b[1].split(Bg), function(a) {
                        a.replace(Cg, function(a, b, d) {
                            c.push(d)
                        })
                    })
                }
                a.$inject = c
            }
        } else K(a) ? (b = a.length - 1, Pa(a[b], "fn"), c = a.slice(0,
            b)) : Pa(a, "fn", !0);
        return c
    };
    var Qd = O("$animate"),
        Ze = function() {
            this.$get = C
        },
        $e = function() {
            var a = new Ra,
                b = [];
            this.$get = ["$$AnimateRunner", "$rootScope", function(d, c) {
                function e(a, b, c) {
                    var d = !1;
                    b && (b = F(b) ? b.split(" ") : K(b) ? b : [],
                        q(b, function(b) {
                            b && (d = !0, a[b] = c)
                        }));
                    return d
                }

                function f() {
                    q(b, function(b) {
                        var c = a.get(b);
                        if (c) {
                            var d = Xf(b.attr("class")),
                                e = "",
                                f = "";
                            q(c, function(a, b) {
                                a !== !!d[b] && (a ?
                                    e += (e.length ?
                                        " " :
                                        "") + b :
                                    f += (f.length ?
                                        " " :
                                        "") + b
                                )
                            });
                            q(b, function(a) {
                                e && zb(a, e);
                                f && yb(a, f)
                            });
                            a.remove(b)
                        }
                    });
                    b.length = 0
                }
                return {
                    enabled: C,
                    on: C,
                    off: C,
                    pin: C,
                    push: function(g, h, k, l) {
                        l && l();
                        k = k || {};
                        k.from && g.css(k.from);
                        k.to && g.css(k.to);
                        if (k.addClass || k.removeClass)
                            if (h = k.addClass, l = k.removeClass,
                                k = a.get(g) || {}, h = e(k, h, !
                                    0), l = e(k, l, !1), h || l
                            ) a.put(g, k), b.push(g), 1 === b.length &&
                                c.$$postDigest(f);
                        g = new d;
                        g.complete();
                        return g
                    }
                }
            }]
        },
        Xe = ["$provide", function(a) {
            var b = this;
            this.$$registeredAnimations = Object.create(null);
            this.register = function(d, c) {
                if (d && "." !== d.charAt(0)) throw Qd("notcsel", d);
                var e = d + "-animation";
                b.$$registeredAnimations[d.substr(1)] = e;
                a.factory(e, c)
            };
            this.classNameFilter = function(a) {
                if (1 === arguments.length && (this.$$classNameFilter =
                        a instanceof RegExp ? a : null) &&
                    /(\s+|\/)ng-animate(\s+|\/)/.test(this.$$classNameFilter
                        .toString())) throw Qd("nongcls",
                    "ng-animate");
                return this.$$classNameFilter
            };
            this.$get = ["$$animateQueue", function(a) {
                function b(a, c, d) {
                    if (d) {
                        var h;
                        a: {
                                for (h = 0; h < d.length; h++) {
                                    var k = d[h];
                                    if (1 === k.nodeType) {
                                        h = k;
                                        break a
                                    }
                                }
                                h = void 0
                            }!h || h.parentNode || h.previousElementSibling ||
                            (d = null)
                    }
                    d ? d.after(a) : c.prepend(a)
                }
                return {
                    on: a.on,
                    off: a.off,
                    pin: a.pin,
                    enabled: a.enabled,
                    cancel: function(a) {
                        a.end && a.end()
                    },
                    enter: function(e, f, g, h) {
                        f = f && B(f);
                        g = g && B(g);
                        f = f || g.parent();
                        b(e, f, g);
                        return a.push(e, "enter", Ha(h))
                    },
                    move: function(e, f, g, h) {
                        f = f && B(f);
                        g = g && B(g);
                        f = f || g.parent();
                        b(e, f, g);
                        return a.push(e, "move", Ha(h))
                    },
                    leave: function(b, c) {
                        return a.push(b, "leave", Ha(c),
                            function() {
                                b.remove()
                            })
                    },
                    addClass: function(b, c, g) {
                        g = Ha(g);
                        g.addClass = fb(g.addclass, c);
                        return a.push(b, "addClass", g)
                    },
                    removeClass: function(b, c, g) {
                        g = Ha(g);
                        g.removeClass = fb(g.removeClass, c);
                        return a.push(b, "removeClass", g)
                    },
                    setClass: function(b, c, g, h) {
                        h = Ha(h);
                        h.addClass = fb(h.addClass, c);
                        h.removeClass = fb(h.removeClass, g);
                        return a.push(b, "setClass", h)
                    },
                    animate: function(b, c, g, h, k) {
                        k = Ha(k);
                        k.from = k.from ? R(k.from, c) : c;
                        k.to = k.to ? R(k.to, g) : g;
                        k.tempClasses = fb(k.tempClasses, h ||
                            "ng-inline-animate");
                        return a.push(b, "animate", k)
                    }
                }
            }]
        }],
        bf = function() {
            this.$get = ["$$rAF", function(a) {
                function b(b) {
                    d.push(b);
                    1 < d.length || a(function() {
                        for (var a = 0; a < d.length; a++) d[
                            a]();
                        d = []
                    })
                }
                var d = [];
                return function() {
                    var a = !1;
                    b(function() {
                        a = !0
                    });
                    return function(d) {
                        a ? d() : b(d)
                    }
                }
            }]
        },
        af = function() {
            this.$get = ["$q", "$sniffer", "$$animateAsyncRun", "$document",
                "$timeout",
                function(a, b, d, c, e) {
                    function f(a) {
                        this.setHost(a);
                        var b = d();
                        this._doneCallbacks = [];
                        this._tick = function(a) {
                            var d = c[0];
                            d && d.hidden ? e(a, 0, !1) : b(a)
                        };
                        this._state = 0
                    }
                    f.chain = function(a, b) {
                        function c() {
                            if (d === a.length) b(!0);
                            else a[d](function(a) {
                                !1 === a ? b(!1) : (d++, c())
                            })
                        }
                        var d = 0;
                        c()
                    };
                    f.all = function(a, b) {
                        function c(f) {
                            e = e && f;
                            ++d === a.length && b(e)
                        }
                        var d = 0,
                            e = !0;
                        q(a, function(a) {
                            a.done(c)
                        })
                    };
                    f.prototype = {
                        setHost: function(a) {
                            this.host = a || {}
                        },
                        done: function(a) {
                            2 === this._state ? a() : this._doneCallbacks
                                .push(a)
                        },
                        progress: C,
                        getPromise: function() {
                            if (!this.promise) {
                                var b = this;
                                this.promise = a(function(a, c) {
                                    b.done(function(b) {
                                        !1 ===
                                            b ?
                                            c() :
                                            a()
                                    })
                                })
                            }
                            return this.promise
                        },
                        then: function(a, b) {
                            return this.getPromise().then(a, b)
                        },
                        "catch": function(a) {
                            return this.getPromise()["catch"](a)
                        },
                        "finally": function(a) {
                            return this.getPromise()["finally"]
                                (a)
                        },
                        pause: function() {
                            this.host.pause && this.host.pause()
                        },
                        resume: function() {
                            this.host.resume && this.host.resume()
                        },
                        end: function() {
                            this.host.end && this.host.end();
                            this._resolve(!0)
                        },
                        cancel: function() {
                            this.host.cancel && this.host.cancel();
                            this._resolve(!1)
                        },
                        complete: function(a) {
                            var b = this;
                            0 === b._state && (b._state = 1, b._tick(
                                function() {
                                    b._resolve(a)
                                }))
                        },
                        _resolve: function(a) {
                            2 !== this._state && (q(this._doneCallbacks,
                                    function(b) {
                                        b(a)
                                    }), this._doneCallbacks
                                .length = 0, this._state =
                                2)
                        }
                    };
                    return f
                }
            ]
        },
        Ye = function() {
            this.$get = ["$$rAF", "$q", "$$AnimateRunner", function(a, b, d) {
                return function(b, e) {
                    function f() {
                        a(function() {
                            g.addClass && (b.addClass(g
                                    .addClass), g.addClass =
                                null);
                            g.removeClass && (b.removeClass(
                                    g.removeClass),
                                g.removeClass =
                                null);
                            g.to && (b.css(g.to), g.to =
                                null);
                            h || k.complete();
                            h = !0
                        });
                        return k
                    }
                    var g = e || {};
                    g.$$prepared || (g = qa(g));
                    g.cleanupStyles && (g.from = g.to = null);
                    g.from && (b.css(g.from), g.from = null);
                    var h, k = new d;
                    return {
                        start: f,
                        end: f
                    }
                }
            }]
        },
        ga = O("$compile"),
        Zb = new function() {};
    Cc.$inject = ["$provide", "$$sanitizeUriProvider"];
    Db.prototype.isFirstChange = function() {
        return this.previousValue === Zb
    };
    var Vc = /^((?:x|data)[\:\-_])/i,
        $f = O("$controller"),
        bd = /^(\S+)(\s+as\s+([\w$]+))?$/,
        hf = function() {
            this.$get = ["$document", function(a) {
                return function(b) {
                    b ? !b.nodeType && b instanceof B && (b = b[
                        0]) : b = a[0].body;
                    return b.offsetWidth + 1
                }
            }]
        },
        cd = "application/json",
        bc = {
            "Content-Type": cd + ";charset=utf-8"
        },
        bg = /^\[|^\{(?!\{)/,
        cg = {
            "[": /]$/,
            "{": /}$/
        },
        ag = /^\)\]\}',?\n/,
        Dg = O("$http"),
        gd = function(a) {
            return function() {
                throw Dg("legacy", a);
            }
        },
        Ja = ea.$interpolateMinErr = O("$interpolate");
    Ja.throwNoconcat = function(a) {
        throw Ja("noconcat", a);
    };
    Ja.interr = function(a, b) {
        return Ja("interr", a, b.toString())
    };
    var Eg = /^([^\?#]*)(\?([^#]*))?(#(.*))?$/,
        eg = {
            http: 80,
            https: 443,
            ftp: 21
        },
        Eb = O("$location"),
        Fg = {
            $$html5: !1,
            $$replace: !1,
            absUrl: Fb("$$absUrl"),
            url: function(a) {
                if (y(a)) return this.$$url;
                var b = Eg.exec(a);
                (b[1] || "" === a) && this.path(decodeURIComponent(b[1]));
                (b[2] || b[1] || "" === a) && this.search(b[3] || "");
                this.hash(b[5] || "");
                return this
            },
            protocol: Fb("$$protocol"),
            host: Fb("$$host"),
            port: Fb("$$port"),
            path: ld("$$path", function(a) {
                a = null !== a ? a.toString() : "";
                return "/" == a.charAt(0) ? a : "/" + a
            }),
            search: function(a, b) {
                switch (arguments.length) {
                    case 0:
                        return this.$$search;
                    case 1:
                        if (F(a) || Q(a)) a = a.toString(), this.$$search =
                            xc(a);
                        else if (G(a)) a = qa(a, {}), q(a, function(b,
                            c) {
                            null == b && delete a[c]
                        }), this.$$search = a;
                        else throw Eb("isrcharg");
                        break;
                    default:
                        y(b) || null === b ? delete this.$$search[a] :
                            this.$$search[a] = b
                }
                this.$$compose();
                return this
            },
            hash: ld("$$hash", function(a) {
                return null !== a ? a.toString() : ""
            }),
            replace: function() {
                this.$$replace = !0;
                return this
            }
        };
    q([kd, ec, dc], function(a) {
        a.prototype = Object.create(Fg);
        a.prototype.state = function(b) {
            if (!arguments.length) return this.$$state;
            if (a !== dc || !this.$$html5) throw Eb("nostate");
            this.$$state = y(b) ? null : b;
            return this
        }
    });
    var ca = O("$parse"),
        gg = Function.prototype.call,
        hg = Function.prototype.apply,
        ig = Function.prototype.bind,
        Mb = T();
    q("+ - * / % === !== == != < > <= >= && || ! = |".split(" "), function(
        a) {
        Mb[a] = !0
    });
    var Gg = {
            n: "\n",
            f: "\f",
            r: "\r",
            t: "\t",
            v: "\v",
            "'": "'",
            '"': '"'
        },
        gc = function(a) {
            this.options = a
        };
    gc.prototype = {
        constructor: gc,
        lex: function(a) {
            this.text = a;
            this.index = 0;
            for (this.tokens = []; this.index < this.text.length;)
                if (a = this.text.charAt(this.index), '"' === a ||
                    "'" === a) this.readString(a);
                else if (this.isNumber(a) || "." === a && this.isNumber(
                    this.peek())) this.readNumber();
            else if (this.isIdentifierStart(this.peekMultichar()))
                this.readIdent();
            else if (this.is(a, "(){}[].,;:?")) this.tokens.push({
                index: this.index,
                text: a
            }), this.index++;
            else if (this.isWhitespace(a)) this.index++;
            else {
                var b = a + this.peek(),
                    d = b + this.peek(2),
                    c = Mb[b],
                    e = Mb[d];
                Mb[a] || c || e ? (a = e ? d : c ? b : a, this.tokens
                    .push({
                        index: this.index,
                        text: a,
                        operator: !0
                    }), this.index += a.length) : this.throwError(
                    "Unexpected next character ", this.index,
                    this.index + 1)
            }
            return this.tokens
        },
        is: function(a, b) {
            return -1 !== b.indexOf(a)
        },
        peek: function(a) {
            a = a || 1;
            return this.index + a < this.text.length ? this.text.charAt(
                this.index + a) : !1
        },
        isNumber: function(a) {
            return "0" <= a && "9" >= a && "string" === typeof a
        },
        isWhitespace: function(a) {
            return " " === a || "\r" === a || "\t" === a || "\n" ===
                a || "\v" === a || "\u00a0" === a
        },
        isIdentifierStart: function(a) {
            return this.options.isIdentifierStart ? this.options.isIdentifierStart(
                a, this.codePointAt(a)) : this.isValidIdentifierStart(
                a)
        },
        isValidIdentifierStart: function(a) {
            return "a" <= a && "z" >= a || "A" <= a && "Z" >= a ||
                "_" === a || "$" === a
        },
        isIdentifierContinue: function(a) {
            return this.options.isIdentifierContinue ? this.options
                .isIdentifierContinue(a, this.codePointAt(a)) :
                this.isValidIdentifierContinue(a)
        },
        isValidIdentifierContinue: function(a, b) {
            return this.isValidIdentifierStart(a, b) || this.isNumber(
                a)
        },
        codePointAt: function(a) {
            return 1 === a.length ? a.charCodeAt(0) : (a.charCodeAt(
                0) << 10) + a.charCodeAt(1) - 56613888
        },
        peekMultichar: function() {
            var a = this.text.charAt(this.index),
                b = this.peek();
            if (!b) return a;
            var d = a.charCodeAt(0),
                c = b.charCodeAt(0);
            return 55296 <= d && 56319 >= d && 56320 <= c && 57343 >=
                c ? a + b : a
        },
        isExpOperator: function(a) {
            return "-" === a || "+" === a || this.isNumber(a)
        },
        throwError: function(a, b, d) {
            d = d || this.index;
            b = x(b) ? "s " + b + "-" + this.index + " [" + this.text
                .substring(b, d) + "]" : " " + d;
            throw ca("lexerr", a, b, this.text);
        },
        readNumber: function() {
            for (var a = "", b = this.index; this.index < this.text
                .length;) {
                var d = P(this.text.charAt(this.index));
                if ("." == d || this.isNumber(d)) a += d;
                else {
                    var c = this.peek();
                    if ("e" == d && this.isExpOperator(c)) a += d;
                    else if (this.isExpOperator(d) && c && this.isNumber(
                            c) && "e" == a.charAt(a.length - 1)) a +=
                        d;
                    else if (!this.isExpOperator(d) || c && this.isNumber(
                            c) || "e" != a.charAt(a.length - 1))
                        break;
                    else this.throwError("Invalid exponent")
                }
                this.index++
            }
            this.tokens.push({
                index: b,
                text: a,
                constant: !0,
                value: Number(a)
            })
        },
        readIdent: function() {
            var a = this.index;
            for (this.index += this.peekMultichar().length; this.index <
                this.text.length;) {
                var b = this.peekMultichar();
                if (!this.isIdentifierContinue(b)) break;
                this.index += b.length
            }
            this.tokens.push({
                index: a,
                text: this.text.slice(a, this.index),
                identifier: !0
            })
        },
        readString: function(a) {
            var b = this.index;
            this.index++;
            for (var d = "", c = a, e = !1; this.index < this.text.length;) {
                var f = this.text.charAt(this.index),
                    c = c + f;
                if (e) "u" === f ? (e = this.text.substring(this.index +
                    1, this.index + 5), e.match(
                    /[\da-f]{4}/i) || this.throwError(
                    "Invalid unicode escape [\\u" + e + "]"
                ), this.index += 4, d += String.fromCharCode(
                    parseInt(e, 16))) : d += Gg[f] || f, e = !1;
                else if ("\\" === f) e = !0;
                else {
                    if (f === a) {
                        this.index++;
                        this.tokens.push({
                            index: b,
                            text: c,
                            constant: !0,
                            value: d
                        });
                        return
                    }
                    d += f
                }
                this.index++
            }
            this.throwError("Unterminated quote", b)
        }
    };
    var s = function(a, b) {
        this.lexer = a;
        this.options = b
    };
    s.Program = "Program";
    s.ExpressionStatement = "ExpressionStatement";
    s.AssignmentExpression = "AssignmentExpression";
    s.ConditionalExpression = "ConditionalExpression";
    s.LogicalExpression = "LogicalExpression";
    s.BinaryExpression = "BinaryExpression";
    s.UnaryExpression = "UnaryExpression";
    s.CallExpression = "CallExpression";
    s.MemberExpression = "MemberExpression";
    s.Identifier = "Identifier";
    s.Literal = "Literal";
    s.ArrayExpression = "ArrayExpression";
    s.Property = "Property";
    s.ObjectExpression = "ObjectExpression";
    s.ThisExpression = "ThisExpression";
    s.LocalsExpression = "LocalsExpression";
    s.NGValueParameter = "NGValueParameter";
    s.prototype = {
        ast: function(a) {
            this.text = a;
            this.tokens = this.lexer.lex(a);
            a = this.program();
            0 !== this.tokens.length && this.throwError(
                "is an unexpected token", this.tokens[0]);
            return a
        },
        program: function() {
            for (var a = [];;)
                if (0 < this.tokens.length && !this.peek("}", ")",
                        ";", "]") && a.push(this.expressionStatement()), !
                    this.expect(";")) return {
                    type: s.Program,
                    body: a
                }
        },
        expressionStatement: function() {
            return {
                type: s.ExpressionStatement,
                expression: this.filterChain()
            }
        },
        filterChain: function() {
            for (var a = this.expression(); this.expect("|");) a =
                this.filter(a);
            return a
        },
        expression: function() {
            return this.assignment()
        },
        assignment: function() {
            var a = this.ternary();
            this.expect("=") && (a = {
                type: s.AssignmentExpression,
                left: a,
                right: this.assignment(),
                operator: "="
            });
            return a
        },
        ternary: function() {
            var a = this.logicalOR(),
                b, d;
            return this.expect("?") && (b = this.expression(), this
                .consume(":")) ? (d = this.expression(), {
                type: s.ConditionalExpression,
                test: a,
                alternate: b,
                consequent: d
            }) : a
        },
        logicalOR: function() {
            for (var a = this.logicalAND(); this.expect("||");) a = {
                type: s.LogicalExpression,
                operator: "||",
                left: a,
                right: this.logicalAND()
            };
            return a
        },
        logicalAND: function() {
            for (var a = this.equality(); this.expect("&&");) a = {
                type: s.LogicalExpression,
                operator: "&&",
                left: a,
                right: this.equality()
            };
            return a
        },
        equality: function() {
            for (var a = this.relational(), b; b = this.expect("==",
                    "!=", "===", "!==");) a = {
                type: s.BinaryExpression,
                operator: b.text,
                left: a,
                right: this.relational()
            };
            return a
        },
        relational: function() {
            for (var a = this.additive(), b; b = this.expect("<",
                    ">", "<=", ">=");) a = {
                type: s.BinaryExpression,
                operator: b.text,
                left: a,
                right: this.additive()
            };
            return a
        },
        additive: function() {
            for (var a = this.multiplicative(), b; b = this.expect(
                    "+", "-");) a = {
                type: s.BinaryExpression,
                operator: b.text,
                left: a,
                right: this.multiplicative()
            };
            return a
        },
        multiplicative: function() {
            for (var a = this.unary(), b; b = this.expect("*", "/",
                    "%");) a = {
                type: s.BinaryExpression,
                operator: b.text,
                left: a,
                right: this.unary()
            };
            return a
        },
        unary: function() {
            var a;
            return (a = this.expect("+", "-", "!")) ? {
                type: s.UnaryExpression,
                operator: a.text,
                prefix: !0,
                argument: this.unary()
            } : this.primary()
        },
        primary: function() {
            var a;
            this.expect("(") ? (a = this.filterChain(), this.consume(
                    ")")) : this.expect("[") ? a = this.arrayDeclaration() :
                this.expect("{") ? a = this.object() : this.selfReferential
                .hasOwnProperty(this.peek().text) ? a = qa(this.selfReferential[
                    this.consume().text]) : this.options.literals.hasOwnProperty(
                    this.peek().text) ? a = {
                    type: s.Literal,
                    value: this.options.literals[this.consume().text]
                } : this.peek().identifier ? a = this.identifier() :
                this.peek().constant ? a = this.constant() : this.throwError(
                    "not a primary expression", this.peek());
            for (var b; b = this.expect("(", "[", ".");) "(" === b.text ?
                (a = {
                    type: s.CallExpression,
                    callee: a,
                    arguments: this.parseArguments()
                }, this.consume(")")) : "[" === b.text ? (a = {
                    type: s.MemberExpression,
                    object: a,
                    property: this.expression(),
                    computed: !0
                }, this.consume("]")) : "." === b.text ? a = {
                    type: s.MemberExpression,
                    object: a,
                    property: this.identifier(),
                    computed: !1
                } : this.throwError("IMPOSSIBLE");
            return a
        },
        filter: function(a) {
            a = [a];
            for (var b = {
                    type: s.CallExpression,
                    callee: this.identifier(),
                    arguments: a,
                    filter: !0
                }; this.expect(":");) a.push(this.expression());
            return b
        },
        parseArguments: function() {
            var a = [];
            if (")" !== this.peekToken().text) {
                do a.push(this.expression()); while (this.expect(
                        ","))
            }
            return a
        },
        identifier: function() {
            var a = this.consume();
            a.identifier || this.throwError(
                "is not a valid identifier", a);
            return {
                type: s.Identifier,
                name: a.text
            }
        },
        constant: function() {
            return {
                type: s.Literal,
                value: this.consume().value
            }
        },
        arrayDeclaration: function() {
            var a = [];
            if ("]" !== this.peekToken().text) {
                do {
                    if (this.peek("]")) break;
                    a.push(this.expression())
                } while (this.expect(","))
            }
            this.consume("]");
            return {
                type: s.ArrayExpression,
                elements: a
            }
        },
        object: function() {
            var a = [],
                b;
            if ("}" !== this.peekToken().text) {
                do {
                    if (this.peek("}")) break;
                    b = {
                        type: s.Property,
                        kind: "init"
                    };
                    this.peek().constant ? b.key = this.constant() :
                        this.peek().identifier ? b.key = this.identifier() :
                        this.throwError("invalid key", this.peek());
                    this.consume(":");
                    b.value = this.expression();
                    a.push(b)
                } while (this.expect(","))
            }
            this.consume("}");
            return {
                type: s.ObjectExpression,
                properties: a
            }
        },
        throwError: function(a, b) {
            throw ca("syntax", b.text, a, b.index + 1, this.text,
                this.text.substring(b.index));
        },
        consume: function(a) {
            if (0 === this.tokens.length) throw ca("ueoe", this.text);
            var b = this.expect(a);
            b || this.throwError("is unexpected, expecting [" + a +
                "]", this.peek());
            return b
        },
        peekToken: function() {
            if (0 === this.tokens.length) throw ca("ueoe", this.text);
            return this.tokens[0]
        },
        peek: function(a, b, d, c) {
            return this.peekAhead(0, a, b, d, c)
        },
        peekAhead: function(a, b, d, c, e) {
            if (this.tokens.length > a) {
                a = this.tokens[a];
                var f = a.text;
                if (f === b || f === d || f === c || f === e || !(b ||
                        d || c || e)) return a
            }
            return !1
        },
        expect: function(a, b, d, c) {
            return (a = this.peek(a, b, d, c)) ? (this.tokens.shift(),
                a) : !1
        },
        selfReferential: {
            "this": {
                type: s.ThisExpression
            },
            $locals: {
                type: s.LocalsExpression
            }
        }
    };
    sd.prototype = {
        compile: function(a, b) {
            var d = this,
                c = this.astBuilder.ast(a);
            this.state = {
                nextId: 0,
                filters: {},
                expensiveChecks: b,
                fn: {
                    vars: [],
                    body: [],
                    own: {}
                },
                assign: {
                    vars: [],
                    body: [],
                    own: {}
                },
                inputs: []
            };
            aa(c, d.$filter);
            var e = "",
                f;
            this.stage = "assign";
            if (f = qd(c)) this.state.computing = "assign", e =
                this.nextId(), this.recurse(f, e), this.return_(e),
                e = "fn.assign=" + this.generateFunction("assign",
                    "s,v,l");
            f = od(c.body);
            d.stage = "inputs";
            q(f, function(a, b) {
                var c = "fn" + b;
                d.state[c] = {
                    vars: [],
                    body: [],
                    own: {}
                };
                d.state.computing = c;
                var e = d.nextId();
                d.recurse(a, e);
                d.return_(e);
                d.state.inputs.push(c);
                a.watchId = b
            });
            this.state.computing = "fn";
            this.stage = "main";
            this.recurse(c);
            e = '"' + this.USE + " " + this.STRICT + '";\n' + this.filterPrefix() +
                "var fn=" + this.generateFunction("fn", "s,l,a,i") +
                e + this.watchFns() + "return fn;";
            e = (new Function("$filter", "ensureSafeMemberName",
                "ensureSafeObject", "ensureSafeFunction",
                "getStringValue", "ensureSafeAssignContext",
                "ifDefined", "plus", "text", e))(this.$filter,
                Ta, sa, md, fg, Gb, jg, nd, a);
            this.state = this.stage = void 0;
            e.literal = rd(c);
            e.constant = c.constant;
            return e
        },
        USE: "use",
        STRICT: "strict",
        watchFns: function() {
            var a = [],
                b = this.state.inputs,
                d = this;
            q(b, function(b) {
                a.push("var " + b + "=" + d.generateFunction(
                    b, "s"))
            });
            b.length && a.push("fn.inputs=[" + b.join(",") + "];");
            return a.join("")
        },
        generateFunction: function(a, b) {
            return "function(" + b + "){" + this.varsPrefix(a) +
                this.body(a) + "};"
        },
        filterPrefix: function() {
            var a = [],
                b = this;
            q(this.state.filters, function(d, c) {
                a.push(d + "=$filter(" + b.escape(c) + ")")
            });
            return a.length ? "var " + a.join(",") + ";" : ""
        },
        varsPrefix: function(a) {
            return this.state[a].vars.length ? "var " + this.state[
                a].vars.join(",") + ";" : ""
        },
        body: function(a) {
            return this.state[a].body.join("")
        },
        recurse: function(a, b, d, c, e, f) {
            var g, h, k = this,
                l, n;
            c = c || C;
            if (!f && x(a.watchId)) b = b || this.nextId(), this.if_(
                "i", this.lazyAssign(b, this.computedMember("i",
                    a.watchId)), this.lazyRecurse(a, b, d, c, e, !
                    0));
            else switch (a.type) {
                case s.Program:
                    q(a.body, function(b, c) {
                        k.recurse(b.expression, void 0,
                            void 0,
                            function(a) {
                                h = a
                            });
                        c !== a.body.length - 1 ? k.current()
                            .body.push(h, ";") : k.return_(
                                h)
                    });
                    break;
                case s.Literal:
                    n = this.escape(a.value);
                    this.assign(b, n);
                    c(n);
                    break;
                case s.UnaryExpression:
                    this.recurse(a.argument, void 0, void 0,
                        function(a) {
                            h = a
                        });
                    n = a.operator + "(" + this.ifDefined(h, 0) +
                        ")";
                    this.assign(b, n);
                    c(n);
                    break;
                case s.BinaryExpression:
                    this.recurse(a.left, void 0, void 0,
                        function(a) {
                            g = a
                        });
                    this.recurse(a.right, void 0, void 0,
                        function(a) {
                            h = a
                        });
                    n = "+" === a.operator ? this.plus(g, h) :
                        "-" === a.operator ? this.ifDefined(g,
                            0) + a.operator + this.ifDefined(h,
                            0) : "(" + g + ")" + a.operator +
                        "(" + h + ")";
                    this.assign(b, n);
                    c(n);
                    break;
                case s.LogicalExpression:
                    b = b || this.nextId();
                    k.recurse(a.left, b);
                    k.if_("&&" === a.operator ? b : k.not(b), k
                        .lazyRecurse(a.right, b));
                    c(b);
                    break;
                case s.ConditionalExpression:
                    b = b || this.nextId();
                    k.recurse(a.test, b);
                    k.if_(b, k.lazyRecurse(a.alternate, b), k.lazyRecurse(
                        a.consequent, b));
                    c(b);
                    break;
                case s.Identifier:
                    b = b || this.nextId();
                    d && (d.context = "inputs" === k.stage ?
                        "s" : this.assign(this.nextId(),
                            this.getHasOwnProperty("l", a.name) +
                            "?l:s"), d.computed = !1, d.name =
                        a.name);
                    Ta(a.name);
                    k.if_("inputs" === k.stage || k.not(k.getHasOwnProperty(
                        "l", a.name)), function() {
                        k.if_("inputs" === k.stage ||
                            "s",
                            function() {
                                e && 1 !== e && k.if_(
                                    k.not(k.nonComputedMember(
                                        "s",
                                        a.name
                                    )), k.lazyAssign(
                                        k.nonComputedMember(
                                            "s",
                                            a.name
                                        ), "{}"
                                    ));
                                k.assign(b, k.nonComputedMember(
                                    "s", a.name
                                ))
                            })
                    }, b && k.lazyAssign(b, k.nonComputedMember(
                        "l", a.name)));
                    (k.state.expensiveChecks || Hb(a.name)) &&
                    k.addEnsureSafeObject(b);
                    c(b);
                    break;
                case s.MemberExpression:
                    g = d && (d.context = this.nextId()) ||
                        this.nextId();
                    b = b || this.nextId();
                    k.recurse(a.object, g, void 0, function() {
                        k.if_(k.notNull(g), function() {
                            e && 1 !== e && k.addEnsureSafeAssignContext(
                                g);
                            if (a.computed) h =
                                k.nextId(), k.recurse(
                                    a.property,
                                    h), k.getStringValue(
                                    h), k.addEnsureSafeMemberName(
                                    h), e && 1 !==
                                e && k.if_(k.not(
                                        k.computedMember(
                                            g,
                                            h)),
                                    k.lazyAssign(
                                        k.computedMember(
                                            g,
                                            h),
                                        "{}")),
                                n = k.ensureSafeObject(
                                    k.computedMember(
                                        g, h)),
                                k.assign(b, n),
                                d && (d.computed = !
                                    0, d.name =
                                    h);
                            else {
                                Ta(a.property.name);
                                e && 1 !== e &&
                                    k.if_(k.not(
                                            k.nonComputedMember(
                                                g,
                                                a
                                                .property
                                                .name
                                            )),
                                        k.lazyAssign(
                                            k.nonComputedMember(
                                                g,
                                                a
                                                .property
                                                .name
                                            ),
                                            "{}"
                                        ));
                                n = k.nonComputedMember(
                                    g, a.property
                                    .name);
                                if (k.state.expensiveChecks ||
                                    Hb(a.property
                                        .name))
                                    n = k.ensureSafeObject(
                                        n);
                                k.assign(b, n);
                                d && (d.computed = !
                                    1, d.name =
                                    a.property
                                    .name)
                            }
                        }, function() {
                            k.assign(b,
                                "undefined"
                            )
                        });
                        c(b)
                    }, !!e);
                    break;
                case s.CallExpression:
                    b = b || this.nextId();
                    a.filter ? (h = k.filter(a.callee.name), l = [],
                        q(a.arguments, function(a) {
                            var b = k.nextId();
                            k.recurse(a, b);
                            l.push(b)
                        }), n = h + "(" + l.join(",") + ")",
                        k.assign(b, n), c(b)) : (h = k.nextId(),
                        g = {}, l = [], k.recurse(a.callee,
                            h, g,
                            function() {
                                k.if_(k.notNull(h),
                                    function() {
                                        k.addEnsureSafeFunction(
                                            h);
                                        q(a.arguments,
                                            function(
                                                a) {
                                                k.recurse(
                                                    a,
                                                    k
                                                    .nextId(),
                                                    void 0,
                                                    function(
                                                        a
                                                    ) {
                                                        l
                                                            .push(
                                                                k
                                                                .ensureSafeObject(
                                                                    a
                                                                )
                                                            )
                                                    }
                                                )
                                            });
                                        g.name ? (k.state
                                                .expensiveChecks ||
                                                k.addEnsureSafeObject(
                                                    g.context
                                                ), n =
                                                k.member(
                                                    g.context,
                                                    g.name,
                                                    g.computed
                                                ) + "(" +
                                                l.join(
                                                    ","
                                                ) + ")"
                                            ) : n = h +
                                            "(" + l.join(
                                                ",") +
                                            ")";
                                        n = k.ensureSafeObject(
                                            n);
                                        k.assign(b, n)
                                    },
                                    function() {
                                        k.assign(b,
                                            "undefined"
                                        )
                                    });
                                c(b)
                            }));
                    break;
                case s.AssignmentExpression:
                    h = this.nextId();
                    g = {};
                    if (!pd(a.left)) throw ca("lval");
                    this.recurse(a.left, void 0, g, function() {
                        k.if_(k.notNull(g.context),
                            function() {
                                k.recurse(a.right,
                                    h);
                                k.addEnsureSafeObject(
                                    k.member(g.context,
                                        g.name,
                                        g.computed
                                    ));
                                k.addEnsureSafeAssignContext(
                                    g.context);
                                n = k.member(g.context,
                                        g.name, g.computed
                                    ) + a.operator +
                                    h;
                                k.assign(b, n);
                                c(b || n)
                            })
                    }, 1);
                    break;
                case s.ArrayExpression:
                    l = [];
                    q(a.elements, function(a) {
                        k.recurse(a, k.nextId(), void 0,
                            function(a) {
                                l.push(a)
                            })
                    });
                    n = "[" + l.join(",") + "]";
                    this.assign(b, n);
                    c(n);
                    break;
                case s.ObjectExpression:
                    l = [];
                    q(a.properties, function(a) {
                        k.recurse(a.value, k.nextId(),
                            void 0,
                            function(b) {
                                l.push(k.escape(a.key
                                        .type ===
                                        s.Identifier ?
                                        a.key.name :
                                        "" + a.key
                                        .value) +
                                    ":" + b)
                            })
                    });
                    n = "{" + l.join(",") + "}";
                    this.assign(b, n);
                    c(n);
                    break;
                case s.ThisExpression:
                    this.assign(b, "s");
                    c("s");
                    break;
                case s.LocalsExpression:
                    this.assign(b, "l");
                    c("l");
                    break;
                case s.NGValueParameter:
                    this.assign(b, "v"), c("v")
            }
        },
        getHasOwnProperty: function(a, b) {
            var d = a + "." + b,
                c = this.current().own;
            c.hasOwnProperty(d) || (c[d] = this.nextId(!1, a +
                "&&(" + this.escape(b) + " in " + a + ")"));
            return c[d]
        },
        assign: function(a, b) {
            if (a) return this.current().body.push(a, "=", b, ";"),
                a
        },
        filter: function(a) {
            this.state.filters.hasOwnProperty(a) || (this.state.filters[
                a] = this.nextId(!0));
            return this.state.filters[a]
        },
        ifDefined: function(a, b) {
            return "ifDefined(" + a + "," + this.escape(b) + ")"
        },
        plus: function(a, b) {
            return "plus(" + a + "," + b + ")"
        },
        return_: function(a) {
            this.current().body.push("return ", a, ";")
        },
        if_: function(a, b, d) {
            if (!0 === a) b();
            else {
                var c = this.current().body;
                c.push("if(", a, "){");
                b();
                c.push("}");
                d && (c.push("else{"), d(), c.push("}"))
            }
        },
        not: function(a) {
            return "!(" + a + ")"
        },
        notNull: function(a) {
            return a + "!=null"
        },
        nonComputedMember: function(a, b) {
            var d = /[^$_a-zA-Z0-9]/g;
            return /[$_a-zA-Z][$_a-zA-Z0-9]*/.test(b) ? a + "." + b :
                a + '["' + b.replace(d, this.stringEscapeFn) + '"]'
        },
        computedMember: function(a, b) {
            return a + "[" + b + "]"
        },
        member: function(a, b, d) {
            return d ? this.computedMember(a, b) : this.nonComputedMember(
                a, b)
        },
        addEnsureSafeObject: function(a) {
            this.current().body.push(this.ensureSafeObject(a), ";")
        },
        addEnsureSafeMemberName: function(a) {
            this.current().body.push(this.ensureSafeMemberName(a),
                ";")
        },
        addEnsureSafeFunction: function(a) {
            this.current().body.push(this.ensureSafeFunction(a),
                ";")
        },
        addEnsureSafeAssignContext: function(a) {
            this.current().body.push(this.ensureSafeAssignContext(a),
                ";")
        },
        ensureSafeObject: function(a) {
            return "ensureSafeObject(" + a + ",text)"
        },
        ensureSafeMemberName: function(a) {
            return "ensureSafeMemberName(" + a + ",text)"
        },
        ensureSafeFunction: function(a) {
            return "ensureSafeFunction(" + a + ",text)"
        },
        getStringValue: function(a) {
            this.assign(a, "getStringValue(" + a + ")")
        },
        ensureSafeAssignContext: function(a) {
            return "ensureSafeAssignContext(" + a + ",text)"
        },
        lazyRecurse: function(a, b, d, c, e, f) {
            var g = this;
            return function() {
                g.recurse(a, b, d, c, e, f)
            }
        },
        lazyAssign: function(a, b) {
            var d = this;
            return function() {
                d.assign(a, b)
            }
        },
        stringEscapeRegex: /[^ a-zA-Z0-9]/g,
        stringEscapeFn: function(a) {
            return "\\u" + ("0000" + a.charCodeAt(0).toString(16)).slice(-
                4)
        },
        escape: function(a) {
            if (F(a)) return "'" + a.replace(this.stringEscapeRegex,
                this.stringEscapeFn) + "'";
            if (Q(a)) return a.toString();
            if (!0 === a) return "true";
            if (!1 === a) return "false";
            if (null === a) return "null";
            if ("undefined" === typeof a) return "undefined";
            throw ca("esc");
        },
        nextId: function(a, b) {
            var d = "v" + this.state.nextId++;
            a || this.current().vars.push(d + (b ? "=" + b : ""));
            return d
        },
        current: function() {
            return this.state[this.state.computing]
        }
    };
    td.prototype = {
        compile: function(a, b) {
            var d = this,
                c = this.astBuilder.ast(a);
            this.expression = a;
            this.expensiveChecks = b;
            aa(c, d.$filter);
            var e, f;
            if (e = qd(c)) f = this.recurse(e);
            e = od(c.body);
            var g;
            e && (g = [], q(e, function(a, b) {
                var c = d.recurse(a);
                a.input = c;
                g.push(c);
                a.watchId = b
            }));
            var h = [];
            q(c.body, function(a) {
                h.push(d.recurse(a.expression))
            });
            e = 0 === c.body.length ? C : 1 === c.body.length ? h[0] :
                function(a, b) {
                    var c;
                    q(h, function(d) {
                        c = d(a, b)
                    });
                    return c
                };
            f && (e.assign = function(a, b, c) {
                return f(a, c, b)
            });
            g && (e.inputs = g);
            e.literal = rd(c);
            e.constant = c.constant;
            return e
        },
        recurse: function(a, b, d) {
            var c, e, f = this,
                g;
            if (a.input) return this.inputs(a.input, a.watchId);
            switch (a.type) {
                case s.Literal:
                    return this.value(a.value, b);
                case s.UnaryExpression:
                    return e = this.recurse(a.argument), this[
                        "unary" + a.operator](e, b);
                case s.BinaryExpression:
                    return c = this.recurse(a.left), e = this.recurse(
                        a.right), this["binary" + a.operator](c,
                        e, b);
                case s.LogicalExpression:
                    return c = this.recurse(a.left), e = this.recurse(
                        a.right), this["binary" + a.operator](c,
                        e, b);
                case s.ConditionalExpression:
                    return this["ternary?:"](this.recurse(a.test),
                        this.recurse(a.alternate), this.recurse(
                            a.consequent), b);
                case s.Identifier:
                    return Ta(a.name, f.expression), f.identifier(a
                        .name, f.expensiveChecks || Hb(a.name),
                        b, d, f.expression);
                case s.MemberExpression:
                    return c = this.recurse(a.object, !1, !!d), a.computed ||
                        (Ta(a.property.name, f.expression), e = a.property
                            .name), a.computed && (e = this.recurse(
                            a.property)), a.computed ? this.computedMember(
                            c, e, b, d, f.expression) : this.nonComputedMember(
                            c, e, f.expensiveChecks, b, d, f.expression
                        );
                case s.CallExpression:
                    return g = [], q(a.arguments, function(a) {
                            g.push(f.recurse(a))
                        }), a.filter && (e = this.$filter(a.callee.name)),
                        a.filter || (e = this.recurse(a.callee, !0)),
                        a.filter ? function(a, c, d, f) {
                            for (var m = [], r = 0; r < g.length; ++
                                r) m.push(g[r](a, c, d, f));
                            a = e.apply(void 0, m, f);
                            return b ? {
                                context: void 0,
                                name: void 0,
                                value: a
                            } : a
                        } : function(a, c, d, n) {
                            var m = e(a, c, d, n),
                                r;
                            if (null != m.value) {
                                sa(m.context, f.expression);
                                md(m.value, f.expression);
                                r = [];
                                for (var q = 0; q < g.length; ++q) r
                                    .push(sa(g[q](a, c, d, n), f.expression));
                                r = sa(m.value.apply(m.context, r),
                                    f.expression)
                            }
                            return b ? {
                                value: r
                            } : r
                        };
                case s.AssignmentExpression:
                    return c = this.recurse(a.left, !0, 1), e =
                        this.recurse(a.right),
                        function(a, d, g, n) {
                            var m = c(a, d, g, n);
                            a = e(a, d, g, n);
                            sa(m.value, f.expression);
                            Gb(m.context);
                            m.context[m.name] = a;
                            return b ? {
                                value: a
                            } : a
                        };
                case s.ArrayExpression:
                    return g = [], q(a.elements, function(a) {
                            g.push(f.recurse(a))
                        }),
                        function(a, c, d, e) {
                            for (var f = [], r = 0; r < g.length; ++
                                r) f.push(g[r](a, c, d, e));
                            return b ? {
                                value: f
                            } : f
                        };
                case s.ObjectExpression:
                    return g = [], q(a.properties, function(a) {
                            g.push({
                                key: a.key.type === s.Identifier ?
                                    a.key.name : "" + a
                                    .key.value,
                                value: f.recurse(a.value)
                            })
                        }),
                        function(a, c, d, e) {
                            for (var f = {}, r = 0; r < g.length; ++
                                r) f[g[r].key] = g[r].value(a, c, d,
                                e);
                            return b ? {
                                value: f
                            } : f
                        };
                case s.ThisExpression:
                    return function(a) {
                        return b ? {
                            value: a
                        } : a
                    };
                case s.LocalsExpression:
                    return function(a, c) {
                        return b ? {
                            value: c
                        } : c
                    };
                case s.NGValueParameter:
                    return function(a, c, d) {
                        return b ? {
                            value: d
                        } : d
                    }
            }
        },
        "unary+": function(a, b) {
            return function(d, c, e, f) {
                d = a(d, c, e, f);
                d = x(d) ? +d : 0;
                return b ? {
                    value: d
                } : d
            }
        },
        "unary-": function(a, b) {
            return function(d, c, e, f) {
                d = a(d, c, e, f);
                d = x(d) ? -d : 0;
                return b ? {
                    value: d
                } : d
            }
        },
        "unary!": function(a, b) {
            return function(d, c, e, f) {
                d = !a(d, c, e, f);
                return b ? {
                    value: d
                } : d
            }
        },
        "binary+": function(a, b, d) {
            return function(c, e, f, g) {
                var h = a(c, e, f, g);
                c = b(c, e, f, g);
                h = nd(h, c);
                return d ? {
                    value: h
                } : h
            }
        },
        "binary-": function(a, b, d) {
            return function(c, e, f, g) {
                var h = a(c, e, f, g);
                c = b(c, e, f, g);
                h = (x(h) ? h : 0) - (x(c) ? c : 0);
                return d ? {
                    value: h
                } : h
            }
        },
        "binary*": function(a, b, d) {
            return function(c, e, f, g) {
                c = a(c, e, f, g) * b(c, e, f, g);
                return d ? {
                    value: c
                } : c
            }
        },
        "binary/": function(a, b, d) {
            return function(c, e, f, g) {
                c = a(c, e, f, g) / b(c, e, f, g);
                return d ? {
                    value: c
                } : c
            }
        },
        "binary%": function(a, b, d) {
            return function(c, e, f, g) {
                c = a(c, e, f, g) % b(c, e, f, g);
                return d ? {
                    value: c
                } : c
            }
        },
        "binary===": function(a, b, d) {
            return function(c, e, f, g) {
                c = a(c, e, f, g) === b(c, e, f, g);
                return d ? {
                    value: c
                } : c
            }
        },
        "binary!==": function(a, b, d) {
            return function(c, e, f, g) {
                c = a(c, e, f, g) !== b(c, e, f, g);
                return d ? {
                    value: c
                } : c
            }
        },
        "binary==": function(a, b, d) {
            return function(c, e, f, g) {
                c = a(c, e, f, g) == b(c, e, f, g);
                return d ? {
                    value: c
                } : c
            }
        },
        "binary!=": function(a, b, d) {
            return function(c, e, f, g) {
                c = a(c, e, f, g) != b(c, e, f, g);
                return d ? {
                    value: c
                } : c
            }
        },
        "binary<": function(a, b, d) {
            return function(c, e, f, g) {
                c = a(c, e, f, g) < b(c, e, f, g);
                return d ? {
                    value: c
                } : c
            }
        },
        "binary>": function(a, b, d) {
            return function(c, e, f, g) {
                c = a(c, e, f, g) > b(c, e, f, g);
                return d ? {
                    value: c
                } : c
            }
        },
        "binary<=": function(a, b, d) {
            return function(c, e, f, g) {
                c = a(c, e, f, g) <= b(c, e, f, g);
                return d ? {
                    value: c
                } : c
            }
        },
        "binary>=": function(a, b, d) {
            return function(c, e, f, g) {
                c = a(c, e, f, g) >= b(c, e, f, g);
                return d ? {
                    value: c
                } : c
            }
        },
        "binary&&": function(a, b, d) {
            return function(c, e, f, g) {
                c = a(c, e, f, g) && b(c, e, f, g);
                return d ? {
                    value: c
                } : c
            }
        },
        "binary||": function(a, b, d) {
            return function(c, e, f, g) {
                c = a(c, e, f, g) || b(c, e, f, g);
                return d ? {
                    value: c
                } : c
            }
        },
        "ternary?:": function(a, b, d, c) {
            return function(e, f, g, h) {
                e = a(e, f, g, h) ? b(e, f, g, h) : d(e, f, g,
                    h);
                return c ? {
                    value: e
                } : e
            }
        },
        value: function(a, b) {
            return function() {
                return b ? {
                    context: void 0,
                    name: void 0,
                    value: a
                } : a
            }
        },
        identifier: function(a, b, d, c, e) {
            return function(f, g, h, k) {
                f = g && a in g ? g : f;
                c && 1 !== c && f && !f[a] && (f[a] = {});
                g = f ? f[a] : void 0;
                b && sa(g, e);
                return d ? {
                    context: f,
                    name: a,
                    value: g
                } : g
            }
        },
        computedMember: function(a, b, d, c, e) {
            return function(f, g, h, k) {
                var l = a(f, g, h, k),
                    n, m;
                null != l && (n = b(f, g, h, k), n += "", Ta(n,
                    e), c && 1 !== c && (Gb(l), l && !l[
                    n] && (l[n] = {})), m = l[n], sa(m,
                    e));
                return d ? {
                    context: l,
                    name: n,
                    value: m
                } : m
            }
        },
        nonComputedMember: function(a, b, d, c, e, f) {
            return function(g, h, k, l) {
                g = a(g, h, k, l);
                e && 1 !== e && (Gb(g), g && !g[b] && (g[b] = {}));
                h = null != g ? g[b] : void 0;
                (d || Hb(b)) && sa(h, f);
                return c ? {
                    context: g,
                    name: b,
                    value: h
                } : h
            }
        },
        inputs: function(a, b) {
            return function(d, c, e, f) {
                return f ? f[b] : a(d, c, e)
            }
        }
    };
    var hc = function(a, b, d) {
        this.lexer = a;
        this.$filter = b;
        this.options = d;
        this.ast = new s(a, d);
        this.astCompiler = d.csp ? new td(this.ast, b) : new sd(this.ast,
            b)
    };
    hc.prototype = {
        constructor: hc,
        parse: function(a) {
            return this.astCompiler.compile(a, this.options.expensiveChecks)
        }
    };
    var kg = Object.prototype.valueOf,
        ta = O("$sce"),
        oa = {
            HTML: "html",
            CSS: "css",
            URL: "url",
            RESOURCE_URL: "resourceUrl",
            JS: "js"
        },
        mg = O("$compile"),
        Y = v.document.createElement("a"),
        xd = ra(v.location.href);
    yd.$inject = ["$document"];
    Jc.$inject = ["$provide"];
    var Fd = 22,
        Ed = ".",
        jc = "0";
    zd.$inject = ["$locale"];
    Bd.$inject = ["$locale"];
    var xg = {
            yyyy: W("FullYear", 4, 0, !1, !0),
            yy: W("FullYear", 2, 0, !0, !0),
            y: W("FullYear", 1, 0, !1, !0),
            MMMM: ib("Month"),
            MMM: ib("Month", !0),
            MM: W("Month", 2, 1),
            M: W("Month", 1, 1),
            LLLL: ib("Month", !1, !0),
            dd: W("Date", 2),
            d: W("Date", 1),
            HH: W("Hours", 2),
            H: W("Hours", 1),
            hh: W("Hours", 2, -12),
            h: W("Hours", 1, -12),
            mm: W("Minutes", 2),
            m: W("Minutes", 1),
            ss: W("Seconds", 2),
            s: W("Seconds", 1),
            sss: W("Milliseconds", 3),
            EEEE: ib("Day"),
            EEE: ib("Day", !0),
            a: function(a, b) {
                return 12 > a.getHours() ? b.AMPMS[0] : b.AMPMS[1]
            },
            Z: function(a, b, d) {
                a = -1 * d;
                return a = (0 <= a ? "+" : "") + (Ib(Math[0 < a ?
                    "floor" : "ceil"](a / 60), 2) + Ib(Math.abs(
                    a % 60), 2))
            },
            ww: Hd(2),
            w: Hd(1),
            G: kc,
            GG: kc,
            GGG: kc,
            GGGG: function(a, b) {
                return 0 >= a.getFullYear() ? b.ERANAMES[0] : b.ERANAMES[
                    1]
            }
        },
        wg =
        /((?:[^yMLdHhmsaZEwG']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|L+|d+|H+|h+|m+|s+|a|Z|G+|w+))(.*)/,
        vg = /^\-?\d+$/;
    Ad.$inject = ["$locale"];
    var qg = da(P),
        rg = da(sb);
    Cd.$inject = ["$parse"];
    var ne = da({
            restrict: "E",
            compile: function(a, b) {
                if (!b.href && !b.xlinkHref) return function(a, b) {
                    if ("a" === b[0].nodeName.toLowerCase()) {
                        var e =
                            "[object SVGAnimatedString]" ===
                            ma.call(b.prop("href")) ?
                            "xlink:href" : "href";
                        b.on("click", function(a) {
                            b.attr(e) || a.preventDefault()
                        })
                    }
                }
            }
        }),
        tb = {};
    q(Cb, function(a, b) {
        function d(a, d, e) {
            a.$watch(e[c], function(a) {
                e.$set(b, !!a)
            })
        }
        if ("multiple" != a) {
            var c = xa("ng-" + b),
                e = d;
            "checked" === a && (e = function(a, b, e) {
                e.ngModel !== e[c] && d(a, b, e)
            });
            tb[c] = function() {
                return {
                    restrict: "A",
                    priority: 100,
                    link: e
                }
            }
        }
    });
    q(ad, function(a, b) {
        tb[b] = function() {
            return {
                priority: 100,
                link: function(a, c, e) {
                    if ("ngPattern" === b && "/" == e.ngPattern
                        .charAt(0) && (c = e.ngPattern.match(
                            zg))) {
                        e.$set("ngPattern", new RegExp(c[1],
                            c[2]));
                        return
                    }
                    a.$watch(e[b], function(a) {
                        e.$set(b, a)
                    })
                }
            }
        }
    });
    q(["src", "srcset", "href"], function(a) {
        var b = xa("ng-" + a);
        tb[b] = function() {
            return {
                priority: 99,
                link: function(d, c, e) {
                    var f = a,
                        g = a;
                    "href" === a &&
                        "[object SVGAnimatedString]" === ma
                        .call(c.prop("href")) && (g =
                            "xlinkHref", e.$attr[g] =
                            "xlink:href", f = null);
                    e.$observe(b, function(b) {
                        b ? (e.$set(g, b), Ca && f &&
                                c.prop(f, e[g])) :
                            "href" === a && e.$set(
                                g, null)
                    })
                }
            }
        }
    });
    var Jb = {
        $addControl: C,
        $$renameControl: function(a, b) {
            a.$name = b
        },
        $removeControl: C,
        $setValidity: C,
        $setDirty: C,
        $setPristine: C,
        $setSubmitted: C
    };
    Id.$inject = ["$element", "$attrs", "$scope", "$animate",
        "$interpolate"
    ];
    var Rd = function(a) {
            return ["$timeout", "$parse", function(b, d) {
                function c(a) {
                    return "" === a ? d('this[""]').assign : d(a).assign ||
                        C
                }
                return {
                    name: "form",
                    restrict: a ? "EAC" : "E",
                    require: ["form", "^^?form"],
                    controller: Id,
                    compile: function(d, f) {
                        d.addClass(Ua).addClass(mb);
                        var g = f.name ? "name" : a && f.ngForm ?
                            "ngForm" : !1;
                        return {
                            pre: function(a, d, e, f) {
                                var m = f[0];
                                if (!("action" in e)) {
                                    var r = function(b) {
                                        a.$apply(
                                            function() {
                                                m.$commitViewValue();
                                                m.$setSubmitted()
                                            });
                                        b.preventDefault()
                                    };
                                    d[0].addEventListener(
                                        "submit", r, !1
                                    );
                                    d.on("$destroy",
                                        function() {
                                            b(function() {
                                                    d
                                                        [
                                                            0
                                                        ]
                                                        .removeEventListener(
                                                            "submit",
                                                            r, !
                                                            1
                                                        )
                                                },
                                                0, !
                                                1)
                                        })
                                }(f[1] || m.$$parentForm).$addControl
                                    (m);
                                var q = g ? c(m.$name) : C;
                                g && (q(a, m), e.$observe(g,
                                    function(b) {
                                        m.$name !==
                                            b && (q(
                                                    a,
                                                    void 0
                                                ),
                                                m.$$parentForm
                                                .$$renameControl(
                                                    m,
                                                    b
                                                ),
                                                q =
                                                c(m
                                                    .$name
                                                ),
                                                q(a,
                                                    m
                                                ))
                                    }));
                                d.on("$destroy", function() {
                                    m.$$parentForm.$removeControl(
                                        m);
                                    q(a, void 0);
                                    R(m, Jb)
                                })
                            }
                        }
                    }
                }
            }]
        },
        oe = Rd(),
        Be = Rd(!0),
        yg =
        /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d\.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/,
        Hg =
        /^[a-z][a-z\d.+-]*:\/*(?:[^:@]+(?::[^@]+)?@)?(?:[^\s:/?#]+|\[[a-f\d:]+\])(?::\d+)?(?:\/[^?#]*)?(?:\?[^#]*)?(?:#.*)?$/i,
        Ig =
        /^[a-z0-9!#$%&'*+\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i,
        Jg = /^\s*(\-|\+)?(\d+|(\d*(\.\d*)))([eE][+-]?\d+)?\s*$/,
        Sd = /^(\d{4,})-(\d{2})-(\d{2})$/,
        Td =
        /^(\d{4,})-(\d\d)-(\d\d)T(\d\d):(\d\d)(?::(\d\d)(\.\d{1,3})?)?$/,
        nc = /^(\d{4,})-W(\d\d)$/,
        Ud = /^(\d{4,})-(\d\d)$/,
        Vd = /^(\d\d):(\d\d)(?::(\d\d)(\.\d{1,3})?)?$/,
        Kd = T();
    q(["date", "datetime-local", "month", "time", "week"], function(a) {
        Kd[a] = !0
    });
    var Wd = {
            text: function(a, b, d, c, e, f) {
                jb(a, b, d, c, e, f);
                lc(c)
            },
            date: kb("date", Sd, Lb(Sd, ["yyyy", "MM", "dd"]), "yyyy-MM-dd"),
            "datetime-local": kb("datetimelocal", Td, Lb(Td,
                    "yyyy MM dd HH mm ss sss".split(" ")),
                "yyyy-MM-ddTHH:mm:ss.sss"),
            time: kb("time", Vd, Lb(Vd, ["HH", "mm", "ss", "sss"]),
                "HH:mm:ss.sss"),
            week: kb("week", nc, function(a, b) {
                if (fa(a)) return a;
                if (F(a)) {
                    nc.lastIndex = 0;
                    var d = nc.exec(a);
                    if (d) {
                        var c = +d[1],
                            e = +d[2],
                            f = d = 0,
                            g = 0,
                            h = 0,
                            k = Gd(c),
                            e = 7 * (e - 1);
                        b && (d = b.getHours(), f = b.getMinutes(),
                            g = b.getSeconds(), h = b.getMilliseconds()
                        );
                        return new Date(c, 0, k.getDate() + e, d, f,
                            g, h)
                    }
                }
                return NaN
            }, "yyyy-Www"),
            month: kb("month", Ud, Lb(Ud, ["yyyy", "MM"]), "yyyy-MM"),
            number: function(a, b, d, c, e, f) {
                Ld(a, b, d, c);
                jb(a, b, d, c, e, f);
                c.$$parserName = "number";
                c.$parsers.push(function(a) {
                    if (c.$isEmpty(a)) return null;
                    if (Jg.test(a)) return parseFloat(a)
                });
                c.$formatters.push(function(a) {
                    if (!c.$isEmpty(a)) {
                        if (!Q(a)) throw lb("numfmt", a);
                        a = a.toString()
                    }
                    return a
                });
                if (x(d.min) || d.ngMin) {
                    var g;
                    c.$validators.min = function(a) {
                        return c.$isEmpty(a) || y(g) || a >= g
                    };
                    d.$observe("min", function(a) {
                        x(a) && !Q(a) && (a = parseFloat(a, 10));
                        g = Q(a) && !isNaN(a) ? a : void 0;
                        c.$validate()
                    })
                }
                if (x(d.max) || d.ngMax) {
                    var h;
                    c.$validators.max = function(a) {
                        return c.$isEmpty(a) || y(h) || a <= h
                    };
                    d.$observe("max", function(a) {
                        x(a) && !Q(a) && (a = parseFloat(a, 10));
                        h = Q(a) && !isNaN(a) ? a : void 0;
                        c.$validate()
                    })
                }
            },
            url: function(a, b, d, c, e, f) {
                jb(a, b, d, c, e, f);
                lc(c);
                c.$$parserName = "url";
                c.$validators.url = function(a, b) {
                    var d = a || b;
                    return c.$isEmpty(d) || Hg.test(d)
                }
            },
            email: function(a, b, d, c, e, f) {
                jb(a, b, d, c, e, f);
                lc(c);
                c.$$parserName = "email";
                c.$validators.email = function(a, b) {
                    var d = a || b;
                    return c.$isEmpty(d) || Ig.test(d)
                }
            },
            radio: function(a, b, d, c) {
                y(d.name) && b.attr("name", ++nb);
                b.on("click", function(a) {
                    b[0].checked && c.$setViewValue(d.value, a &&
                        a.type)
                });
                c.$render = function() {
                    b[0].checked = d.value == c.$viewValue
                };
                d.$observe("value", c.$render)
            },
            checkbox: function(a, b, d, c, e, f, g, h) {
                var k = Md(h, a, "ngTrueValue", d.ngTrueValue, !0),
                    l = Md(h, a, "ngFalseValue", d.ngFalseValue, !1);
                b.on("click", function(a) {
                    c.$setViewValue(b[0].checked, a && a.type)
                });
                c.$render = function() {
                    b[0].checked = c.$viewValue
                };
                c.$isEmpty = function(a) {
                    return !1 === a
                };
                c.$formatters.push(function(a) {
                    return pa(a, k)
                });
                c.$parsers.push(function(a) {
                    return a ? k : l
                })
            },
            hidden: C,
            button: C,
            submit: C,
            reset: C,
            file: C
        },
        Dc = ["$browser", "$sniffer", "$filter", "$parse", function(a, b, d,
            c) {
            return {
                restrict: "E",
                require: ["?ngModel"],
                link: {
                    pre: function(e, f, g, h) {
                        h[0] && (Wd[P(g.type)] || Wd.text)(e, f, g,
                            h[0], b, a, d, c)
                    }
                }
            }
        }],
        Kg = /^(true|false|\d+)$/,
        Te = function() {
            return {
                restrict: "A",
                priority: 100,
                compile: function(a, b) {
                    return Kg.test(b.ngValue) ? function(a, b, e) {
                        e.$set("value", a.$eval(e.ngValue))
                    } : function(a, b, e) {
                        a.$watch(e.ngValue, function(a) {
                            e.$set("value", a)
                        })
                    }
                }
            }
        },
        te = ["$compile", function(a) {
            return {
                restrict: "AC",
                compile: function(b) {
                    a.$$addBindingClass(b);
                    return function(b, c, e) {
                        a.$$addBindingInfo(c, e.ngBind);
                        c = c[0];
                        b.$watch(e.ngBind, function(a) {
                            c.textContent = y(a) ? "" :
                                a
                        })
                    }
                }
            }
        }],
        ve = ["$interpolate", "$compile", function(a, b) {
            return {
                compile: function(d) {
                    b.$$addBindingClass(d);
                    return function(c, d, f) {
                        c = a(d.attr(f.$attr.ngBindTemplate));
                        b.$$addBindingInfo(d, c.expressions);
                        d = d[0];
                        f.$observe("ngBindTemplate", function(a) {
                            d.textContent = y(a) ? "" :
                                a
                        })
                    }
                }
            }
        }],
        ue = ["$sce", "$parse", "$compile", function(a, b, d) {
            return {
                restrict: "A",
                compile: function(c, e) {
                    var f = b(e.ngBindHtml),
                        g = b(e.ngBindHtml, function(a) {
                            return (a || "").toString()
                        });
                    d.$$addBindingClass(c);
                    return function(b, c, e) {
                        d.$$addBindingInfo(c, e.ngBindHtml);
                        b.$watch(g, function() {
                            c.html(a.getTrustedHtml(f(b)) ||
                                "")
                        })
                    }
                }
            }
        }],
        Se = da({
            restrict: "A",
            require: "ngModel",
            link: function(a, b, d, c) {
                c.$viewChangeListeners.push(function() {
                    a.$eval(d.ngChange)
                })
            }
        }),
        we = mc("", !0),
        ye = mc("Odd", 0),
        xe = mc("Even", 1),
        ze = La({
            compile: function(a, b) {
                b.$set("ngCloak", void 0);
                a.removeClass("ng-cloak")
            }
        }),
        Ae = [function() {
            return {
                restrict: "A",
                scope: !0,
                controller: "@",
                priority: 500
            }
        }],
        Ic = {},
        Lg = {
            blur: !0,
            focus: !0
        };
    q(
        "click dblclick mousedown mouseup mouseover mouseout mousemove mouseenter mouseleave keydown keyup keypress submit focus blur copy cut paste"
        .split(" "),
        function(a) {
            var b = xa("ng-" + a);
            Ic[b] = ["$parse", "$rootScope", function(d, c) {
                return {
                    restrict: "A",
                    compile: function(e, f) {
                        var g = d(f[b], null, !0);
                        return function(b, d) {
                            d.on(a, function(d) {
                                var e =
                                    function() {
                                        g(b, {
                                            $event: d
                                        })
                                    };
                                Lg[a] && c.$$phase ?
                                    b.$evalAsync(
                                        e) : b.$apply(
                                        e)
                            })
                        }
                    }
                }
            }]
        });
    var De = ["$animate", "$compile", function(a, b) {
            return {
                multiElement: !0,
                transclude: "element",
                priority: 600,
                terminal: !0,
                restrict: "A",
                $$tlb: !0,
                link: function(d, c, e, f, g) {
                    var h, k, l;
                    d.$watch(e.ngIf, function(d) {
                        d ? k || g(function(d, f) {
                            k = f;
                            d[d.length++] = b.$$createComment(
                                "end ngIf", e.ngIf
                            );
                            h = {
                                clone: d
                            };
                            a.enter(d, c.parent(),
                                c)
                        }) : (l && (l.remove(), l =
                            null), k && (k.$destroy(),
                            k = null), h && (l = rb(
                                h.clone), a.leave(l)
                            .then(function() {
                                l = null
                            }), h = null))
                    })
                }
            }
        }],
        Ee = ["$templateRequest", "$anchorScroll", "$animate", function(a,
            b, d) {
            return {
                restrict: "ECA",
                priority: 400,
                terminal: !0,
                transclude: "element",
                controller: ea.noop,
                compile: function(c, e) {
                    var f = e.ngInclude || e.src,
                        g = e.onload || "",
                        h = e.autoscroll;
                    return function(c, e, n, m, r) {
                        var q = 0,
                            s, w, p, y = function() {
                                w && (w.remove(), w = null);
                                s && (s.$destroy(), s = null);
                                p && (d.leave(p).then(function() {
                                    w = null
                                }), w = p, p = null)
                            };
                        c.$watch(f, function(f) {
                            var n = function() {
                                    !x(h) || h && !c.$eval(
                                        h) || b()
                                },
                                u = ++q;
                            f ? (a(f, !0).then(function(
                                a) {
                                if (!c.$$destroyed &&
                                    u === q
                                ) {
                                    var b =
                                        c.$new();
                                    m.template =
                                        a;
                                    a = r(b,
                                        function(
                                            a
                                        ) {
                                            y
                                                ();
                                            d
                                                .enter(
                                                    a,
                                                    null,
                                                    e
                                                )
                                                .then(
                                                    n
                                                )
                                        }
                                    );
                                    s = b;
                                    p = a;
                                    s.$emit(
                                        "$includeContentLoaded",
                                        f
                                    );
                                    c.$eval(
                                        g
                                    )
                                }
                            }, function() {
                                c.$$destroyed ||
                                    u !== q ||
                                    (y(), c
                                        .$emit(
                                            "$includeContentError",
                                            f
                                        ))
                            }), c.$emit(
                                "$includeContentRequested",
                                f)) : (y(), m.template =
                                null)
                        })
                    }
                }
            }
        }],
        Ve = ["$compile", function(a) {
            return {
                restrict: "ECA",
                priority: -400,
                require: "ngInclude",
                link: function(b, d, c, e) {
                    ma.call(d[0]).match(/SVG/) ? (d.empty(), a(Lc(e
                        .template, v.document).childNodes)(
                        b,
                        function(a) {
                            d.append(a)
                        }, {
                            futureParentElement: d
                        })) : (d.html(e.template), a(d.contents())
                        (b))
                }
            }
        }],
        Fe = La({
            priority: 450,
            compile: function() {
                return {
                    pre: function(a, b, d) {
                        a.$eval(d.ngInit)
                    }
                }
            }
        }),
        Re = function() {
            return {
                restrict: "A",
                priority: 100,
                require: "ngModel",
                link: function(a, b, d, c) {
                    var e = b.attr(d.$attr.ngList) || ", ",
                        f = "false" !== d.ngTrim,
                        g = f ? V(e) : e;
                    c.$parsers.push(function(a) {
                        if (!y(a)) {
                            var b = [];
                            a && q(a.split(g), function(a) {
                                a && b.push(f ? V(a) :
                                    a)
                            });
                            return b
                        }
                    });
                    c.$formatters.push(function(a) {
                        if (K(a)) return a.join(e)
                    });
                    c.$isEmpty = function(a) {
                        return !a || !a.length
                    }
                }
            }
        },
        mb = "ng-valid",
        Nd = "ng-invalid",
        Ua = "ng-pristine",
        Kb = "ng-dirty",
        Pd = "ng-pending",
        lb = O("ngModel"),
        Mg = ["$scope", "$exceptionHandler", "$attrs", "$element", "$parse",
            "$animate", "$timeout", "$rootScope", "$q", "$interpolate",
            function(a, b, d, c, e, f, g, h, k, l) {
                this.$modelValue = this.$viewValue = Number.NaN;
                this.$$rawModelValue = void 0;
                this.$validators = {};
                this.$asyncValidators = {};
                this.$parsers = [];
                this.$formatters = [];
                this.$viewChangeListeners = [];
                this.$untouched = !0;
                this.$touched = !1;
                this.$pristine = !0;
                this.$dirty = !1;
                this.$valid = !0;
                this.$invalid = !1;
                this.$error = {};
                this.$$success = {};
                this.$pending = void 0;
                this.$name = l(d.name || "", !1)(a);
                this.$$parentForm = Jb;
                var n = e(d.ngModel),
                    m = n.assign,
                    r = n,
                    s = m,
                    v = null,
                    w, p = this;
                this.$$setOptions = function(a) {
                    if ((p.$options = a) && a.getterSetter) {
                        var b = e(d.ngModel + "()"),
                            f = e(d.ngModel + "($$$p)");
                        r = function(a) {
                            var c = n(a);
                            E(c) && (c = b(a));
                            return c
                        };
                        s = function(a, b) {
                            E(n(a)) ? f(a, {
                                $$$p: b
                            }) : m(a, b)
                        }
                    } else if (!n.assign) throw lb("nonassign", d.ngModel,
                        wa(c));
                };
                this.$render = C;
                this.$isEmpty = function(a) {
                    return y(a) || "" === a || null === a || a !== a
                };
                this.$$updateEmptyClasses = function(a) {
                    p.$isEmpty(a) ? (f.removeClass(c, "ng-not-empty"),
                        f.addClass(c, "ng-empty")) : (f.removeClass(
                        c, "ng-empty"), f.addClass(c,
                        "ng-not-empty"))
                };
                var H = 0;
                Jd({
                    ctrl: this,
                    $element: c,
                    set: function(a, b) {
                        a[b] = !0
                    },
                    unset: function(a, b) {
                        delete a[b]
                    },
                    $animate: f
                });
                this.$setPristine = function() {
                    p.$dirty = !1;
                    p.$pristine = !0;
                    f.removeClass(c, Kb);
                    f.addClass(c, Ua)
                };
                this.$setDirty = function() {
                    p.$dirty = !0;
                    p.$pristine = !1;
                    f.removeClass(c, Ua);
                    f.addClass(c, Kb);
                    p.$$parentForm.$setDirty()
                };
                this.$setUntouched = function() {
                    p.$touched = !1;
                    p.$untouched = !0;
                    f.setClass(c, "ng-untouched", "ng-touched")
                };
                this.$setTouched = function() {
                    p.$touched = !0;
                    p.$untouched = !1;
                    f.setClass(c, "ng-touched", "ng-untouched")
                };
                this.$rollbackViewValue = function() {
                    g.cancel(v);
                    p.$viewValue = p.$$lastCommittedViewValue;
                    p.$render()
                };
                this.$validate = function() {
                    if (!Q(p.$modelValue) || !isNaN(p.$modelValue)) {
                        var a = p.$$rawModelValue,
                            b = p.$valid,
                            c = p.$modelValue,
                            d = p.$options && p.$options.allowInvalid;
                        p.$$runValidators(a, p.$$lastCommittedViewValue,
                            function(e) {
                                d || b === e || (p.$modelValue = e ?
                                    a : void 0, p.$modelValue !==
                                    c && p.$$writeModelToScope()
                                )
                            })
                    }
                };
                this.$$runValidators = function(a, b, c) {
                    function d() {
                        var c = !0;
                        q(p.$validators, function(d, e) {
                            var g = d(a, b);
                            c = c && g;
                            f(e, g)
                        });
                        return c ? !0 : (q(p.$asyncValidators, function(
                            a, b) {
                            f(b, null)
                        }), !1)
                    }

                    function e() {
                        var c = [],
                            d = !0;
                        q(p.$asyncValidators, function(e, g) {
                            var h = e(a, b);
                            if (!h || !E(h.then)) throw lb(
                                "nopromise", h);
                            f(g, void 0);
                            c.push(h.then(function() {
                                f(g, !0)
                            }, function() {
                                d = !1;
                                f(g, !1)
                            }))
                        });
                        c.length ? k.all(c).then(function() {
                            g(d)
                        }, C) : g(!0)
                    }

                    function f(a, b) {
                        h === H && p.$setValidity(a, b)
                    }

                    function g(a) {
                        h === H && c(a)
                    }
                    H++;
                    var h = H;
                    (function() {
                        var a = p.$$parserName || "parse";
                        if (y(w)) f(a, null);
                        else return w || (q(p.$validators, function(
                            a, b) {
                            f(b, null)
                        }), q(p.$asyncValidators,
                            function(a, b) {
                                f(b, null)
                            })), f(a, w), w;
                        return !0
                    })() ? d() ? e() : g(!1): g(!1)
                };
                this.$commitViewValue = function() {
                    var a = p.$viewValue;
                    g.cancel(v);
                    if (p.$$lastCommittedViewValue !== a || "" === a &&
                        p.$$hasNativeValidators) p.$$updateEmptyClasses(
                            a), p.$$lastCommittedViewValue = a, p.$pristine &&
                        this.$setDirty(), this.$$parseAndValidate()
                };
                this.$$parseAndValidate = function() {
                    var b = p.$$lastCommittedViewValue;
                    if (w = y(b) ? void 0 : !0)
                        for (var c = 0; c < p.$parsers.length; c++)
                            if (b = p.$parsers[c](b), y(b)) {
                                w = !1;
                                break
                            }
                    Q(p.$modelValue) && isNaN(p.$modelValue) && (p.$modelValue =
                        r(a));
                    var d = p.$modelValue,
                        e = p.$options && p.$options.allowInvalid;
                    p.$$rawModelValue = b;
                    e && (p.$modelValue = b, p.$modelValue !== d && p.$$writeModelToScope());
                    p.$$runValidators(b, p.$$lastCommittedViewValue,
                        function(a) {
                            e || (p.$modelValue = a ? b : void 0, p
                                .$modelValue !== d && p.$$writeModelToScope()
                            )
                        })
                };
                this.$$writeModelToScope = function() {
                    s(a, p.$modelValue);
                    q(p.$viewChangeListeners, function(a) {
                        try {
                            a()
                        } catch (c) {
                            b(c)
                        }
                    })
                };
                this.$setViewValue = function(a, b) {
                    p.$viewValue = a;
                    p.$options && !p.$options.updateOnDefault || p.$$debounceViewValueCommit(
                        b)
                };
                this.$$debounceViewValueCommit = function(b) {
                    var c = 0,
                        d = p.$options;
                    d && x(d.debounce) && (d = d.debounce, Q(d) ? c = d :
                        Q(d[b]) ? c = d[b] : Q(d["default"]) && (c =
                            d["default"]));
                    g.cancel(v);
                    c ? v = g(function() {
                        p.$commitViewValue()
                    }, c) : h.$$phase ? p.$commitViewValue() : a.$apply(
                        function() {
                            p.$commitViewValue()
                        })
                };
                a.$watch(function() {
                    var b = r(a);
                    if (b !== p.$modelValue && (p.$modelValue === p
                            .$modelValue || b === b)) {
                        p.$modelValue = p.$$rawModelValue = b;
                        w = void 0;
                        for (var c = p.$formatters, d = c.length, e =
                                b; d--;) e = c[d](e);
                        p.$viewValue !== e && (p.$$updateEmptyClasses(
                                e), p.$viewValue = p.$$lastCommittedViewValue =
                            e, p.$render(), p.$$runValidators(b,
                                e, C))
                    }
                    return b
                })
            }
        ],
        Qe = ["$rootScope", function(a) {
            return {
                restrict: "A",
                require: ["ngModel", "^?form", "^?ngModelOptions"],
                controller: Mg,
                priority: 1,
                compile: function(b) {
                    b.addClass(Ua).addClass("ng-untouched").addClass(
                        mb);
                    return {
                        pre: function(a, b, e, f) {
                            var g = f[0];
                            b = f[1] || g.$$parentForm;
                            g.$$setOptions(f[2] && f[2].$options);
                            b.$addControl(g);
                            e.$observe("name", function(a) {
                                g.$name !== a && g.$$parentForm
                                    .$$renameControl(g,
                                        a)
                            });
                            a.$on("$destroy", function() {
                                g.$$parentForm.$removeControl(
                                    g)
                            })
                        },
                        post: function(b, c, e, f) {
                            var g = f[0];
                            if (g.$options && g.$options.updateOn)
                                c.on(g.$options.updateOn,
                                    function(a) {
                                        g.$$debounceViewValueCommit(
                                            a && a.type)
                                    });
                            c.on("blur", function() {
                                g.$touched || (a.$$phase ?
                                    b.$evalAsync(g.$setTouched) :
                                    b.$apply(g.$setTouched)
                                )
                            })
                        }
                    }
                }
            }
        }],
        Ng = /(\s+|^)default(\s+|$)/,
        Ue = function() {
            return {
                restrict: "A",
                controller: ["$scope", "$attrs", function(a, b) {
                    var d = this;
                    this.$options = qa(a.$eval(b.ngModelOptions));
                    x(this.$options.updateOn) ? (this.$options.updateOnDefault = !
                            1, this.$options.updateOn = V(this.$options
                                .updateOn.replace(Ng, function() {
                                    d.$options.updateOnDefault = !
                                        0;
                                    return " "
                                }))) : this.$options.updateOnDefault = !
                        0
                }]
            }
        },
        Ge = La({
            terminal: !0,
            priority: 1E3
        }),
        Og = O("ngOptions"),
        Pg =
        /^\s*([\s\S]+?)(?:\s+as\s+([\s\S]+?))?(?:\s+group\s+by\s+([\s\S]+?))?(?:\s+disable\s+when\s+([\s\S]+?))?\s+for\s+(?:([\$\w][\$\w]*)|(?:\(\s*([\$\w][\$\w]*)\s*,\s*([\$\w][\$\w]*)\s*\)))\s+in\s+([\s\S]+?)(?:\s+track\s+by\s+([\s\S]+?))?$/,
        Oe = ["$compile", "$document", "$parse", function(a, b, d) {
            function c(a, b, c) {
                function e(a, b, c, d, f) {
                    this.selectValue = a;
                    this.viewValue = b;
                    this.label = c;
                    this.group = d;
                    this.disabled = f
                }

                function f(a) {
                    var b;
                    if (!q && ya(a)) b = a;
                    else {
                        b = [];
                        for (var c in a) a.hasOwnProperty(c) && "$" !==
                            c.charAt(0) && b.push(c)
                    }
                    return b
                }
                var m = a.match(Pg);
                if (!m) throw Og("iexp", a, wa(b));
                var r = m[5] || m[7],
                    q = m[6];
                a = / as /.test(m[0]) && m[1];
                var s = m[9];
                b = d(m[2] ? m[1] : r);
                var w = a && d(a) || b,
                    p = s && d(s),
                    v = s ? function(a, b) {
                        return p(c, b)
                    } : function(a) {
                        return Fa(a)
                    },
                    t = function(a, b) {
                        return v(a, L(a, b))
                    },
                    z = d(m[2] || m[1]),
                    u = d(m[3] || ""),
                    y = d(m[4] || ""),
                    x = d(m[8]),
                    D = {},
                    L = q ? function(a, b) {
                        D[q] = b;
                        D[r] = a;
                        return D
                    } : function(a) {
                        D[r] = a;
                        return D
                    };
                return {
                    trackBy: s,
                    getTrackByValue: t,
                    getWatchables: d(x, function(a) {
                        var b = [];
                        a = a || [];
                        for (var d = f(a), e = d.length, g = 0; g <
                            e; g++) {
                            var h = a === d ? g : d[g],
                                l = a[h],
                                h = L(l, h),
                                l = v(l, h);
                            b.push(l);
                            if (m[2] || m[1]) l = z(c, h), b.push(
                                l);
                            m[4] && (h = y(c, h), b.push(h))
                        }
                        return b
                    }),
                    getOptions: function() {
                        for (var a = [], b = {}, d = x(c) || [], g =
                                f(d), h = g.length, m = 0; m < h; m++) {
                            var p = d === g ? m : g[m],
                                q = L(d[p], p),
                                r = w(c, q),
                                p = v(r, q),
                                D = z(c, q),
                                N = u(c, q),
                                q = y(c, q),
                                r = new e(p, r, D, N, q);
                            a.push(r);
                            b[p] = r
                        }
                        return {
                            items: a,
                            selectValueMap: b,
                            getOptionFromViewValue: function(a) {
                                return b[t(a)]
                            },
                            getViewValueFromOption: function(a) {
                                return s ? ea.copy(a.viewValue) :
                                    a.viewValue
                            }
                        }
                    }
                }
            }
            var e = v.document.createElement("option"),
                f = v.document.createElement("optgroup");
            return {
                restrict: "A",
                terminal: !0,
                require: ["select", "ngModel"],
                link: {
                    pre: function(a, b, c, d) {
                        d[0].registerOption = C
                    },
                    post: function(d, h, k, l) {
                        function n(a, b) {
                            a.element = b;
                            b.disabled = a.disabled;
                            a.label !== b.label && (b.label = a.label,
                                b.textContent = a.label);
                            a.value !== b.value && (b.value = a.selectValue)
                        }

                        function m() {
                            var a = u && r.readValue();
                            if (u)
                                for (var b = u.items.length - 1; 0 <=
                                    b; b--) {
                                    var c = u.items[b];
                                    c.group ? Bb(c.element.parentNode) :
                                        Bb(c.element)
                                }
                            u = I.getOptions();
                            var d = {};
                            t && h.prepend(w);
                            u.items.forEach(function(a) {
                                var b;
                                if (x(a.group)) {
                                    b = d[a.group];
                                    b || (b = f.cloneNode(!
                                            1), E.appendChild(
                                            b), b.label =
                                        a.group, d[a.group] =
                                        b);
                                    var c = e.cloneNode(!1)
                                } else b = E, c = e.cloneNode(!
                                    1);
                                b.appendChild(c);
                                n(a, c)
                            });
                            h[0].appendChild(E);
                            s.$render();
                            s.$isEmpty(a) || (b = r.readValue(), (I
                                .trackBy || v ? pa(a, b) :
                                a === b) || (s.$setViewValue(
                                b), s.$render()))
                        }
                        var r = l[0],
                            s = l[1],
                            v = k.multiple,
                            w;
                        l = 0;
                        for (var p = h.children(), y = p.length; l <
                            y; l++)
                            if ("" === p[l].value) {
                                w = p.eq(l);
                                break
                            }
                        var t = !!w,
                            z = B(e.cloneNode(!1));
                        z.val("?");
                        var u, I = c(k.ngOptions, h, d),
                            E = b[0].createDocumentFragment();
                        v ? (s.$isEmpty = function(a) {
                            return !a || 0 === a.length
                        }, r.writeValue = function(a) {
                            u.items.forEach(function(a) {
                                a.element.selected = !
                                    1
                            });
                            a && a.forEach(function(a) {
                                if (a = u.getOptionFromViewValue(
                                        a)) a.element
                                    .selected = !0
                            })
                        }, r.readValue = function() {
                            var a = h.val() || [],
                                b = [];
                            q(a, function(a) {
                                (a = u.selectValueMap[
                                    a]) && !a.disabled &&
                                    b.push(u.getViewValueFromOption(
                                        a))
                            });
                            return b
                        }, I.trackBy && d.$watchCollection(
                            function() {
                                if (K(s.$viewValue)) return
                                    s.$viewValue.map(
                                        function(a) {
                                            return I.getTrackByValue(
                                                a)
                                        })
                            },
                            function() {
                                s.$render()
                            })) : (r.writeValue = function(a) {
                            var b = u.getOptionFromViewValue(
                                a);
                            b ? (h[0].value !== b.selectValue &&
                                    (z.remove(), t || w.remove(),
                                        h[0].value = b.selectValue,
                                        b.element.selected = !
                                        0), b.element.setAttribute(
                                        "selected",
                                        "selected")) : null ===
                                a || t ? (z.remove(), t ||
                                    h.prepend(w), h.val(""),
                                    w.prop("selected", !0),
                                    w.attr("selected", !0)) :
                                (t || w.remove(), h.prepend(
                                    z), h.val("?"), z.prop(
                                    "selected", !0), z.attr(
                                    "selected", !0))
                        }, r.readValue = function() {
                            var a = u.selectValueMap[h.val()];
                            return a && !a.disabled ? (t ||
                                w.remove(), z.remove(),
                                u.getViewValueFromOption(
                                    a)) : null
                        }, I.trackBy && d.$watch(function() {
                            return I.getTrackByValue(s.$viewValue)
                        }, function() {
                            s.$render()
                        }));
                        t ? (w.remove(), a(w)(d), w.removeClass(
                            "ng-scope")) : w = B(e.cloneNode(!1));
                        h.empty();
                        m();
                        d.$watchCollection(I.getWatchables, m)
                    }
                }
            }
        }],
        He = ["$locale", "$interpolate", "$log", function(a, b, d) {
            var c = /{}/g,
                e = /^when(Minus)?(.+)$/;
            return {
                link: function(f, g, h) {
                    function k(a) {
                        g.text(a || "")
                    }
                    var l = h.count,
                        n = h.$attr.when && g.attr(h.$attr.when),
                        m = h.offset || 0,
                        r = f.$eval(n) || {},
                        s = {},
                        v = b.startSymbol(),
                        w = b.endSymbol(),
                        p = v + l + "-" + m + w,
                        x = ea.noop,
                        t;
                    q(h, function(a, b) {
                        var c = e.exec(b);
                        c && (c = (c[1] ? "-" : "") + P(c[2]),
                            r[c] = g.attr(h.$attr[b]))
                    });
                    q(r, function(a, d) {
                        s[d] = b(a.replace(c, p))
                    });
                    f.$watch(l, function(b) {
                        var c = parseFloat(b),
                            e = isNaN(c);
                        e || c in r || (c = a.pluralCat(c -
                            m));
                        c === t || e && Q(t) && isNaN(t) ||
                            (x(), e = s[c], y(e) ? (null !=
                                b && d.debug(
                                    "ngPluralize: no rule defined for '" +
                                    c + "' in " + n), x =
                                C, k()) : x = f.$watch(
                                e, k), t = c)
                    })
                }
            }
        }],
        Ie = ["$parse", "$animate", "$compile", function(a, b, d) {
            var c = O("ngRepeat"),
                e = function(a, b, c, d, e, n, m) {
                    a[c] = d;
                    e && (a[e] = n);
                    a.$index = b;
                    a.$first = 0 === b;
                    a.$last = b === m - 1;
                    a.$middle = !(a.$first || a.$last);
                    a.$odd = !(a.$even = 0 === (b & 1))
                };
            return {
                restrict: "A",
                multiElement: !0,
                transclude: "element",
                priority: 1E3,
                terminal: !0,
                $$tlb: !0,
                compile: function(f, g) {
                    var h = g.ngRepeat,
                        k = d.$$createComment("end ngRepeat", h),
                        l = h.match(
                            /^\s*([\s\S]+?)\s+in\s+([\s\S]+?)(?:\s+as\s+([\s\S]+?))?(?:\s+track\s+by\s+([\s\S]+?))?\s*$/
                        );
                    if (!l) throw c("iexp", h);
                    var n = l[1],
                        m = l[2],
                        r = l[3],
                        s = l[4],
                        l = n.match(
                            /^(?:(\s*[\$\w]+)|\(\s*([\$\w]+)\s*,\s*([\$\w]+)\s*\))$/
                        );
                    if (!l) throw c("iidexp", n);
                    var v = l[3] || l[1],
                        w = l[2];
                    if (r && (!/^[$a-zA-Z_][$a-zA-Z0-9_]*$/.test(r) ||
                            /^(null|undefined|this|\$index|\$first|\$middle|\$last|\$even|\$odd|\$parent|\$root|\$id)$/
                            .test(r))) throw c("badident", r);
                    var p, y, t, z, u = {
                        $id: Fa
                    };
                    s ? p = a(s) : (t = function(a, b) {
                        return Fa(b)
                    }, z = function(a) {
                        return a
                    });
                    return function(a, d, f, g, l) {
                        p && (y = function(b, c, d) {
                            w && (u[w] = b);
                            u[v] = c;
                            u.$index = d;
                            return p(a, u)
                        });
                        var n = T();
                        a.$watchCollection(m, function(f) {
                            var g, m, p = d[0],
                                s, u = T(),
                                x, D, E, C, F, B, G;
                            r && (a[r] = f);
                            if (ya(f)) F = f, m = y ||
                                t;
                            else
                                for (G in m = y || z, F = [],
                                    f) ua.call(f, G) &&
                                    "$" !== G.charAt(0) &&
                                    F.push(G);
                            x = F.length;
                            G = Array(x);
                            for (g = 0; g < x; g++)
                                if (D = f === F ? g : F[
                                        g], E = f[D], C =
                                    m(D, E, g), n[C]) B =
                                    n[C], delete n[C],
                                    u[C] = B, G[g] = B;
                                else {
                                    if (u[C]) throw q(G,
                                        function(a) {
                                            a && a.scope &&
                                                (n[
                                                        a
                                                        .id
                                                    ] =
                                                    a
                                                )
                                        }), c(
                                        "dupes", h,
                                        C, E);
                                    G[g] = {
                                        id: C,
                                        scope: void 0,
                                        clone: void 0
                                    };
                                    u[C] = !0
                                }
                            for (s in n) {
                                B = n[s];
                                C = rb(B.clone);
                                b.leave(C);
                                if (C[0].parentNode)
                                    for (g = 0, m = C.length; g <
                                        m; g++) C[g].$$NG_REMOVED = !
                                        0;
                                B.scope.$destroy()
                            }
                            for (g = 0; g < x; g++)
                                if (D = f === F ? g : F[
                                        g], E = f[D], B =
                                    G[g], B.scope) {
                                    s = p;
                                    do s = s.nextSibling; while (
                                        s && s.$$NG_REMOVED
                                    );
                                    B.clone[0] != s &&
                                        b.move(rb(B.clone),
                                            null, p);
                                    p = B.clone[B.clone
                                        .length - 1
                                    ];
                                    e(B.scope, g, v, E,
                                        w, D, x)
                                } else l(function(a, c) {
                                    B.scope = c;
                                    var d = k.cloneNode(!
                                        1);
                                    a[a.length++] =
                                        d;
                                    b.enter(a,
                                        null,
                                        p);
                                    p = d;
                                    B.clone = a;
                                    u[B.id] = B;
                                    e(B.scope,
                                        g,
                                        v,
                                        E,
                                        w,
                                        D,
                                        x)
                                });
                            n = u
                        })
                    }
                }
            }
        }],
        Je = ["$animate", function(a) {
            return {
                restrict: "A",
                multiElement: !0,
                link: function(b, d, c) {
                    b.$watch(c.ngShow, function(b) {
                        a[b ? "removeClass" : "addClass"](d,
                            "ng-hide", {
                                tempClasses: "ng-hide-animate"
                            })
                    })
                }
            }
        }],
        Ce = ["$animate", function(a) {
            return {
                restrict: "A",
                multiElement: !0,
                link: function(b, d, c) {
                    b.$watch(c.ngHide, function(b) {
                        a[b ? "addClass" : "removeClass"](d,
                            "ng-hide", {
                                tempClasses: "ng-hide-animate"
                            })
                    })
                }
            }
        }],
        Ke = La(function(a, b, d) {
            a.$watch(d.ngStyle, function(a, d) {
                d && a !== d && q(d, function(a, c) {
                    b.css(c, "")
                });
                a && b.css(a)
            }, !0)
        }),
        Le = ["$animate", "$compile", function(a, b) {
            return {
                require: "ngSwitch",
                controller: ["$scope", function() {
                    this.cases = {}
                }],
                link: function(d, c, e, f) {
                    var g = [],
                        h = [],
                        k = [],
                        l = [],
                        n = function(a, b) {
                            return function() {
                                a.splice(b, 1)
                            }
                        };
                    d.$watch(e.ngSwitch || e.on, function(c) {
                        var d, e;
                        d = 0;
                        for (e = k.length; d < e; ++d) a.cancel(
                            k[d]);
                        d = k.length = 0;
                        for (e = l.length; d < e; ++d) {
                            var s = rb(h[d].clone);
                            l[d].$destroy();
                            (k[d] = a.leave(s)).then(n(k, d))
                        }
                        h.length = 0;
                        l.length = 0;
                        (g = f.cases["!" +
                            c] || f.cases["?"]) && q(g,
                            function(c) {
                                c.transclude(function(d,
                                    e) {
                                    l.push(e);
                                    var f = c.element;
                                    d[d.length++] =
                                        b.$$createComment(
                                            "end ngSwitchWhen"
                                        );
                                    h.push({
                                        clone: d
                                    });
                                    a.enter(d,
                                        f.parent(),
                                        f)
                                })
                            })
                    })
                }
            }
        }],
        Me = La({
            transclude: "element",
            priority: 1200,
            require: "^ngSwitch",
            multiElement: !0,
            link: function(a, b, d, c, e) {
                c.cases["!" + d.ngSwitchWhen] = c.cases["!" + d.ngSwitchWhen] || [];
                c.cases["!" + d.ngSwitchWhen].push({
                    transclude: e,
                    element: b
                })
            }
        }),
        Ne = La({
            transclude: "element",
            priority: 1200,
            require: "^ngSwitch",
            multiElement: !0,
            link: function(a, b, d, c, e) {
                c.cases["?"] = c.cases["?"] || [];
                c.cases["?"].push({
                    transclude: e,
                    element: b
                })
            }
        }),
        Qg = O("ngTransclude"),
        Pe = La({
            restrict: "EAC",
            link: function(a, b, d, c, e) {
                d.ngTransclude === d.$attr.ngTransclude && (d.ngTransclude =
                    "");
                if (!e) throw Qg("orphan", wa(b));
                e(function(a) {
                    a.length && (b.empty(), b.append(a))
                }, null, d.ngTransclude || d.ngTranscludeSlot)
            }
        }),
        pe = ["$templateCache", function(a) {
            return {
                restrict: "E",
                terminal: !0,
                compile: function(b, d) {
                    "text/ng-template" == d.type && a.put(d.id, b[0]
                        .text)
                }
            }
        }],
        Rg = {
            $setViewValue: C,
            $render: C
        },
        Sg = ["$element", "$scope", function(a, b) {
            var d = this,
                c = new Ra;
            d.ngModelCtrl = Rg;
            d.unknownOption = B(v.document.createElement("option"));
            d.renderUnknownOption = function(b) {
                b = "? " + Fa(b) + " ?";
                d.unknownOption.val(b);
                a.prepend(d.unknownOption);
                a.val(b)
            };
            b.$on("$destroy", function() {
                d.renderUnknownOption = C
            });
            d.removeUnknownOption = function() {
                d.unknownOption.parent() && d.unknownOption.remove()
            };
            d.readValue = function() {
                d.removeUnknownOption();
                return a.val()
            };
            d.writeValue = function(b) {
                d.hasOption(b) ? (d.removeUnknownOption(), a.val(b),
                    "" === b && d.emptyOption.prop("selected", !
                        0)) : null == b && d.emptyOption ? (d.removeUnknownOption(),
                    a.val("")) : d.renderUnknownOption(b)
            };
            d.addOption = function(a, b) {
                if (8 !== b[0].nodeType) {
                    Qa(a, '"option value"');
                    "" === a && (d.emptyOption = b);
                    var g = c.get(a) || 0;
                    c.put(a, g + 1);
                    d.ngModelCtrl.$render();
                    b[0].hasAttribute("selected") && (b[0].selected = !
                        0)
                }
            };
            d.removeOption = function(a) {
                var b = c.get(a);
                b && (1 === b ? (c.remove(a), "" === a && (d.emptyOption =
                    void 0)) : c.put(a, b - 1))
            };
            d.hasOption = function(a) {
                return !!c.get(a)
            };
            d.registerOption = function(a, b, c, h, k) {
                if (h) {
                    var l;
                    c.$observe("value", function(a) {
                        x(l) && d.removeOption(l);
                        l = a;
                        d.addOption(a, b)
                    })
                } else k ? a.$watch(k, function(a, e) {
                    c.$set("value", a);
                    e !== a && d.removeOption(e);
                    d.addOption(a, b)
                }) : d.addOption(c.value, b);
                b.on("$destroy", function() {
                    d.removeOption(c.value);
                    d.ngModelCtrl.$render()
                })
            }
        }],
        qe = function() {
            return {
                restrict: "E",
                require: ["select", "?ngModel"],
                controller: Sg,
                priority: 1,
                link: {
                    pre: function(a, b, d, c) {
                        var e = c[1];
                        if (e) {
                            var f = c[0];
                            f.ngModelCtrl = e;
                            b.on("change", function() {
                                a.$apply(function() {
                                    e.$setViewValue(f.readValue())
                                })
                            });
                            if (d.multiple) {
                                f.readValue = function() {
                                    var a = [];
                                    q(b.find("option"), function(b) {
                                        b.selected && a.push(
                                            b.value)
                                    });
                                    return a
                                };
                                f.writeValue = function(a) {
                                    var c = new Ra(a);
                                    q(b.find("option"), function(a) {
                                        a.selected = x(c.get(
                                            a.value
                                        ))
                                    })
                                };
                                var g, h = NaN;
                                a.$watch(function() {
                                    h !== e.$viewValue || pa(g,
                                        e.$viewValue) || (g =
                                        ha(e.$viewValue), e
                                        .$render());
                                    h = e.$viewValue
                                });
                                e.$isEmpty = function(a) {
                                    return !a || 0 === a.length
                                }
                            }
                        }
                    },
                    post: function(a, b, d, c) {
                        var e = c[1];
                        if (e) {
                            var f = c[0];
                            e.$render = function() {
                                f.writeValue(e.$viewValue)
                            }
                        }
                    }
                }
            }
        },
        se = ["$interpolate", function(a) {
            return {
                restrict: "E",
                priority: 100,
                compile: function(b, d) {
                    if (x(d.value)) var c = a(d.value, !0);
                    else {
                        var e = a(b.text(), !0);
                        e || d.$set("value", b.text())
                    }
                    return function(a, b, d) {
                        var k = b.parent();
                        (k = k.data("$selectController") || k.parent()
                            .data("$selectController")) && k.registerOption(
                            a, b, d, c, e)
                    }
                }
            }
        }],
        re = da({
            restrict: "E",
            terminal: !1
        }),
        Fc = function() {
            return {
                restrict: "A",
                require: "?ngModel",
                link: function(a, b, d, c) {
                    c && (d.required = !0, c.$validators.required =
                        function(a, b) {
                            return !d.required || !c.$isEmpty(b)
                        }, d.$observe("required", function() {
                            c.$validate()
                        }))
                }
            }
        },
        Ec = function() {
            return {
                restrict: "A",
                require: "?ngModel",
                link: function(a, b, d, c) {
                    if (c) {
                        var e, f = d.ngPattern || d.pattern;
                        d.$observe("pattern", function(a) {
                            F(a) && 0 < a.length && (a = new RegExp(
                                "^" + a + "$"));
                            if (a && !a.test) throw O(
                                "ngPattern")("noregexp", f,
                                a, wa(b));
                            e = a || void 0;
                            c.$validate()
                        });
                        c.$validators.pattern = function(a, b) {
                            return c.$isEmpty(b) || y(e) || e.test(
                                b)
                        }
                    }
                }
            }
        },
        Hc = function() {
            return {
                restrict: "A",
                require: "?ngModel",
                link: function(a, b, d, c) {
                    if (c) {
                        var e = -1;
                        d.$observe("maxlength", function(a) {
                            a = X(a);
                            e = isNaN(a) ? -1 : a;
                            c.$validate()
                        });
                        c.$validators.maxlength = function(a, b) {
                            return 0 > e || c.$isEmpty(b) || b.length <=
                                e
                        }
                    }
                }
            }
        },
        Gc = function() {
            return {
                restrict: "A",
                require: "?ngModel",
                link: function(a, b, d, c) {
                    if (c) {
                        var e = 0;
                        d.$observe("minlength", function(a) {
                            e = X(a) || 0;
                            c.$validate()
                        });
                        c.$validators.minlength = function(a, b) {
                            return c.$isEmpty(b) || b.length >= e
                        }
                    }
                }
            }
        };
    v.angular.bootstrap ? v.console && console.log(
        "WARNING: Tried to load angular more than once.") : (ie(), ke(
        ea), ea.module("ngLocale", [], ["$provide", function(a) {
        function b(a) {
            a += "";
            var b = a.indexOf(".");
            return -1 == b ? 0 : a.length - b - 1
        }
        a.value("$locale", {
            DATETIME_FORMATS: {
                AMPMS: ["AM", "PM"],
                DAY: "Sunday Monday Tuesday Wednesday Thursday Friday Saturday"
                    .split(" "),
                ERANAMES: ["Before Christ",
                    "Anno Domini"
                ],
                ERAS: ["BC", "AD"],
                FIRSTDAYOFWEEK: 6,
                MONTH: "January February March April May June July August September October November December"
                    .split(" "),
                SHORTDAY: "Sun Mon Tue Wed Thu Fri Sat"
                    .split(" "),
                SHORTMONTH: "Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec"
                    .split(" "),
                STANDALONEMONTH: "January February March April May June July August September October November December"
                    .split(" "),
                WEEKENDRANGE: [5, 6],
                fullDate: "EEEE, MMMM d, y",
                longDate: "MMMM d, y",
                medium: "MMM d, y h:mm:ss a",
                mediumDate: "MMM d, y",
                mediumTime: "h:mm:ss a",
                "short": "M/d/yy h:mm a",
                shortDate: "M/d/yy",
                shortTime: "h:mm a"
            },
            NUMBER_FORMATS: {
                CURRENCY_SYM: "$",
                DECIMAL_SEP: ".",
                GROUP_SEP: ",",
                PATTERNS: [{
                    gSize: 3,
                    lgSize: 3,
                    maxFrac: 3,
                    minFrac: 0,
                    minInt: 1,
                    negPre: "-",
                    negSuf: "",
                    posPre: "",
                    posSuf: ""
                }, {
                    gSize: 3,
                    lgSize: 3,
                    maxFrac: 2,
                    minFrac: 2,
                    minInt: 1,
                    negPre: "-\u00a4",
                    negSuf: "",
                    posPre: "\u00a4",
                    posSuf: ""
                }]
            },
            id: "en-us",
            localeID: "en_US",
            pluralCat: function(a, c) {
                var e = a | 0,
                    f = c;
                void 0 === f && (f = Math.min(b(
                    a), 3));
                Math.pow(10, f);
                return 1 == e && 0 == f ? "one" :
                    "other"
            }
        })
    }]), B(v.document).ready(function() {
        ee(v.document, yc)
    }))
})(window);
!window.angular.$$csp().noInlineStyle && window.angular.element(document.head).prepend(
    '<style type="text/css">@charset "UTF-8";[ng\\:cloak],[ng-cloak],[data-ng-cloak],[x-ng-cloak],.ng-cloak,.x-ng-cloak,.ng-hide:not(.ng-hide-animate){display:none !important;}ng\\:form{display:block;}.ng-animate-shim{visibility:hidden;}.ng-anchor{position:absolute;}</style>'
);;;;
angular.module("ui.bootstrap", ["ui.bootstrap.tpls", "ui.bootstrap.collapse",
        "ui.bootstrap.accordion", "ui.bootstrap.alert",
        "ui.bootstrap.buttons", "ui.bootstrap.carousel",
        "ui.bootstrap.dateparser", "ui.bootstrap.position",
        "ui.bootstrap.datepicker", "ui.bootstrap.dropdown",
        "ui.bootstrap.stackedMap", "ui.bootstrap.modal",
        "ui.bootstrap.pagination", "ui.bootstrap.tooltip",
        "ui.bootstrap.popover", "ui.bootstrap.progressbar",
        "ui.bootstrap.rating", "ui.bootstrap.tabs",
        "ui.bootstrap.timepicker", "ui.bootstrap.typeahead"
    ]), angular.module("ui.bootstrap.tpls", [
        "template/accordion/accordion-group.html",
        "template/accordion/accordion.html", "template/alert/alert.html",
        "template/carousel/carousel.html", "template/carousel/slide.html",
        "template/datepicker/datepicker.html",
        "template/datepicker/day.html", "template/datepicker/month.html",
        "template/datepicker/popup.html", "template/datepicker/year.html",
        "template/modal/backdrop.html", "template/modal/window.html",
        "template/pagination/pager.html",
        "template/pagination/pagination.html",
        "template/tooltip/tooltip-html-popup.html",
        "template/tooltip/tooltip-popup.html",
        "template/tooltip/tooltip-template-popup.html",
        "template/popover/popover-html.html",
        "template/popover/popover-template.html",
        "template/popover/popover.html", "template/progressbar/bar.html",
        "template/progressbar/progress.html",
        "template/progressbar/progressbar.html",
        "template/rating/rating.html", "template/tabs/tab.html",
        "template/tabs/tabset.html", "template/timepicker/timepicker.html",
        "template/typeahead/typeahead-match.html",
        "template/typeahead/typeahead-popup.html"
    ]), angular.module("ui.bootstrap.collapse", []).directive("uibCollapse", [
        "$animate", "$injector",
        function(a, b) {
            var c = b.has("$animateCss") ? b.get("$animateCss") : null;
            return {
                link: function(b, d, e) {
                    function f() {
                        d.removeClass("collapse").addClass("collapsing")
                            .attr("aria-expanded", !0).attr(
                                "aria-hidden", !1), c ? c(d, {
                                addClass: "in",
                                easing: "ease",
                                to: {
                                    height: d[0].scrollHeight +
                                        "px"
                                }
                            }).start()["finally"](g) : a.addClass(d,
                                "in", {
                                    to: {
                                        height: d[0].scrollHeight +
                                            "px"
                                    }
                                }).then(g)
                    }

                    function g() {
                        d.removeClass("collapsing").addClass("collapse")
                            .css({
                                height: "auto"
                            })
                    }

                    function h() {
                        return d.hasClass("collapse") || d.hasClass(
                            "in") ? (d.css({
                            height: d[0].scrollHeight +
                                "px"
                        }).removeClass("collapse").addClass(
                            "collapsing").attr("aria-expanded", !
                            1).attr("aria-hidden", !0), void(c ?
                            c(d, {
                                removeClass: "in",
                                to: {
                                    height: "0"
                                }
                            }).start()["finally"](i) : a.removeClass(
                                d, "in", {
                                    to: {
                                        height: "0"
                                    }
                                }).then(i))) : i()
                    }

                    function i() {
                        d.css({
                            height: "0"
                        }), d.removeClass("collapsing").addClass(
                            "collapse")
                    }
                    b.$watch(e.uibCollapse, function(a) {
                        a ? h() : f()
                    })
                }
            }
        }
    ]), angular.module("ui.bootstrap.collapse").value(
        "$collapseSuppressWarning", !1).directive("collapse", ["$animate",
        "$injector", "$log", "$collapseSuppressWarning",
        function(a, b, c, d) {
            var e = b.has("$animateCss") ? b.get("$animateCss") : null;
            return {
                link: function(b, f, g) {
                    function h() {
                        f.removeClass("collapse").addClass("collapsing")
                            .attr("aria-expanded", !0).attr(
                                "aria-hidden", !1), e ? e(f, {
                                easing: "ease",
                                to: {
                                    height: f[0].scrollHeight +
                                        "px"
                                }
                            }).start().done(i) : a.animate(f, {}, {
                                height: f[0].scrollHeight + "px"
                            }).then(i)
                    }

                    function i() {
                        f.removeClass("collapsing").addClass(
                            "collapse in").css({
                            height: "auto"
                        })
                    }

                    function j() {
                        return f.hasClass("collapse") || f.hasClass(
                            "in") ? (f.css({
                            height: f[0].scrollHeight +
                                "px"
                        }).removeClass("collapse in").addClass(
                            "collapsing").attr("aria-expanded", !
                            1).attr("aria-hidden", !0), void(e ?
                            e(f, {
                                to: {
                                    height: "0"
                                }
                            }).start().done(k) : a.animate(f, {}, {
                                height: "0"
                            }).then(k))) : k()
                    }

                    function k() {
                        f.css({
                            height: "0"
                        }), f.removeClass("collapsing").addClass(
                            "collapse")
                    }
                    d || c.warn(
                        "collapse is now deprecated. Use uib-collapse instead."
                    ), b.$watch(g.collapse, function(a) {
                        a ? j() : h()
                    })
                }
            }
        }
    ]), angular.module("ui.bootstrap.accordion", ["ui.bootstrap.collapse"]).constant(
        "uibAccordionConfig", {
            closeOthers: !0
        }).controller("UibAccordionController", ["$scope", "$attrs",
        "uibAccordionConfig",
        function(a, b, c) {
            this.groups = [], this.closeOthers = function(d) {
                var e = angular.isDefined(b.closeOthers) ? a.$eval(b.closeOthers) :
                    c.closeOthers;
                e && angular.forEach(this.groups, function(a) {
                    a !== d && (a.isOpen = !1)
                })
            }, this.addGroup = function(a) {
                var b = this;
                this.groups.push(a), a.$on("$destroy", function(c) {
                    b.removeGroup(a)
                })
            }, this.removeGroup = function(a) {
                var b = this.groups.indexOf(a); - 1 !== b && this.groups
                    .splice(b, 1)
            }
        }
    ]).directive("uibAccordion", function() {
        return {
            controller: "UibAccordionController",
            controllerAs: "accordion",
            transclude: !0,
            templateUrl: function(a, b) {
                return b.templateUrl ||
                    "template/accordion/accordion.html"
            }
        }
    }).directive("uibAccordionGroup", function() {
        return {
            require: "^uibAccordion",
            transclude: !0,
            replace: !0,
            templateUrl: function(a, b) {
                return b.templateUrl ||
                    "template/accordion/accordion-group.html"
            },
            scope: {
                heading: "@",
                isOpen: "=?",
                isDisabled: "=?"
            },
            controller: function() {
                this.setHeading = function(a) {
                    this.heading = a
                }
            },
            link: function(a, b, c, d) {
                d.addGroup(a), a.openClass = c.openClass ||
                    "panel-open", a.panelClass = c.panelClass, a.$watch(
                        "isOpen",
                        function(c) {
                            b.toggleClass(a.openClass, !!c), c && d.closeOthers(
                                a)
                        }), a.toggleOpen = function(b) {
                        a.isDisabled || b && 32 !== b.which || (a.isOpen = !
                            a.isOpen)
                    }
            }
        }
    }).directive("uibAccordionHeading", function() {
        return {
            transclude: !0,
            template: "",
            replace: !0,
            require: "^uibAccordionGroup",
            link: function(a, b, c, d, e) {
                d.setHeading(e(a, angular.noop))
            }
        }
    }).directive("uibAccordionTransclude", function() {
        return {
            require: ["?^uibAccordionGroup", "?^accordionGroup"],
            link: function(a, b, c, d) {
                d = d[0] ? d[0] : d[1], a.$watch(function() {
                    return d[c.uibAccordionTransclude]
                }, function(a) {
                    a && (b.find("span").html(""), b.find(
                        "span").append(a))
                })
            }
        }
    }), angular.module("ui.bootstrap.accordion").value(
        "$accordionSuppressWarning", !1).controller("AccordionController", [
        "$scope", "$attrs", "$controller", "$log",
        "$accordionSuppressWarning",
        function(a, b, c, d, e) {
            e || d.warn(
                "AccordionController is now deprecated. Use UibAccordionController instead."
            ), angular.extend(this, c("UibAccordionController", {
                $scope: a,
                $attrs: b
            }))
        }
    ]).directive("accordion", ["$log", "$accordionSuppressWarning", function(a,
        b) {
        return {
            restrict: "EA",
            controller: "AccordionController",
            controllerAs: "accordion",
            transclude: !0,
            replace: !1,
            templateUrl: function(a, b) {
                return b.templateUrl ||
                    "template/accordion/accordion.html"
            },
            link: function() {
                b || a.warn(
                    "accordion is now deprecated. Use uib-accordion instead."
                )
            }
        }
    }]).directive("accordionGroup", ["$log", "$accordionSuppressWarning",
        function(a, b) {
            return {
                require: "^accordion",
                restrict: "EA",
                transclude: !0,
                replace: !0,
                templateUrl: function(a, b) {
                    return b.templateUrl ||
                        "template/accordion/accordion-group.html"
                },
                scope: {
                    heading: "@",
                    isOpen: "=?",
                    isDisabled: "=?"
                },
                controller: function() {
                    this.setHeading = function(a) {
                        this.heading = a
                    }
                },
                link: function(c, d, e, f) {
                    b || a.warn(
                            "accordion-group is now deprecated. Use uib-accordion-group instead."
                        ), f.addGroup(c), c.openClass = e.openClass ||
                        "panel-open", c.panelClass = e.panelClass, c.$watch(
                            "isOpen",
                            function(a) {
                                d.toggleClass(c.openClass, !!a), a && f
                                    .closeOthers(c)
                            }), c.toggleOpen = function(a) {
                            c.isDisabled || a && 32 !== a.which || (c.isOpen = !
                                c.isOpen)
                        }
                }
            }
        }
    ]).directive("accordionHeading", ["$log", "$accordionSuppressWarning",
        function(a, b) {
            return {
                restrict: "EA",
                transclude: !0,
                template: "",
                replace: !0,
                require: "^accordionGroup",
                link: function(c, d, e, f, g) {
                    b || a.warn(
                        "accordion-heading is now deprecated. Use uib-accordion-heading instead."
                    ), f.setHeading(g(c, angular.noop))
                }
            }
        }
    ]).directive("accordionTransclude", ["$log", "$accordionSuppressWarning",
        function(a, b) {
            return {
                require: "^accordionGroup",
                link: function(c, d, e, f) {
                    b || a.warn(
                        "accordion-transclude is now deprecated. Use uib-accordion-transclude instead."
                    ), c.$watch(function() {
                        return f[e.accordionTransclude]
                    }, function(a) {
                        a && (d.find("span").html(""), d.find(
                            "span").append(a))
                    })
                }
            }
        }
    ]), angular.module("ui.bootstrap.alert", []).controller(
        "UibAlertController", ["$scope", "$attrs", "$interpolate", "$timeout",
            function(a, b, c, d) {
                a.closeable = !!b.close;
                var e = angular.isDefined(b.dismissOnTimeout) ? c(b.dismissOnTimeout)
                    (a.$parent) : null;
                e && d(function() {
                    a.close()
                }, parseInt(e, 10))
            }
        ]).directive("uibAlert", function() {
        return {
            controller: "UibAlertController",
            controllerAs: "alert",
            templateUrl: function(a, b) {
                return b.templateUrl || "template/alert/alert.html"
            },
            transclude: !0,
            replace: !0,
            scope: {
                type: "@",
                close: "&"
            }
        }
    }), angular.module("ui.bootstrap.alert").value("$alertSuppressWarning", !1)
    .controller("AlertController", ["$scope", "$attrs", "$controller", "$log",
        "$alertSuppressWarning",
        function(a, b, c, d, e) {
            e || d.warn(
                "AlertController is now deprecated. Use UibAlertController instead."
            ), angular.extend(this, c("UibAlertController", {
                $scope: a,
                $attrs: b
            }))
        }
    ]).directive("alert", ["$log", "$alertSuppressWarning", function(a, b) {
        return {
            controller: "AlertController",
            controllerAs: "alert",
            templateUrl: function(a, b) {
                return b.templateUrl || "template/alert/alert.html"
            },
            transclude: !0,
            replace: !0,
            scope: {
                type: "@",
                close: "&"
            },
            link: function() {
                b || a.warn(
                    "alert is now deprecated. Use uib-alert instead."
                )
            }
        }
    }]), angular.module("ui.bootstrap.buttons", []).constant("uibButtonConfig", {
        activeClass: "active",
        toggleEvent: "click"
    }).controller("UibButtonsController", ["uibButtonConfig", function(a) {
        this.activeClass = a.activeClass || "active", this.toggleEvent =
            a.toggleEvent || "click"
    }]).directive("uibBtnRadio", function() {
        return {
            require: ["uibBtnRadio", "ngModel"],
            controller: "UibButtonsController",
            controllerAs: "buttons",
            link: function(a, b, c, d) {
                var e = d[0],
                    f = d[1];
                b.find("input").css({
                    display: "none"
                }), f.$render = function() {
                    b.toggleClass(e.activeClass, angular.equals(f.$modelValue,
                        a.$eval(c.uibBtnRadio)))
                }, b.on(e.toggleEvent, function() {
                    if (!c.disabled) {
                        var d = b.hasClass(e.activeClass);
                        (!d || angular.isDefined(c.uncheckable)) &&
                        a.$apply(function() {
                            f.$setViewValue(d ? null :
                                a.$eval(c.uibBtnRadio)
                            ), f.$render()
                        })
                    }
                })
            }
        }
    }).directive("uibBtnCheckbox", function() {
        return {
            require: ["uibBtnCheckbox", "ngModel"],
            controller: "UibButtonsController",
            controllerAs: "button",
            link: function(a, b, c, d) {
                function e() {
                    return g(c.btnCheckboxTrue, !0)
                }

                function f() {
                    return g(c.btnCheckboxFalse, !1)
                }

                function g(b, c) {
                    return angular.isDefined(b) ? a.$eval(b) : c
                }
                var h = d[0],
                    i = d[1];
                b.find("input").css({
                    display: "none"
                }), i.$render = function() {
                    b.toggleClass(h.activeClass, angular.equals(i.$modelValue,
                        e()))
                }, b.on(h.toggleEvent, function() {
                    c.disabled || a.$apply(function() {
                        i.$setViewValue(b.hasClass(h.activeClass) ?
                            f() : e()), i.$render()
                    })
                })
            }
        }
    }), angular.module("ui.bootstrap.buttons").value("$buttonsSuppressWarning", !
        1).controller("ButtonsController", ["$controller", "$log",
        "$buttonsSuppressWarning",
        function(a, b, c) {
            c || b.warn(
                "ButtonsController is now deprecated. Use UibButtonsController instead."
            ), angular.extend(this, a("UibButtonsController"))
        }
    ]).directive("btnRadio", ["$log", "$buttonsSuppressWarning", function(a, b) {
        return {
            require: ["btnRadio", "ngModel"],
            controller: "ButtonsController",
            controllerAs: "buttons",
            link: function(c, d, e, f) {
                b || a.warn(
                    "btn-radio is now deprecated. Use uib-btn-radio instead."
                );
                var g = f[0],
                    h = f[1];
                d.find("input").css({
                    display: "none"
                }), h.$render = function() {
                    d.toggleClass(g.activeClass, angular.equals(
                        h.$modelValue, c.$eval(e.btnRadio)
                    ))
                }, d.bind(g.toggleEvent, function() {
                    if (!e.disabled) {
                        var a = d.hasClass(g.activeClass);
                        (!a || angular.isDefined(e.uncheckable)) &&
                        c.$apply(function() {
                            h.$setViewValue(a ?
                                null : c.$eval(
                                    e.btnRadio)
                            ), h.$render()
                        })
                    }
                })
            }
        }
    }]).directive("btnCheckbox", ["$document", "$log",
        "$buttonsSuppressWarning",
        function(a, b, c) {
            return {
                require: ["btnCheckbox", "ngModel"],
                controller: "ButtonsController",
                controllerAs: "button",
                link: function(d, e, f, g) {
                    function h() {
                        return j(f.btnCheckboxTrue, !0)
                    }

                    function i() {
                        return j(f.btnCheckboxFalse, !1)
                    }

                    function j(a, b) {
                        var c = d.$eval(a);
                        return angular.isDefined(c) ? c : b
                    }
                    c || b.warn(
                        "btn-checkbox is now deprecated. Use uib-btn-checkbox instead."
                    );
                    var k = g[0],
                        l = g[1];
                    e.find("input").css({
                        display: "none"
                    }), l.$render = function() {
                        e.toggleClass(k.activeClass, angular.equals(
                            l.$modelValue, h()))
                    }, e.bind(k.toggleEvent, function() {
                        f.disabled || d.$apply(function() {
                            l.$setViewValue(e.hasClass(
                                    k.activeClass) ?
                                i() : h()), l.$render()
                        })
                    }), e.on("keypress", function(b) {
                        f.disabled || 32 !== b.which || a[0].activeElement !==
                            e[0] || d.$apply(function() {
                                l.$setViewValue(e.hasClass(
                                        k.activeClass) ?
                                    i() : h()), l.$render()
                            })
                    })
                }
            }
        }
    ]), angular.module("ui.bootstrap.carousel", []).controller(
        "UibCarouselController", ["$scope", "$element", "$interval", "$animate",
            function(a, b, c, d) {
                function e(b, c, e) {
                    s || (angular.extend(b, {
                            direction: e,
                            active: !0
                        }), angular.extend(m.currentSlide || {}, {
                            direction: e,
                            active: !1
                        }), d.enabled() && !a.noTransition && !a.$currentTransition &&
                        b.$element && m.slides.length > 1 && (b.$element.data(
                                q, b.direction), m.currentSlide && m.currentSlide
                            .$element && m.currentSlide.$element.data(q, b.direction),
                            a.$currentTransition = !0, o ? d.on("addClass",
                                b.$element,
                                function(b, c) {
                                    "close" === c && (a.$currentTransition =
                                        null, d.off("addClass", b))
                                }) : b.$element.one("$animate:close",
                                function() {
                                    a.$currentTransition = null
                                })), m.currentSlide = b, r = c, g())
                }

                function f(a) {
                    if (angular.isUndefined(n[a].index)) return n[a];
                    var b;
                    n.length;
                    for (b = 0; b < n.length; ++b)
                        if (n[b].index == a) return n[b]
                }

                function g() {
                    h();
                    var b = +a.interval;
                    !isNaN(b) && b > 0 && (k = c(i, b))
                }

                function h() {
                    k && (c.cancel(k), k = null)
                }

                function i() {
                    var b = +a.interval;
                    l && !isNaN(b) && b > 0 && n.length ? a.next() : a.pause()
                }

                function j(b) {
                    b.length || (a.$currentTransition = null)
                }
                var k, l, m = this,
                    n = m.slides = a.slides = [],
                    o = angular.version.minor >= 4,
                    p = "uib-noTransition",
                    q = "uib-slideDirection",
                    r = -1;
                m.currentSlide = null;
                var s = !1;
                m.select = a.select = function(b, c) {
                        var d = a.indexOfSlide(b);
                        void 0 === c && (c = d > m.getCurrentIndex() ? "next" :
                                "prev"), b && b !== m.currentSlide && !a.$currentTransition &&
                            e(b, d, c)
                    }, a.$on("$destroy", function() {
                        s = !0
                    }), m.getCurrentIndex = function() {
                        return m.currentSlide && angular.isDefined(m.currentSlide
                            .index) ? +m.currentSlide.index : r
                    }, a.indexOfSlide = function(a) {
                        return angular.isDefined(a.index) ? +a.index : n.indexOf(
                            a)
                    }, a.next = function() {
                        var b = (m.getCurrentIndex() + 1) % n.length;
                        return 0 === b && a.noWrap() ? void a.pause() : m.select(
                            f(b), "next")
                    }, a.prev = function() {
                        var b = m.getCurrentIndex() - 1 < 0 ? n.length - 1 : m.getCurrentIndex() -
                            1;
                        return a.noWrap() && b === n.length - 1 ? void a.pause() :
                            m.select(f(b), "prev")
                    }, a.isActive = function(a) {
                        return m.currentSlide === a
                    }, a.$watch("interval", g), a.$watchCollection("slides", j),
                    a.$on("$destroy", h), a.play = function() {
                        l || (l = !0, g())
                    }, a.pause = function() {
                        a.noPause || (l = !1, h())
                    }, m.addSlide = function(b, c) {
                        b.$element = c, n.push(b), 1 === n.length || b.active ?
                            (m.select(n[n.length - 1]), 1 === n.length && a.play()) :
                            b.active = !1
                    }, m.removeSlide = function(a) {
                        angular.isDefined(a.index) && n.sort(function(a, b) {
                            return +a.index > +b.index
                        });
                        var b = n.indexOf(a);
                        n.splice(b, 1), n.length > 0 && a.active ? b >= n.length ?
                            m.select(n[b - 1]) : m.select(n[b]) : r > b && r--,
                            0 === n.length && (m.currentSlide = null)
                    }, a.$watch("noTransition", function(a) {
                        b.data(p, a)
                    })
            }
        ]).directive("uibCarousel", [function() {
        return {
            transclude: !0,
            replace: !0,
            controller: "UibCarouselController",
            controllerAs: "carousel",
            require: "carousel",
            templateUrl: function(a, b) {
                return b.templateUrl ||
                    "template/carousel/carousel.html"
            },
            scope: {
                interval: "=",
                noTransition: "=",
                noPause: "=",
                noWrap: "&"
            }
        }
    }]).directive("uibSlide", function() {
        return {
            require: "^uibCarousel",
            restrict: "EA",
            transclude: !0,
            replace: !0,
            templateUrl: function(a, b) {
                return b.templateUrl || "template/carousel/slide.html"
            },
            scope: {
                active: "=?",
                actual: "=?",
                index: "=?"
            },
            link: function(a, b, c, d) {
                d.addSlide(a, b), a.$on("$destroy", function() {
                    d.removeSlide(a)
                }), a.$watch("active", function(b) {
                    b && d.select(a)
                })
            }
        }
    }).animation(".item", ["$injector", "$animate", function(a, b) {
        function c(a, b, c) {
            a.removeClass(b), c && c()
        }
        var d = "uib-noTransition",
            e = "uib-slideDirection",
            f = null;
        return a.has("$animateCss") && (f = a.get("$animateCss")), {
            beforeAddClass: function(a, g, h) {
                if ("active" == g && a.parent() && a.parent().parent() &&
                    !a.parent().parent().data(d)) {
                    var i = !1,
                        j = a.data(e),
                        k = "next" == j ? "left" : "right",
                        l = c.bind(this, a, k + " " + j, h);
                    return a.addClass(j), f ? f(a, {
                            addClass: k
                        }).start().done(l) : b.addClass(a, k).then(
                            function() {
                                i || l(), h()
                            }),
                        function() {
                            i = !0
                        }
                }
                h()
            },
            beforeRemoveClass: function(a, g, h) {
                if ("active" === g && a.parent() && a.parent().parent() &&
                    !a.parent().parent().data(d)) {
                    var i = !1,
                        j = a.data(e),
                        k = "next" == j ? "left" : "right",
                        l = c.bind(this, a, k, h);
                    return f ? f(a, {
                            addClass: k
                        }).start().done(l) : b.addClass(a, k).then(
                            function() {
                                i || l(), h()
                            }),
                        function() {
                            i = !0
                        }
                }
                h()
            }
        }
    }]), angular.module("ui.bootstrap.carousel").value(
        "$carouselSuppressWarning", !1).controller("CarouselController", [
        "$scope", "$element", "$controller", "$log",
        "$carouselSuppressWarning",
        function(a, b, c, d, e) {
            e || d.warn(
                "CarouselController is now deprecated. Use UibCarouselController instead."
            ), angular.extend(this, c("UibCarouselController", {
                $scope: a,
                $element: b
            }))
        }
    ]).directive("carousel", ["$log", "$carouselSuppressWarning", function(a, b) {
        return {
            transclude: !0,
            replace: !0,
            controller: "CarouselController",
            controllerAs: "carousel",
            require: "carousel",
            templateUrl: function(a, b) {
                return b.templateUrl ||
                    "template/carousel/carousel.html"
            },
            scope: {
                interval: "=",
                noTransition: "=",
                noPause: "=",
                noWrap: "&"
            },
            link: function() {
                b || a.warn(
                    "carousel is now deprecated. Use uib-carousel instead."
                )
            }
        }
    }]).directive("slide", ["$log", "$carouselSuppressWarning", function(a, b) {
        return {
            require: "^carousel",
            transclude: !0,
            replace: !0,
            templateUrl: function(a, b) {
                return b.templateUrl ||
                    "template/carousel/slide.html"
            },
            scope: {
                active: "=?",
                actual: "=?",
                index: "=?"
            },
            link: function(c, d, e, f) {
                b || a.warn(
                    "slide is now deprecated. Use uib-slide instead."
                ), f.addSlide(c, d), c.$on("$destroy", function() {
                    f.removeSlide(c)
                }), c.$watch("active", function(a) {
                    a && f.select(c)
                })
            }
        }
    }]), angular.module("ui.bootstrap.dateparser", []).service("uibDateParser", [
        "$log", "$locale", "orderByFilter",
        function(a, b, c) {
            function d(a) {
                var b = [],
                    d = a.split("");
                return angular.forEach(g, function(c, e) {
                    var f = a.indexOf(e);
                    if (f > -1) {
                        a = a.split(""), d[f] = "(" + c.regex + ")",
                            a[f] = "$";
                        for (var g = f + 1, h = f + e.length; h > g; g++)
                            d[g] = "", a[g] = "$";
                        a = a.join(""), b.push({
                            index: f,
                            apply: c.apply
                        })
                    }
                }), {
                    regex: new RegExp("^" + d.join("") + "$"),
                    map: c(b, "index")
                }
            }

            function e(a, b, c) {
                return 1 > c ? !1 : 1 === b && c > 28 ? 29 === c && (a % 4 ===
                        0 && a % 100 !== 0 || a % 400 === 0) : 3 === b || 5 ===
                    b || 8 === b || 10 === b ? 31 > c : !0
            }
            var f, g, h = /[\\\^\$\*\+\?\|\[\]\(\)\.\{\}]/g;
            this.init = function() {
                f = b.id, this.parsers = {}, g = {
                    yyyy: {
                        regex: "\\d{4}",
                        apply: function(a) {
                            this.year = +a
                        }
                    },
                    yy: {
                        regex: "\\d{2}",
                        apply: function(a) {
                            this.year = +a + 2e3
                        }
                    },
                    y: {
                        regex: "\\d{1,4}",
                        apply: function(a) {
                            this.year = +a
                        }
                    },
                    MMMM: {
                        regex: b.DATETIME_FORMATS.MONTH.join("|"),
                        apply: function(a) {
                            this.month = b.DATETIME_FORMATS.MONTH
                                .indexOf(a)
                        }
                    },
                    MMM: {
                        regex: b.DATETIME_FORMATS.SHORTMONTH.join(
                            "|"),
                        apply: function(a) {
                            this.month = b.DATETIME_FORMATS.SHORTMONTH
                                .indexOf(a)
                        }
                    },
                    MM: {
                        regex: "0[1-9]|1[0-2]",
                        apply: function(a) {
                            this.month = a - 1
                        }
                    },
                    M: {
                        regex: "[1-9]|1[0-2]",
                        apply: function(a) {
                            this.month = a - 1
                        }
                    },
                    dd: {
                        regex: "[0-2][0-9]{1}|3[0-1]{1}",
                        apply: function(a) {
                            this.date = +a
                        }
                    },
                    d: {
                        regex: "[1-2]?[0-9]{1}|3[0-1]{1}",
                        apply: function(a) {
                            this.date = +a
                        }
                    },
                    EEEE: {
                        regex: b.DATETIME_FORMATS.DAY.join("|")
                    },
                    EEE: {
                        regex: b.DATETIME_FORMATS.SHORTDAY.join("|")
                    },
                    HH: {
                        regex: "(?:0|1)[0-9]|2[0-3]",
                        apply: function(a) {
                            this.hours = +a
                        }
                    },
                    hh: {
                        regex: "0[0-9]|1[0-2]",
                        apply: function(a) {
                            this.hours = +a
                        }
                    },
                    H: {
                        regex: "1?[0-9]|2[0-3]",
                        apply: function(a) {
                            this.hours = +a
                        }
                    },
                    h: {
                        regex: "[0-9]|1[0-2]",
                        apply: function(a) {
                            this.hours = +a
                        }
                    },
                    mm: {
                        regex: "[0-5][0-9]",
                        apply: function(a) {
                            this.minutes = +a
                        }
                    },
                    m: {
                        regex: "[0-9]|[1-5][0-9]",
                        apply: function(a) {
                            this.minutes = +a
                        }
                    },
                    sss: {
                        regex: "[0-9][0-9][0-9]",
                        apply: function(a) {
                            this.milliseconds = +a
                        }
                    },
                    ss: {
                        regex: "[0-5][0-9]",
                        apply: function(a) {
                            this.seconds = +a
                        }
                    },
                    s: {
                        regex: "[0-9]|[1-5][0-9]",
                        apply: function(a) {
                            this.seconds = +a
                        }
                    },
                    a: {
                        regex: b.DATETIME_FORMATS.AMPMS.join("|"),
                        apply: function(a) {
                            12 === this.hours && (this.hours =
                                0), "PM" === a && (this.hours +=
                                12)
                        }
                    }
                }
            }, this.init(), this.parse = function(c, g, i) {
                if (!angular.isString(c) || !g) return c;
                g = b.DATETIME_FORMATS[g] || g, g = g.replace(h, "\\$&"),
                    b.id !== f && this.init(), this.parsers[g] || (this
                        .parsers[g] = d(g));
                var j = this.parsers[g],
                    k = j.regex,
                    l = j.map,
                    m = c.match(k);
                if (m && m.length) {
                    var n, o;
                    angular.isDate(i) && !isNaN(i.getTime()) ? n = {
                        year: i.getFullYear(),
                        month: i.getMonth(),
                        date: i.getDate(),
                        hours: i.getHours(),
                        minutes: i.getMinutes(),
                        seconds: i.getSeconds(),
                        milliseconds: i.getMilliseconds()
                    } : (i && a.warn("dateparser:",
                        "baseDate is not a valid date"), n = {
                        year: 1900,
                        month: 0,
                        date: 1,
                        hours: 0,
                        minutes: 0,
                        seconds: 0,
                        milliseconds: 0
                    });
                    for (var p = 1, q = m.length; q > p; p++) {
                        var r = l[p - 1];
                        r.apply && r.apply.call(n, m[p])
                    }
                    return e(n.year, n.month, n.date) && (angular.isDate(
                        i) && !isNaN(i.getTime()) ? (o = new Date(
                        i), o.setFullYear(n.year, n.month,
                        n.date, n.hours, n.minutes, n.seconds,
                        n.milliseconds || 0)) : o = new Date(n.year,
                        n.month, n.date, n.hours, n.minutes, n.seconds,
                        n.milliseconds || 0)), o
                }
            }
        }
    ]), angular.module("ui.bootstrap.dateparser").value(
        "$dateParserSuppressWarning", !1).service("dateParser", ["$log",
        "$dateParserSuppressWarning", "uibDateParser",
        function(a, b, c) {
            b || a.warn(
                "dateParser is now deprecated. Use uibDateParser instead."
            ), angular.extend(this, c)
        }
    ]), angular.module("ui.bootstrap.position", []).factory("$uibPosition", [
        "$document", "$window",
        function(a, b) {
            function c(a, c) {
                return a.currentStyle ? a.currentStyle[c] : b.getComputedStyle ?
                    b.getComputedStyle(a)[c] : a.style[c]
            }

            function d(a) {
                return "static" === (c(a, "position") || "static")
            }
            var e = function(b) {
                for (var c = a[0], e = b.offsetParent || c; e && e !==
                    c && d(e);) e = e.offsetParent;
                return e || c
            };
            return {
                position: function(b) {
                    var c = this.offset(b),
                        d = {
                            top: 0,
                            left: 0
                        },
                        f = e(b[0]);
                    f != a[0] && (d = this.offset(angular.element(f)),
                        d.top += f.clientTop - f.scrollTop, d.left +=
                        f.clientLeft - f.scrollLeft);
                    var g = b[0].getBoundingClientRect();
                    return {
                        width: g.width || b.prop("offsetWidth"),
                        height: g.height || b.prop("offsetHeight"),
                        top: c.top - d.top,
                        left: c.left - d.left
                    }
                },
                offset: function(c) {
                    var d = c[0].getBoundingClientRect();
                    return {
                        width: d.width || c.prop("offsetWidth"),
                        height: d.height || c.prop("offsetHeight"),
                        top: d.top + (b.pageYOffset || a[0].documentElement
                            .scrollTop),
                        left: d.left + (b.pageXOffset || a[0].documentElement
                            .scrollLeft)
                    }
                },
                positionElements: function(a, b, c, d) {
                    var e, f, g, h, i = c.split("-"),
                        j = i[0],
                        k = i[1] || "center";
                    e = d ? this.offset(a) : this.position(a), f = b.prop(
                        "offsetWidth"), g = b.prop("offsetHeight");
                    var l = {
                            center: function() {
                                return e.left + e.width / 2 - f / 2
                            },
                            left: function() {
                                return e.left
                            },
                            right: function() {
                                return e.left + e.width
                            }
                        },
                        m = {
                            center: function() {
                                return e.top + e.height / 2 - g / 2
                            },
                            top: function() {
                                return e.top
                            },
                            bottom: function() {
                                return e.top + e.height
                            }
                        };
                    switch (j) {
                        case "right":
                            h = {
                                top: m[k](),
                                left: l[j]()
                            };
                            break;
                        case "left":
                            h = {
                                top: m[k](),
                                left: e.left - f
                            };
                            break;
                        case "bottom":
                            h = {
                                top: m[j](),
                                left: l[k]()
                            };
                            break;
                        default:
                            h = {
                                top: e.top - g,
                                left: l[k]()
                            }
                    }
                    return h
                }
            }
        }
    ]), angular.module("ui.bootstrap.position").value(
        "$positionSuppressWarning", !1).service("$position", ["$log",
        "$positionSuppressWarning", "$uibPosition",
        function(a, b, c) {
            b || a.warn(
                "$position is now deprecated. Use $uibPosition instead."
            ), angular.extend(this, c)
        }
    ]), angular.module("ui.bootstrap.datepicker", ["ui.bootstrap.dateparser",
        "ui.bootstrap.position"
    ]).value("$datepickerSuppressError", !1).constant("uibDatepickerConfig", {
        formatDay: "dd",
        formatMonth: "MMMM",
        formatYear: "yyyy",
        formatDayHeader: "EEE",
        formatDayTitle: "MMMM yyyy",
        formatMonthTitle: "yyyy",
        datepickerMode: "day",
        minMode: "day",
        maxMode: "year",
        showWeeks: !0,
        startingDay: 0,
        yearRange: 20,
        minDate: null,
        maxDate: null,
        shortcutPropagation: !1
    }).controller("UibDatepickerController", ["$scope", "$attrs", "$parse",
        "$interpolate", "$log", "dateFilter", "uibDatepickerConfig",
        "$datepickerSuppressError",
        function(a, b, c, d, e, f, g, h) {
            var i = this,
                j = {
                    $setViewValue: angular.noop
                };
            this.modes = ["day", "month", "year"], angular.forEach([
                    "formatDay", "formatMonth", "formatYear",
                    "formatDayHeader", "formatDayTitle",
                    "formatMonthTitle", "showWeeks", "startingDay",
                    "yearRange", "shortcutPropagation"
                ], function(c, e) {
                    i[c] = angular.isDefined(b[c]) ? 6 > e ? d(b[c])(a.$parent) :
                        a.$parent.$eval(b[c]) : g[c]
                }), angular.forEach(["minDate", "maxDate"], function(d) {
                    b[d] ? a.$parent.$watch(c(b[d]), function(a) {
                        i[d] = a ? new Date(a) : null, i.refreshView()
                    }) : i[d] = g[d] ? new Date(g[d]) : null
                }), angular.forEach(["minMode", "maxMode"], function(d) {
                    b[d] ? a.$parent.$watch(c(b[d]), function(c) {
                        i[d] = angular.isDefined(c) ? c : b[d],
                            a[d] = i[d], ("minMode" == d && i.modes
                                .indexOf(a.datepickerMode) < i.modes
                                .indexOf(i[d]) || "maxMode" ==
                                d && i.modes.indexOf(a.datepickerMode) >
                                i.modes.indexOf(i[d])) && (a.datepickerMode =
                                i[d])
                    }) : (i[d] = g[d] || null, a[d] = i[d])
                }), a.datepickerMode = a.datepickerMode || g.datepickerMode,
                a.uniqueId = "datepicker-" + a.$id + "-" + Math.floor(1e4 *
                    Math.random()), angular.isDefined(b.initDate) ? (this.activeDate =
                    a.$parent.$eval(b.initDate) || new Date, a.$parent.$watch(
                        b.initDate,
                        function(a) {
                            a && (j.$isEmpty(j.$modelValue) || j.$invalid) &&
                                (i.activeDate = a, i.refreshView())
                        })) : this.activeDate = new Date, a.isActive =
                function(b) {
                    return 0 === i.compare(b.date, i.activeDate) ? (a.activeDateId =
                        b.uid, !0) : !1
                }, this.init = function(a) {
                    j = a, j.$render = function() {
                        i.render()
                    }
                }, this.render = function() {
                    if (j.$viewValue) {
                        var a = new Date(j.$viewValue),
                            b = !isNaN(a);
                        b ? this.activeDate = a : h || e.error(
                            'Datepicker directive: "ng-model" value must be a Date object, a number of milliseconds since 01.01.1970 or a string representing an RFC2822 or ISO 8601 date.'
                        )
                    }
                    this.refreshView()
                }, this.refreshView = function() {
                    if (this.element) {
                        this._refreshView();
                        var a = j.$viewValue ? new Date(j.$viewValue) :
                            null;
                        j.$setValidity("dateDisabled", !a || this.element &&
                            !this.isDisabled(a))
                    }
                }, this.createDateObject = function(a, b) {
                    var c = j.$viewValue ? new Date(j.$viewValue) : null;
                    return {
                        date: a,
                        label: f(a, b),
                        selected: c && 0 === this.compare(a, c),
                        disabled: this.isDisabled(a),
                        current: 0 === this.compare(a, new Date),
                        customClass: this.customClass(a)
                    }
                }, this.isDisabled = function(c) {
                    return this.minDate && this.compare(c, this.minDate) <
                        0 || this.maxDate && this.compare(c, this.maxDate) >
                        0 || b.dateDisabled && a.dateDisabled({
                            date: c,
                            mode: a.datepickerMode
                        })
                }, this.customClass = function(b) {
                    return a.customClass({
                        date: b,
                        mode: a.datepickerMode
                    })
                }, this.split = function(a, b) {
                    for (var c = []; a.length > 0;) c.push(a.splice(0, b));
                    return c
                }, a.select = function(b) {
                    if (a.datepickerMode === i.minMode) {
                        var c = j.$viewValue ? new Date(j.$viewValue) : new Date(
                            0, 0, 0, 0, 0, 0, 0);
                        c.setFullYear(b.getFullYear(), b.getMonth(), b.getDate()),
                            j.$setViewValue(c), j.$render()
                    } else i.activeDate = b, a.datepickerMode = i.modes[i.modes
                        .indexOf(a.datepickerMode) - 1]
                }, a.move = function(a) {
                    var b = i.activeDate.getFullYear() + a * (i.step.years ||
                            0),
                        c = i.activeDate.getMonth() + a * (i.step.months ||
                            0);
                    i.activeDate.setFullYear(b, c, 1), i.refreshView()
                }, a.toggleMode = function(b) {
                    b = b || 1, a.datepickerMode === i.maxMode && 1 === b ||
                        a.datepickerMode === i.minMode && -1 === b || (a.datepickerMode =
                            i.modes[i.modes.indexOf(a.datepickerMode) + b])
                }, a.keys = {
                    13: "enter",
                    32: "space",
                    33: "pageup",
                    34: "pagedown",
                    35: "end",
                    36: "home",
                    37: "left",
                    38: "up",
                    39: "right",
                    40: "down"
                };
            var k = function() {
                i.element[0].focus()
            };
            a.$on("uib:datepicker.focus", k), a.keydown = function(b) {
                var c = a.keys[b.which];
                if (c && !b.shiftKey && !b.altKey)
                    if (b.preventDefault(), i.shortcutPropagation || b.stopPropagation(),
                        "enter" === c || "space" === c) {
                        if (i.isDisabled(i.activeDate)) return;
                        a.select(i.activeDate)
                    } else !b.ctrlKey || "up" !== c && "down" !== c ? (
                            i.handleKeyDown(c, b), i.refreshView()) : a
                        .toggleMode("up" === c ? 1 : -1)
            }
        }
    ]).controller("UibDaypickerController", ["$scope", "$element", "dateFilter",
        function(a, b, c) {
            function d(a, b) {
                return 1 !== b || a % 4 !== 0 || a % 100 === 0 && a % 400 !==
                    0 ? f[b] : 29
            }

            function e(a) {
                var b = new Date(a);
                b.setDate(b.getDate() + 4 - (b.getDay() || 7));
                var c = b.getTime();
                return b.setMonth(0), b.setDate(1), Math.floor(Math.round((
                    c - b) / 864e5) / 7) + 1
            }
            var f = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
            this.step = {
                months: 1
            }, this.element = b, this.init = function(b) {
                angular.extend(b, this), a.showWeeks = b.showWeeks, b.refreshView()
            }, this.getDates = function(a, b) {
                for (var c, d = new Array(b), e = new Date(a), f = 0; b >
                    f;) c = new Date(e), d[f++] = c, e.setDate(e.getDate() +
                    1);
                return d
            }, this._refreshView = function() {
                var b = this.activeDate.getFullYear(),
                    d = this.activeDate.getMonth(),
                    f = new Date(this.activeDate);
                f.setFullYear(b, d, 1);
                var g = this.startingDay - f.getDay(),
                    h = g > 0 ? 7 - g : -g,
                    i = new Date(f);
                h > 0 && i.setDate(-h + 1);
                for (var j = this.getDates(i, 42), k = 0; 42 > k; k++) j[
                    k] = angular.extend(this.createDateObject(j[k],
                    this.formatDay), {
                    secondary: j[k].getMonth() !== d,
                    uid: a.uniqueId + "-" + k
                });
                a.labels = new Array(7);
                for (var l = 0; 7 > l; l++) a.labels[l] = {
                    abbr: c(j[l].date, this.formatDayHeader),
                    full: c(j[l].date, "EEEE")
                };
                if (a.title = c(this.activeDate, this.formatDayTitle),
                    a.rows = this.split(j, 7), a.showWeeks) {
                    a.weekNumbers = [];
                    for (var m = (11 - this.startingDay) % 7, n = a.rows
                            .length, o = 0; n > o; o++) a.weekNumbers.push(
                        e(a.rows[o][m].date))
                }
            }, this.compare = function(a, b) {
                return new Date(a.getFullYear(), a.getMonth(), a.getDate()) -
                    new Date(b.getFullYear(), b.getMonth(), b.getDate())
            }, this.handleKeyDown = function(a, b) {
                var c = this.activeDate.getDate();
                if ("left" === a) c -= 1;
                else if ("up" === a) c -= 7;
                else if ("right" === a) c += 1;
                else if ("down" === a) c += 7;
                else if ("pageup" === a || "pagedown" === a) {
                    var e = this.activeDate.getMonth() + ("pageup" ===
                        a ? -1 : 1);
                    this.activeDate.setMonth(e, 1), c = Math.min(d(this
                        .activeDate.getFullYear(), this.activeDate
                        .getMonth()), c)
                } else "home" === a ? c = 1 : "end" === a && (c = d(
                    this.activeDate.getFullYear(), this.activeDate
                    .getMonth()));
                this.activeDate.setDate(c)
            }
        }
    ]).controller("UibMonthpickerController", ["$scope", "$element",
        "dateFilter",
        function(a, b, c) {
            this.step = {
                years: 1
            }, this.element = b, this.init = function(a) {
                angular.extend(a, this), a.refreshView()
            }, this._refreshView = function() {
                for (var b, d = new Array(12), e = this.activeDate.getFullYear(),
                        f = 0; 12 > f; f++) b = new Date(this.activeDate),
                    b.setFullYear(e, f, 1), d[f] = angular.extend(this.createDateObject(
                        b, this.formatMonth), {
                        uid: a.uniqueId + "-" + f
                    });
                a.title = c(this.activeDate, this.formatMonthTitle), a.rows =
                    this.split(d, 3)
            }, this.compare = function(a, b) {
                return new Date(a.getFullYear(), a.getMonth()) - new Date(
                    b.getFullYear(), b.getMonth())
            }, this.handleKeyDown = function(a, b) {
                var c = this.activeDate.getMonth();
                if ("left" === a) c -= 1;
                else if ("up" === a) c -= 3;
                else if ("right" === a) c += 1;
                else if ("down" === a) c += 3;
                else if ("pageup" === a || "pagedown" === a) {
                    var d = this.activeDate.getFullYear() + ("pageup" ===
                        a ? -1 : 1);
                    this.activeDate.setFullYear(d)
                } else "home" === a ? c = 0 : "end" === a && (c = 11);
                this.activeDate.setMonth(c)
            }
        }
    ]).controller("UibYearpickerController", ["$scope", "$element",
        "dateFilter",
        function(a, b, c) {
            function d(a) {
                return parseInt((a - 1) / e, 10) * e + 1
            }
            var e;
            this.element = b, this.yearpickerInit = function() {
                e = this.yearRange, this.step = {
                    years: e
                }
            }, this._refreshView = function() {
                for (var b, c = new Array(e), f = 0, g = d(this.activeDate
                        .getFullYear()); e > f; f++) b = new Date(this.activeDate),
                    b.setFullYear(g + f, 0, 1), c[f] = angular.extend(
                        this.createDateObject(b, this.formatYear), {
                            uid: a.uniqueId + "-" + f
                        });
                a.title = [c[0].label, c[e - 1].label].join(" - "), a.rows =
                    this.split(c, 5)
            }, this.compare = function(a, b) {
                return a.getFullYear() - b.getFullYear()
            }, this.handleKeyDown = function(a, b) {
                var c = this.activeDate.getFullYear();
                "left" === a ? c -= 1 : "up" === a ? c -= 5 : "right" ===
                    a ? c += 1 : "down" === a ? c += 5 : "pageup" === a ||
                    "pagedown" === a ? c += ("pageup" === a ? -1 : 1) *
                    this.step.years : "home" === a ? c = d(this.activeDate
                        .getFullYear()) : "end" === a && (c = d(this.activeDate
                        .getFullYear()) + e - 1), this.activeDate.setFullYear(
                        c)
            }
        }
    ]).directive("uibDatepicker", function() {
        return {
            replace: !0,
            templateUrl: function(a, b) {
                return b.templateUrl ||
                    "template/datepicker/datepicker.html"
            },
            scope: {
                datepickerMode: "=?",
                dateDisabled: "&",
                customClass: "&",
                shortcutPropagation: "&?"
            },
            require: ["uibDatepicker", "^ngModel"],
            controller: "UibDatepickerController",
            controllerAs: "datepicker",
            link: function(a, b, c, d) {
                var e = d[0],
                    f = d[1];
                e.init(f)
            }
        }
    }).directive("uibDaypicker", function() {
        return {
            replace: !0,
            templateUrl: function(a, b) {
                return b.templateUrl || "template/datepicker/day.html"
            },
            require: ["^?uibDatepicker", "uibDaypicker", "^?datepicker"],
            controller: "UibDaypickerController",
            link: function(a, b, c, d) {
                var e = d[0] || d[2],
                    f = d[1];
                f.init(e)
            }
        }
    }).directive("uibMonthpicker", function() {
        return {
            replace: !0,
            templateUrl: function(a, b) {
                return b.templateUrl ||
                    "template/datepicker/month.html"
            },
            require: ["^?uibDatepicker", "uibMonthpicker", "^?datepicker"],
            controller: "UibMonthpickerController",
            link: function(a, b, c, d) {
                var e = d[0] || d[2],
                    f = d[1];
                f.init(e)
            }
        }
    }).directive("uibYearpicker", function() {
        return {
            replace: !0,
            templateUrl: function(a, b) {
                return b.templateUrl || "template/datepicker/year.html"
            },
            require: ["^?uibDatepicker", "uibYearpicker", "^?datepicker"],
            controller: "UibYearpickerController",
            link: function(a, b, c, d) {
                var e = d[0] || d[2];
                angular.extend(e, d[1]), e.yearpickerInit(), e.refreshView()
            }
        }
    }).constant("uibDatepickerPopupConfig", {
        datepickerPopup: "yyyy-MM-dd",
        datepickerPopupTemplateUrl: "template/datepicker/popup.html",
        datepickerTemplateUrl: "template/datepicker/datepicker.html",
        html5Types: {
            date: "yyyy-MM-dd",
            "datetime-local": "yyyy-MM-ddTHH:mm:ss.sss",
            month: "yyyy-MM"
        },
        currentText: "Today",
        clearText: "Clear",
        closeText: "Done",
        closeOnDateSelection: !0,
        appendToBody: !1,
        showButtonBar: !0,
        onOpenFocus: !0
    }).controller("UibDatepickerPopupController", ["$scope", "$element",
        "$attrs", "$compile", "$parse", "$document", "$rootScope",
        "$uibPosition", "dateFilter", "uibDateParser",
        "uibDatepickerPopupConfig", "$timeout",
        function(a, b, c, d, e, f, g, h, i, j, k, l) {
            function m(a) {
                return a.replace(/([A-Z])/g, function(a) {
                    return "-" + a.toLowerCase()
                })
            }

            function n(b) {
                if (angular.isNumber(b) && (b = new Date(b)), b) {
                    if (angular.isDate(b) && !isNaN(b)) return b;
                    if (angular.isString(b)) {
                        var c = j.parse(b, r, a.date);
                        return isNaN(c) ? void 0 : c
                    }
                    return void 0
                }
                return null
            }

            function o(a, b) {
                var d = a || b;
                if (!c.ngRequired && !d) return !0;
                if (angular.isNumber(d) && (d = new Date(d)), d) {
                    if (angular.isDate(d) && !isNaN(d)) return !0;
                    if (angular.isString(d)) {
                        var e = j.parse(d, r);
                        return !isNaN(e)
                    }
                    return !1
                }
                return !0
            }

            function p(c) {
                var d = A[0],
                    e = b[0].contains(c.target),
                    f = void 0 !== d.contains && d.contains(c.target);
                !a.isOpen || e || f || a.$apply(function() {
                    a.isOpen = !1
                })
            }

            function q(c) {
                27 === c.which && a.isOpen ? (c.preventDefault(), c.stopPropagation(),
                    a.$apply(function() {
                        a.isOpen = !1
                    }), b[0].focus()) : 40 !== c.which || a.isOpen || (
                    c.preventDefault(), c.stopPropagation(), a.$apply(
                        function() {
                            a.isOpen = !0
                        }))
            }
            var r, s, t, u, v, w, x, y, z, A, B = {},
                C = !1;
            a.watchData = {}, this.init = function(h) {
                if (z = h, s = angular.isDefined(c.closeOnDateSelection) ?
                    a.$parent.$eval(c.closeOnDateSelection) : k.closeOnDateSelection,
                    t = angular.isDefined(c.datepickerAppendToBody) ? a
                    .$parent.$eval(c.datepickerAppendToBody) : k.appendToBody,
                    u = angular.isDefined(c.onOpenFocus) ? a.$parent.$eval(
                        c.onOpenFocus) : k.onOpenFocus, v = angular.isDefined(
                        c.datepickerPopupTemplateUrl) ? c.datepickerPopupTemplateUrl :
                    k.datepickerPopupTemplateUrl, w = angular.isDefined(
                        c.datepickerTemplateUrl) ? c.datepickerTemplateUrl :
                    k.datepickerTemplateUrl, a.showButtonBar = angular.isDefined(
                        c.showButtonBar) ? a.$parent.$eval(c.showButtonBar) :
                    k.showButtonBar, k.html5Types[c.type] ? (r = k.html5Types[
                        c.type], C = !0) : (r = c.datepickerPopup || c.uibDatepickerPopup ||
                        k.datepickerPopup, c.$observe(
                            "uibDatepickerPopup",
                            function(a, b) {
                                var c = a || k.datepickerPopup;
                                if (c !== r && (r = c, z.$modelValue =
                                        null, !r)) throw new Error(
                                    "uibDatepickerPopup must have a date format specified."
                                )
                            })), !r) throw new Error(
                    "uibDatepickerPopup must have a date format specified."
                );
                if (C && c.datepickerPopup) throw new Error(
                    "HTML5 date input types do not support custom formats."
                );
                if (x = angular.element(
                        "<div uib-datepicker-popup-wrap><div uib-datepicker></div></div>"
                    ), x.attr({
                        "ng-model": "date",
                        "ng-change": "dateSelection(date)",
                        "template-url": v
                    }), y = angular.element(x.children()[0]), y.attr(
                        "template-url", w), C && "month" === c.type &&
                    (y.attr("datepicker-mode", '"month"'), y.attr(
                        "min-mode", "month")), c.datepickerOptions) {
                    var l = a.$parent.$eval(c.datepickerOptions);
                    l && l.initDate && (a.initDate = l.initDate, y.attr(
                            "init-date", "initDate"), delete l.initDate),
                        angular.forEach(l, function(a, b) {
                            y.attr(m(b), a)
                        })
                }
                angular.forEach(["minMode", "maxMode", "minDate",
                        "maxDate", "datepickerMode", "initDate",
                        "shortcutPropagation"
                    ], function(b) {
                        if (c[b]) {
                            var d = e(c[b]);
                            if (a.$parent.$watch(d, function(c) {
                                    a.watchData[b] = c, (
                                            "minDate" === b ||
                                            "maxDate" === b) &&
                                        (B[b] = new Date(c))
                                }), y.attr(m(b), "watchData." + b),
                                "datepickerMode" === b) {
                                var f = d.assign;
                                a.$watch("watchData." + b, function(
                                    b, c) {
                                    angular.isFunction(f) &&
                                        b !== c && f(a.$parent,
                                            b)
                                })
                            }
                        }
                    }), c.dateDisabled && y.attr("date-disabled",
                        "dateDisabled({ date: date, mode: mode })"), c.showWeeks &&
                    y.attr("show-weeks", c.showWeeks), c.customClass &&
                    y.attr("custom-class",
                        "customClass({ date: date, mode: mode })"), C ?
                    z.$formatters.push(function(b) {
                        return a.date = b, b
                    }) : (z.$$parserName = "date", z.$validators.date =
                        o, z.$parsers.unshift(n), z.$formatters.push(
                            function(b) {
                                return a.date = b, z.$isEmpty(b) ? b :
                                    i(b, r)
                            })), z.$viewChangeListeners.push(function() {
                        a.date = j.parse(z.$viewValue, r, a.date)
                    }), b.bind("keydown", q), A = d(x)(a), x.remove(),
                    t ? f.find("body").append(A) : b.after(A), a.$on(
                        "$destroy",
                        function() {
                            a.isOpen === !0 && (g.$$phase || a.$apply(
                                function() {
                                    a.isOpen = !1
                                })), A.remove(), b.unbind("keydown",
                                q), f.unbind("click", p)
                        })
            }, a.getText = function(b) {
                return a[b + "Text"] || k[b + "Text"]
            }, a.isDisabled = function(b) {
                return "today" === b && (b = new Date), a.watchData.minDate &&
                    a.compare(b, B.minDate) < 0 || a.watchData.maxDate &&
                    a.compare(b, B.maxDate) > 0
            }, a.compare = function(a, b) {
                return new Date(a.getFullYear(), a.getMonth(), a.getDate()) -
                    new Date(b.getFullYear(), b.getMonth(), b.getDate())
            }, a.dateSelection = function(c) {
                angular.isDefined(c) && (a.date = c);
                var d = a.date ? i(a.date, r) : null;
                b.val(d), z.$setViewValue(d), s && (a.isOpen = !1, b[0]
                    .focus())
            }, a.keydown = function(c) {
                27 === c.which && (a.isOpen = !1, b[0].focus())
            }, a.select = function(b) {
                if ("today" === b) {
                    var c = new Date;
                    angular.isDate(a.date) ? (b = new Date(a.date), b.setFullYear(
                        c.getFullYear(), c.getMonth(), c.getDate()
                    )) : b = new Date(c.setHours(0, 0, 0, 0))
                }
                a.dateSelection(b)
            }, a.close = function() {
                a.isOpen = !1, b[0].focus()
            }, a.$watch("isOpen", function(c) {
                c ? (a.position = t ? h.offset(b) : h.position(b),
                    a.position.top = a.position.top + b.prop(
                        "offsetHeight"), l(function() {
                        u && a.$broadcast(
                            "uib:datepicker.focus"), f.bind(
                            "click", p)
                    }, 0, !1)) : f.unbind("click", p)
            })
        }
    ]).directive("uibDatepickerPopup", function() {
        return {
            require: ["ngModel", "uibDatepickerPopup"],
            controller: "UibDatepickerPopupController",
            scope: {
                isOpen: "=?",
                currentText: "@",
                clearText: "@",
                closeText: "@",
                dateDisabled: "&",
                customClass: "&"
            },
            link: function(a, b, c, d) {
                var e = d[0],
                    f = d[1];
                f.init(e)
            }
        }
    }).directive("uibDatepickerPopupWrap", function() {
        return {
            replace: !0,
            transclude: !0,
            templateUrl: function(a, b) {
                return b.templateUrl ||
                    "template/datepicker/popup.html"
            }
        }
    }), angular.module("ui.bootstrap.datepicker").value(
        "$datepickerSuppressWarning", !1).controller("DatepickerController", [
        "$scope", "$attrs", "$parse", "$interpolate", "$log", "dateFilter",
        "uibDatepickerConfig", "$datepickerSuppressError",
        "$datepickerSuppressWarning",
        function(a, b, c, d, e, f, g, h, i) {
            i || e.warn(
                "DatepickerController is now deprecated. Use UibDatepickerController instead."
            );
            var j = this,
                k = {
                    $setViewValue: angular.noop
                };
            this.modes = ["day", "month", "year"], angular.forEach([
                    "formatDay", "formatMonth", "formatYear",
                    "formatDayHeader", "formatDayTitle",
                    "formatMonthTitle", "showWeeks", "startingDay",
                    "yearRange", "shortcutPropagation"
                ], function(c, e) {
                    j[c] = angular.isDefined(b[c]) ? 6 > e ? d(b[c])(a.$parent) :
                        a.$parent.$eval(b[c]) : g[c]
                }), angular.forEach(["minDate", "maxDate"], function(d) {
                    b[d] ? a.$parent.$watch(c(b[d]), function(a) {
                        j[d] = a ? new Date(a) : null, j.refreshView()
                    }) : j[d] = g[d] ? new Date(g[d]) : null
                }), angular.forEach(["minMode", "maxMode"], function(d) {
                    b[d] ? a.$parent.$watch(c(b[d]), function(c) {
                        j[d] = angular.isDefined(c) ? c : b[d],
                            a[d] = j[d], ("minMode" == d && j.modes
                                .indexOf(a.datepickerMode) < j.modes
                                .indexOf(j[d]) || "maxMode" ==
                                d && j.modes.indexOf(a.datepickerMode) >
                                j.modes.indexOf(j[d])) && (a.datepickerMode =
                                j[d])
                    }) : (j[d] = g[d] || null, a[d] = j[d])
                }), a.datepickerMode = a.datepickerMode || g.datepickerMode,
                a.uniqueId = "datepicker-" + a.$id + "-" + Math.floor(1e4 *
                    Math.random()), angular.isDefined(b.initDate) ? (this.activeDate =
                    a.$parent.$eval(b.initDate) || new Date, a.$parent.$watch(
                        b.initDate,
                        function(a) {
                            a && (k.$isEmpty(k.$modelValue) || k.$invalid) &&
                                (j.activeDate = a, j.refreshView())
                        })) : this.activeDate = new Date, a.isActive =
                function(b) {
                    return 0 === j.compare(b.date, j.activeDate) ? (a.activeDateId =
                        b.uid, !0) : !1
                }, this.init = function(a) {
                    k = a, k.$render = function() {
                        j.render()
                    }
                }, this.render = function() {
                    if (k.$viewValue) {
                        var a = new Date(k.$viewValue),
                            b = !isNaN(a);
                        b ? this.activeDate = a : h || e.error(
                            'Datepicker directive: "ng-model" value must be a Date object, a number of milliseconds since 01.01.1970 or a string representing an RFC2822 or ISO 8601 date.'
                        )
                    }
                    this.refreshView()
                }, this.refreshView = function() {
                    if (this.element) {
                        this._refreshView();
                        var a = k.$viewValue ? new Date(k.$viewValue) :
                            null;
                        k.$setValidity("dateDisabled", !a || this.element &&
                            !this.isDisabled(a))
                    }
                }, this.createDateObject = function(a, b) {
                    var c = k.$viewValue ? new Date(k.$viewValue) : null;
                    return {
                        date: a,
                        label: f(a, b),
                        selected: c && 0 === this.compare(a, c),
                        disabled: this.isDisabled(a),
                        current: 0 === this.compare(a, new Date),
                        customClass: this.customClass(a)
                    }
                }, this.isDisabled = function(c) {
                    return this.minDate && this.compare(c, this.minDate) <
                        0 || this.maxDate && this.compare(c, this.maxDate) >
                        0 || b.dateDisabled && a.dateDisabled({
                            date: c,
                            mode: a.datepickerMode
                        })
                }, this.customClass = function(b) {
                    return a.customClass({
                        date: b,
                        mode: a.datepickerMode
                    })
                }, this.split = function(a, b) {
                    for (var c = []; a.length > 0;) c.push(a.splice(0, b));
                    return c
                }, this.fixTimeZone = function(a) {
                    var b = a.getHours();
                    a.setHours(23 === b ? b + 2 : 0)
                }, a.select = function(b) {
                    if (a.datepickerMode === j.minMode) {
                        var c = k.$viewValue ? new Date(k.$viewValue) : new Date(
                            0, 0, 0, 0, 0, 0, 0);
                        c.setFullYear(b.getFullYear(), b.getMonth(), b.getDate()),
                            k.$setViewValue(c), k.$render()
                    } else j.activeDate = b, a.datepickerMode = j.modes[j.modes
                        .indexOf(a.datepickerMode) - 1]
                }, a.move = function(a) {
                    var b = j.activeDate.getFullYear() + a * (j.step.years ||
                            0),
                        c = j.activeDate.getMonth() + a * (j.step.months ||
                            0);
                    j.activeDate.setFullYear(b, c, 1), j.refreshView()
                }, a.toggleMode = function(b) {
                    b = b || 1, a.datepickerMode === j.maxMode && 1 === b ||
                        a.datepickerMode === j.minMode && -1 === b || (a.datepickerMode =
                            j.modes[j.modes.indexOf(a.datepickerMode) + b])
                }, a.keys = {
                    13: "enter",
                    32: "space",
                    33: "pageup",
                    34: "pagedown",
                    35: "end",
                    36: "home",
                    37: "left",
                    38: "up",
                    39: "right",
                    40: "down"
                };
            var l = function() {
                j.element[0].focus()
            };
            a.$on("uib:datepicker.focus", l), a.keydown = function(b) {
                var c = a.keys[b.which];
                if (c && !b.shiftKey && !b.altKey)
                    if (b.preventDefault(), j.shortcutPropagation || b.stopPropagation(),
                        "enter" === c || "space" === c) {
                        if (j.isDisabled(j.activeDate)) return;
                        a.select(j.activeDate)
                    } else !b.ctrlKey || "up" !== c && "down" !== c ? (
                            j.handleKeyDown(c, b), j.refreshView()) : a
                        .toggleMode("up" === c ? 1 : -1)
            }
        }
    ]).directive("datepicker", ["$log", "$datepickerSuppressWarning", function(
        a, b) {
        return {
            replace: !0,
            templateUrl: function(a, b) {
                return b.templateUrl ||
                    "template/datepicker/datepicker.html"
            },
            scope: {
                datepickerMode: "=?",
                dateDisabled: "&",
                customClass: "&",
                shortcutPropagation: "&?"
            },
            require: ["datepicker", "^ngModel"],
            controller: "DatepickerController",
            controllerAs: "datepicker",
            link: function(c, d, e, f) {
                b || a.warn(
                    "datepicker is now deprecated. Use uib-datepicker instead."
                );
                var g = f[0],
                    h = f[1];
                g.init(h)
            }
        }
    }]).directive("daypicker", ["$log", "$datepickerSuppressWarning", function(
        a, b) {
        return {
            replace: !0,
            templateUrl: "template/datepicker/day.html",
            require: ["^datepicker", "daypicker"],
            controller: "UibDaypickerController",
            link: function(c, d, e, f) {
                b || a.warn(
                    "daypicker is now deprecated. Use uib-daypicker instead."
                );
                var g = f[0],
                    h = f[1];
                h.init(g)
            }
        }
    }]).directive("monthpicker", ["$log", "$datepickerSuppressWarning",
        function(a, b) {
            return {
                replace: !0,
                templateUrl: "template/datepicker/month.html",
                require: ["^datepicker", "monthpicker"],
                controller: "UibMonthpickerController",
                link: function(c, d, e, f) {
                    b || a.warn(
                        "monthpicker is now deprecated. Use uib-monthpicker instead."
                    );
                    var g = f[0],
                        h = f[1];
                    h.init(g)
                }
            }
        }
    ]).directive("yearpicker", ["$log", "$datepickerSuppressWarning", function(
        a, b) {
        return {
            replace: !0,
            templateUrl: "template/datepicker/year.html",
            require: ["^datepicker", "yearpicker"],
            controller: "UibYearpickerController",
            link: function(c, d, e, f) {
                b || a.warn(
                    "yearpicker is now deprecated. Use uib-yearpicker instead."
                );
                var g = f[0];
                angular.extend(g, f[1]), g.yearpickerInit(), g.refreshView()
            }
        }
    }]).directive("datepickerPopup", ["$log", "$datepickerSuppressWarning",
        function(a, b) {
            return {
                require: ["ngModel", "datepickerPopup"],
                controller: "UibDatepickerPopupController",
                scope: {
                    isOpen: "=?",
                    currentText: "@",
                    clearText: "@",
                    closeText: "@",
                    dateDisabled: "&",
                    customClass: "&"
                },
                link: function(c, d, e, f) {
                    b || a.warn(
                        "datepicker-popup is now deprecated. Use uib-datepicker-popup instead."
                    );
                    var g = f[0],
                        h = f[1];
                    h.init(g)
                }
            }
        }
    ]).directive("datepickerPopupWrap", ["$log", "$datepickerSuppressWarning",
        function(a, b) {
            return {
                replace: !0,
                transclude: !0,
                templateUrl: function(a, b) {
                    return b.templateUrl ||
                        "template/datepicker/popup.html"
                },
                link: function() {
                    b || a.warn(
                        "datepicker-popup-wrap is now deprecated. Use uib-datepicker-popup-wrap instead."
                    )
                }
            }
        }
    ]), angular.module("ui.bootstrap.dropdown", ["ui.bootstrap.position"]).constant(
        "uibDropdownConfig", {
            openClass: "open"
        }).service("uibDropdownService", ["$document", "$rootScope", function(a,
        b) {
        var c = null;
        this.open = function(b) {
            c || (a.bind("click", d), a.bind("keydown", e)), c && c !==
                b && (c.isOpen = !1), c = b
        }, this.close = function(b) {
            c === b && (c = null, a.unbind("click", d), a.unbind(
                "keydown", e))
        };
        var d = function(a) {
                if (c && (!a || "disabled" !== c.getAutoClose())) {
                    var d = c.getToggleElement();
                    if (!(a && d && d[0].contains(a.target))) {
                        var e = c.getDropdownElement();
                        a && "outsideClick" === c.getAutoClose() && e &&
                            e[0].contains(a.target) || (c.isOpen = !1,
                                b.$$phase || c.$apply())
                    }
                }
            },
            e = function(a) {
                27 === a.which ? (c.focusToggleElement(), d()) : c.isKeynavEnabled() &&
                    /(38|40)/.test(a.which) && c.isOpen && (a.preventDefault(),
                        a.stopPropagation(), c.focusDropdownEntry(a.which)
                    )
            }
    }]).controller("UibDropdownController", ["$scope", "$element", "$attrs",
        "$parse", "uibDropdownConfig", "uibDropdownService", "$animate",
        "$uibPosition", "$document", "$compile", "$templateRequest",
        function(a, b, c, d, e, f, g, h, i, j, k) {
            var l, m, n = this,
                o = a.$new(),
                p = e.openClass,
                q = angular.noop,
                r = c.onToggle ? d(c.onToggle) : angular.noop,
                s = !1,
                t = !1;
            b.addClass("dropdown"), this.init = function() {
                c.isOpen && (m = d(c.isOpen), q = m.assign, a.$watch(m,
                        function(a) {
                            o.isOpen = !!a
                        })), s = angular.isDefined(c.dropdownAppendToBody),
                    t = angular.isDefined(c.uibKeyboardNav), s && n.dropdownMenu &&
                    (i.find("body").append(n.dropdownMenu), b.on(
                        "$destroy",
                        function() {
                            n.dropdownMenu.remove()
                        }))
            }, this.toggle = function(a) {
                return o.isOpen = arguments.length ? !!a : !o.isOpen
            }, this.isOpen = function() {
                return o.isOpen
            }, o.getToggleElement = function() {
                return n.toggleElement
            }, o.getAutoClose = function() {
                return c.autoClose || "always"
            }, o.getElement = function() {
                return b
            }, o.isKeynavEnabled = function() {
                return t
            }, o.focusDropdownEntry = function(a) {
                var c = n.dropdownMenu ? angular.element(n.dropdownMenu)
                    .find("a") : angular.element(b).find("ul").eq(0).find(
                        "a");
                switch (a) {
                    case 40:
                        angular.isNumber(n.selectedOption) ? n.selectedOption =
                            n.selectedOption === c.length - 1 ? n.selectedOption :
                            n.selectedOption + 1 : n.selectedOption = 0;
                        break;
                    case 38:
                        angular.isNumber(n.selectedOption) ? n.selectedOption =
                            0 === n.selectedOption ? 0 : n.selectedOption -
                            1 : n.selectedOption = c.length - 1
                }
                c[n.selectedOption].focus()
            }, o.getDropdownElement = function() {
                return n.dropdownMenu
            }, o.focusToggleElement = function() {
                n.toggleElement && n.toggleElement[0].focus()
            }, o.$watch("isOpen", function(c, d) {
                if (s && n.dropdownMenu) {
                    var e = h.positionElements(b, n.dropdownMenu,
                            "bottom-left", !0),
                        i = {
                            top: e.top + "px",
                            display: c ? "block" : "none"
                        },
                        m = n.dropdownMenu.hasClass(
                            "dropdown-menu-right");
                    m ? (i.left = "auto", i.right = window.innerWidth -
                        (e.left + b.prop("offsetWidth")) + "px"
                    ) : (i.left = e.left + "px", i.right =
                        "auto"), n.dropdownMenu.css(i)
                }
                if (g[c ? "addClass" : "removeClass"](b, p).then(
                        function() {
                            angular.isDefined(c) && c !== d && r(a, {
                                open: !!c
                            })
                        }), c) n.dropdownMenuTemplateUrl && k(n.dropdownMenuTemplateUrl)
                    .then(function(a) {
                        l = o.$new(), j(a.trim())(l, function(a) {
                            var b = a;
                            n.dropdownMenu.replaceWith(
                                    b), n.dropdownMenu =
                                b
                        })
                    }), o.focusToggleElement(), f.open(o);
                else {
                    if (n.dropdownMenuTemplateUrl) {
                        l && l.$destroy();
                        var t = angular.element(
                            '<ul class="dropdown-menu"></ul>');
                        n.dropdownMenu.replaceWith(t), n.dropdownMenu =
                            t
                    }
                    f.close(o), n.selectedOption = null
                }
                angular.isFunction(q) && q(a, c)
            }), a.$on("$locationChangeSuccess", function() {
                "disabled" !== o.getAutoClose() && (o.isOpen = !1)
            });
            var u = a.$on("$destroy", function() {
                o.$destroy()
            });
            o.$on("$destroy", u)
        }
    ]).directive("uibDropdown", function() {
        return {
            controller: "UibDropdownController",
            link: function(a, b, c, d) {
                d.init()
            }
        }
    }).directive("uibDropdownMenu", function() {
        return {
            restrict: "AC",
            require: "?^uibDropdown",
            link: function(a, b, c, d) {
                if (d && !angular.isDefined(c.dropdownNested)) {
                    b.addClass("dropdown-menu");
                    var e = c.templateUrl;
                    e && (d.dropdownMenuTemplateUrl = e), d.dropdownMenu ||
                        (d.dropdownMenu = b)
                }
            }
        }
    }).directive("uibKeyboardNav", function() {
        return {
            restrict: "A",
            require: "?^uibDropdown",
            link: function(a, b, c, d) {
                b.bind("keydown", function(a) {
                    if (-1 !== [38, 40].indexOf(a.which)) {
                        a.preventDefault(), a.stopPropagation();
                        var b = d.dropdownMenu.find("a");
                        switch (a.which) {
                            case 40:
                                angular.isNumber(d.selectedOption) ?
                                    d.selectedOption = d.selectedOption ===
                                    b.length - 1 ? d.selectedOption :
                                    d.selectedOption + 1 : d.selectedOption =
                                    0;
                                break;
                            case 38:
                                angular.isNumber(d.selectedOption) ?
                                    d.selectedOption = 0 === d.selectedOption ?
                                    0 : d.selectedOption - 1 :
                                    d.selectedOption = b.length -
                                    1
                        }
                        b[d.selectedOption].focus()
                    }
                })
            }
        }
    }).directive("uibDropdownToggle", function() {
        return {
            require: "?^uibDropdown",
            link: function(a, b, c, d) {
                if (d) {
                    b.addClass("dropdown-toggle"), d.toggleElement = b;
                    var e = function(e) {
                        e.preventDefault(), b.hasClass("disabled") ||
                            c.disabled || a.$apply(function() {
                                d.toggle()
                            })
                    };
                    b.bind("click", e), b.attr({
                        "aria-haspopup": !0,
                        "aria-expanded": !1
                    }), a.$watch(d.isOpen, function(a) {
                        b.attr("aria-expanded", !!a)
                    }), a.$on("$destroy", function() {
                        b.unbind("click", e)
                    })
                }
            }
        }
    }), angular.module("ui.bootstrap.dropdown").value(
        "$dropdownSuppressWarning", !1).service("dropdownService", ["$log",
        "$dropdownSuppressWarning", "uibDropdownService",
        function(a, b, c) {
            b || a.warn(
                "dropdownService is now deprecated. Use uibDropdownService instead."
            ), angular.extend(this, c)
        }
    ]).controller("DropdownController", ["$scope", "$element", "$attrs",
        "$parse", "uibDropdownConfig", "uibDropdownService", "$animate",
        "$uibPosition", "$document", "$compile", "$templateRequest", "$log",
        "$dropdownSuppressWarning",
        function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
            m || l.warn(
                "DropdownController is now deprecated. Use UibDropdownController instead."
            );
            var n, o, p = this,
                q = a.$new(),
                r = e.openClass,
                s = angular.noop,
                t = c.onToggle ? d(c.onToggle) : angular.noop,
                u = !1,
                v = !1;
            b.addClass("dropdown"), this.init = function() {
                c.isOpen && (o = d(c.isOpen), s = o.assign, a.$watch(o,
                        function(a) {
                            q.isOpen = !!a
                        })), u = angular.isDefined(c.dropdownAppendToBody),
                    v = angular.isDefined(c.uibKeyboardNav), u && p.dropdownMenu &&
                    (i.find("body").append(p.dropdownMenu), b.on(
                        "$destroy",
                        function() {
                            p.dropdownMenu.remove()
                        }))
            }, this.toggle = function(a) {
                return q.isOpen = arguments.length ? !!a : !q.isOpen
            }, this.isOpen = function() {
                return q.isOpen
            }, q.getToggleElement = function() {
                return p.toggleElement
            }, q.getAutoClose = function() {
                return c.autoClose || "always"
            }, q.getElement = function() {
                return b
            }, q.isKeynavEnabled = function() {
                return v
            }, q.focusDropdownEntry = function(a) {
                var c = p.dropdownMenu ? angular.element(p.dropdownMenu)
                    .find("a") : angular.element(b).find("ul").eq(0).find(
                        "a");
                switch (a) {
                    case 40:
                        angular.isNumber(p.selectedOption) ? p.selectedOption =
                            p.selectedOption === c.length - 1 ? p.selectedOption :
                            p.selectedOption + 1 : p.selectedOption = 0;
                        break;
                    case 38:
                        angular.isNumber(p.selectedOption) ? p.selectedOption =
                            0 === p.selectedOption ? 0 : p.selectedOption -
                            1 : p.selectedOption = c.length - 1
                }
                c[p.selectedOption].focus()
            }, q.getDropdownElement = function() {
                return p.dropdownMenu
            }, q.focusToggleElement = function() {
                p.toggleElement && p.toggleElement[0].focus()
            }, q.$watch("isOpen", function(c, d) {
                if (u && p.dropdownMenu) {
                    var e = h.positionElements(b, p.dropdownMenu,
                            "bottom-left", !0),
                        i = {
                            top: e.top + "px",
                            display: c ? "block" : "none"
                        },
                        l = p.dropdownMenu.hasClass(
                            "dropdown-menu-right");
                    l ? (i.left = "auto", i.right = window.innerWidth -
                        (e.left + b.prop("offsetWidth")) + "px"
                    ) : (i.left = e.left + "px", i.right =
                        "auto"), p.dropdownMenu.css(i)
                }
                if (g[c ? "addClass" : "removeClass"](b, r).then(
                        function() {
                            angular.isDefined(c) && c !== d && t(a, {
                                open: !!c
                            })
                        }), c) p.dropdownMenuTemplateUrl && k(p.dropdownMenuTemplateUrl)
                    .then(function(a) {
                        n = q.$new(), j(a.trim())(n, function(a) {
                            var b = a;
                            p.dropdownMenu.replaceWith(
                                    b), p.dropdownMenu =
                                b
                        })
                    }), q.focusToggleElement(), f.open(q);
                else {
                    if (p.dropdownMenuTemplateUrl) {
                        n && n.$destroy();
                        var m = angular.element(
                            '<ul class="dropdown-menu"></ul>');
                        p.dropdownMenu.replaceWith(m), p.dropdownMenu =
                            m
                    }
                    f.close(q), p.selectedOption = null
                }
                angular.isFunction(s) && s(a, c)
            }), a.$on("$locationChangeSuccess", function() {
                "disabled" !== q.getAutoClose() && (q.isOpen = !1)
            });
            var w = a.$on("$destroy", function() {
                q.$destroy()
            });
            q.$on("$destroy", w)
        }
    ]).directive("dropdown", ["$log", "$dropdownSuppressWarning", function(a, b) {
        return {
            controller: "DropdownController",
            link: function(c, d, e, f) {
                b || a.warn(
                    "dropdown is now deprecated. Use uib-dropdown instead."
                ), f.init()
            }
        }
    }]).directive("dropdownMenu", ["$log", "$dropdownSuppressWarning", function(
        a, b) {
        return {
            restrict: "AC",
            require: "?^dropdown",
            link: function(c, d, e, f) {
                if (f && !angular.isDefined(e.dropdownNested)) {
                    b || a.warn(
                        "dropdown-menu is now deprecated. Use uib-dropdown-menu instead."
                    ), d.addClass("dropdown-menu");
                    var g = e.templateUrl;
                    g && (f.dropdownMenuTemplateUrl = g), f.dropdownMenu ||
                        (f.dropdownMenu = d)
                }
            }
        }
    }]).directive("keyboardNav", ["$log", "$dropdownSuppressWarning", function(
        a, b) {
        return {
            restrict: "A",
            require: "?^dropdown",
            link: function(c, d, e, f) {
                b || a.warn(
                    "keyboard-nav is now deprecated. Use uib-keyboard-nav instead."
                ), d.bind("keydown", function(a) {
                    if (-1 !== [38, 40].indexOf(a.which)) {
                        a.preventDefault(), a.stopPropagation();
                        var b = f.dropdownMenu.find("a");
                        switch (a.which) {
                            case 40:
                                angular.isNumber(f.selectedOption) ?
                                    f.selectedOption = f.selectedOption ===
                                    b.length - 1 ? f.selectedOption :
                                    f.selectedOption + 1 :
                                    f.selectedOption = 0;
                                break;
                            case 38:
                                angular.isNumber(f.selectedOption) ?
                                    f.selectedOption = 0 ===
                                    f.selectedOption ? 0 :
                                    f.selectedOption - 1 :
                                    f.selectedOption = b.length -
                                    1
                        }
                        b[f.selectedOption].focus()
                    }
                })
            }
        }
    }]).directive("dropdownToggle", ["$log", "$dropdownSuppressWarning",
        function(a, b) {
            return {
                require: "?^dropdown",
                link: function(c, d, e, f) {
                    if (b || a.warn(
                            "dropdown-toggle is now deprecated. Use uib-dropdown-toggle instead."
                        ), f) {
                        d.addClass("dropdown-toggle"), f.toggleElement =
                            d;
                        var g = function(a) {
                            a.preventDefault(), d.hasClass(
                                "disabled") || e.disabled || c.$apply(
                                function() {
                                    f.toggle()
                                })
                        };
                        d.bind("click", g), d.attr({
                            "aria-haspopup": !0,
                            "aria-expanded": !1
                        }), c.$watch(f.isOpen, function(a) {
                            d.attr("aria-expanded", !!a)
                        }), c.$on("$destroy", function() {
                            d.unbind("click", g)
                        })
                    }
                }
            }
        }
    ]), angular.module("ui.bootstrap.stackedMap", []).factory("$$stackedMap",
        function() {
            return {
                createNew: function() {
                    var a = [];
                    return {
                        add: function(b, c) {
                            a.push({
                                key: b,
                                value: c
                            })
                        },
                        get: function(b) {
                            for (var c = 0; c < a.length; c++)
                                if (b == a[c].key) return a[c]
                        },
                        keys: function() {
                            for (var b = [], c = 0; c < a.length; c++) b
                                .push(a[c].key);
                            return b
                        },
                        top: function() {
                            return a[a.length - 1]
                        },
                        remove: function(b) {
                            for (var c = -1, d = 0; d < a.length; d++)
                                if (b == a[d].key) {
                                    c = d;
                                    break
                                }
                            return a.splice(c, 1)[0]
                        },
                        removeTop: function() {
                            return a.splice(a.length - 1, 1)[0]
                        },
                        length: function() {
                            return a.length
                        }
                    }
                }
            }
        }), angular.module("ui.bootstrap.modal", ["ui.bootstrap.stackedMap"]).factory(
        "$$multiMap",
        function() {
            return {
                createNew: function() {
                    var a = {};
                    return {
                        entries: function() {
                            return Object.keys(a).map(function(b) {
                                return {
                                    key: b,
                                    value: a[b]
                                }
                            })
                        },
                        get: function(b) {
                            return a[b]
                        },
                        hasKey: function(b) {
                            return !!a[b]
                        },
                        keys: function() {
                            return Object.keys(a)
                        },
                        put: function(b, c) {
                            a[b] || (a[b] = []), a[b].push(c)
                        },
                        remove: function(b, c) {
                            var d = a[b];
                            if (d) {
                                var e = d.indexOf(c); - 1 !== e && d.splice(
                                    e, 1), d.length || delete a[b]
                            }
                        }
                    }
                }
            }
        }).directive("uibModalBackdrop", ["$animate", "$injector",
        "$uibModalStack",
        function(a, b, c) {
            function d(b, d, f) {
                d.addClass("modal-backdrop"), f.modalInClass && (e ? e(d, {
                    addClass: f.modalInClass
                }).start() : a.addClass(d, f.modalInClass), b.$on(c
                    .NOW_CLOSING_EVENT,
                    function(b, c) {
                        var g = c();
                        e ? e(d, {
                            removeClass: f.modalInClass
                        }).start().then(g) : a.removeClass(d, f
                            .modalInClass).then(g)
                    }))
            }
            var e = null;
            return b.has("$animateCss") && (e = b.get("$animateCss")), {
                replace: !0,
                templateUrl: "template/modal/backdrop.html",
                compile: function(a, b) {
                    return a.addClass(b.backdropClass), d
                }
            }
        }
    ]).directive("uibModalWindow", ["$uibModalStack", "$q", "$animate",
        "$injector",
        function(a, b, c, d) {
            var e = null;
            return d.has("$animateCss") && (e = d.get("$animateCss")), {
                scope: {
                    index: "@"
                },
                replace: !0,
                transclude: !0,
                templateUrl: function(a, b) {
                    return b.templateUrl ||
                        "template/modal/window.html"
                },
                link: function(d, f, g) {
                    f.addClass(g.windowClass || ""), f.addClass(g.windowTopClass ||
                            ""), d.size = g.size, d.close =
                        function(b) {
                            var c = a.getTop();
                            c && c.value.backdrop && "static" !== c
                                .value.backdrop && b.target === b.currentTarget &&
                                (b.preventDefault(), b.stopPropagation(),
                                    a.dismiss(c.key,
                                        "backdrop click"))
                        }, f.on("click", d.close), d.$isRendered = !
                        0;
                    var h = b.defer();
                    g.$observe("modalRender", function(a) {
                        "true" == a && h.resolve()
                    }), h.promise.then(function() {
                        var h = null;
                        g.modalInClass && (h = e ? e(f, {
                            addClass: g.modalInClass
                        }).start() : c.addClass(f,
                            g.modalInClass), d.$on(
                            a.NOW_CLOSING_EVENT,
                            function(a, b) {
                                var d = b();
                                e ? e(f, {
                                    removeClass: g
                                        .modalInClass
                                }).start().then(
                                    d) : c.removeClass(
                                    f, g.modalInClass
                                ).then(d)
                            })), b.when(h).then(
                            function() {
                                var a = f[0].querySelector(
                                    "[autofocus]");
                                a ? a.focus() : f[0].focus()
                            });
                        var i = a.getTop();
                        i && a.modalRendered(i.key)
                    })
                }
            }
        }
    ]).directive("uibModalAnimationClass", function() {
        return {
            compile: function(a, b) {
                b.modalAnimation && a.addClass(b.uibModalAnimationClass)
            }
        }
    }).directive("uibModalTransclude", function() {
        return {
            link: function(a, b, c, d, e) {
                e(a.$parent, function(a) {
                    b.empty(), b.append(a)
                })
            }
        }
    }).factory("$uibModalStack", ["$animate", "$timeout", "$document",
        "$compile", "$rootScope", "$q", "$injector", "$$multiMap",
        "$$stackedMap",
        function(a, b, c, d, e, f, g, h, i) {
            function j() {
                for (var a = -1, b = u.keys(), c = 0; c < b.length; c++) u.get(
                    b[c]).value.backdrop && (a = c);
                return a
            }

            function k(a, b) {
                var d = c.find("body").eq(0),
                    e = u.get(a).value;
                u.remove(a), n(e.modalDomEl, e.modalScope, function() {
                    var b = e.openedClass || t;
                    v.remove(b, a), d.toggleClass(b, v.hasKey(b)),
                        l(!0)
                }), m(), b && b.focus ? b.focus() : d.focus()
            }

            function l(a) {
                var b;
                u.length() > 0 && (b = u.top().value, b.modalDomEl.toggleClass(
                    b.windowTopClass || "", a))
            }

            function m() {
                if (q && -1 == j()) {
                    var a = r;
                    n(q, r, function() {
                        a = null
                    }), q = void 0, r = void 0
                }
            }

            function n(b, c, d) {
                function e() {
                    e.done || (e.done = !0, p ? p(b, {
                        event: "leave"
                    }).start().then(function() {
                        b.remove()
                    }) : a.leave(b), c.$destroy(), d && d())
                }
                var g, h = null,
                    i = function() {
                        return g || (g = f.defer(), h = g.promise),
                            function() {
                                g.resolve()
                            }
                    };
                return c.$broadcast(w.NOW_CLOSING_EVENT, i), f.when(h).then(
                    e)
            }

            function o(a, b, c) {
                return !a.value.modalScope.$broadcast("modal.closing", b, c)
                    .defaultPrevented
            }
            var p = null;
            g.has("$animateCss") && (p = g.get("$animateCss"));
            var q, r, s, t = "modal-open",
                u = i.createNew(),
                v = h.createNew(),
                w = {
                    NOW_CLOSING_EVENT: "modal.stack.now-closing"
                },
                x = 0,
                y =
                "a[href], area[href], input:not([disabled]), button:not([disabled]),select:not([disabled]), textarea:not([disabled]), iframe, object, embed, *[tabindex], *[contenteditable=true]";
            return e.$watch(j, function(a) {
                r && (r.index = a)
            }), c.bind("keydown", function(a) {
                if (a.isDefaultPrevented()) return a;
                var b = u.top();
                if (b && b.value.keyboard) switch (a.which) {
                    case 27:
                        a.preventDefault(), e.$apply(function() {
                            w.dismiss(b.key,
                                "escape key press")
                        });
                        break;
                    case 9:
                        w.loadFocusElementList(b);
                        var c = !1;
                        a.shiftKey ? w.isFocusInFirstItem(a) &&
                            (c = w.focusLastFocusableElement()) :
                            w.isFocusInLastItem(a) && (c = w.focusFirstFocusableElement()),
                            c && (a.preventDefault(), a.stopPropagation())
                }
            }), w.open = function(a, b) {
                var f = c[0].activeElement,
                    g = b.openedClass || t;
                l(!1), u.add(a, {
                    deferred: b.deferred,
                    renderDeferred: b.renderDeferred,
                    modalScope: b.scope,
                    backdrop: b.backdrop,
                    keyboard: b.keyboard,
                    openedClass: b.openedClass,
                    windowTopClass: b.windowTopClass
                }), v.put(g, a);
                var h = c.find("body").eq(0),
                    i = j();
                if (i >= 0 && !q) {
                    r = e.$new(!0), r.index = i;
                    var k = angular.element(
                        '<div uib-modal-backdrop="modal-backdrop"></div>'
                    );
                    k.attr("backdrop-class", b.backdropClass), b.animation &&
                        k.attr("modal-animation", "true"), q = d(k)(r),
                        h.append(q)
                }
                var m = angular.element(
                    '<div uib-modal-window="modal-window"></div>');
                m.attr({
                    "template-url": b.windowTemplateUrl,
                    "window-class": b.windowClass,
                    "window-top-class": b.windowTopClass,
                    size: b.size,
                    index: u.length() - 1,
                    animate: "animate"
                }).html(b.content), b.animation && m.attr(
                    "modal-animation", "true");
                var n = d(m)(b.scope);
                u.top().value.modalDomEl = n, u.top().value.modalOpener =
                    f, h.append(n), h.addClass(g), w.clearFocusListCache()
            }, w.close = function(a, b) {
                var c = u.get(a);
                return c && o(c, b, !0) ? (c.value.modalScope.$$uibDestructionScheduled = !
                    0, c.value.deferred.resolve(b), k(a, c.value.modalOpener), !
                    0) : !c
            }, w.dismiss = function(a, b) {
                var c = u.get(a);
                return c && o(c, b, !1) ? (c.value.modalScope.$$uibDestructionScheduled = !
                    0, c.value.deferred.reject(b), k(a, c.value.modalOpener), !
                    0) : !c
            }, w.dismissAll = function(a) {
                for (var b = this.getTop(); b && this.dismiss(b.key, a);)
                    b = this.getTop()
            }, w.getTop = function() {
                return u.top()
            }, w.modalRendered = function(a) {
                var b = u.get(a);
                b && b.value.renderDeferred.resolve()
            }, w.focusFirstFocusableElement = function() {
                return s.length > 0 ? (s[0].focus(), !0) : !1
            }, w.focusLastFocusableElement = function() {
                return s.length > 0 ? (s[s.length - 1].focus(), !0) : !
                    1
            }, w.isFocusInFirstItem = function(a) {
                return s.length > 0 ? (a.target || a.srcElement) == s[0] :
                    !1
            }, w.isFocusInLastItem = function(a) {
                return s.length > 0 ? (a.target || a.srcElement) == s[s
                    .length - 1] : !1
            }, w.clearFocusListCache = function() {
                s = [], x = 0
            }, w.loadFocusElementList = function(a) {
                if ((void 0 === s || !s.length) && a) {
                    var b = a.value.modalDomEl;
                    b && b.length && (s = b[0].querySelectorAll(y))
                }
            }, w
        }
    ]).provider("$uibModal", function() {
        var a = {
            options: {
                animation: !0,
                backdrop: !0,
                keyboard: !0
            },
            $get: ["$injector", "$rootScope", "$q", "$templateRequest",
                "$controller", "$uibModalStack",
                "$modalSuppressWarning", "$log",
                function(b, c, d, e, f, g, h, i) {
                    function j(a) {
                        return a.template ? d.when(a.template) : e(
                            angular.isFunction(a.templateUrl) ?
                            a.templateUrl() : a.templateUrl)
                    }

                    function k(a) {
                        var c = [];
                        return angular.forEach(a, function(a) {
                            angular.isFunction(a) ||
                                angular.isArray(a) ? c.push(
                                    d.when(b.invoke(a))) :
                                angular.isString(a) ? c.push(
                                    d.when(b.get(a))) : c.push(
                                    d.when(a))
                        }), c
                    }
                    var l = {},
                        m = null;
                    return l.getPromiseChain = function() {
                        return m
                    }, l.open = function(b) {
                        function e() {
                            return r
                        }
                        var l = d.defer(),
                            n = d.defer(),
                            o = d.defer(),
                            p = {
                                result: l.promise,
                                opened: n.promise,
                                rendered: o.promise,
                                close: function(a) {
                                    return g.close(p, a)
                                },
                                dismiss: function(a) {
                                    return g.dismiss(p, a)
                                }
                            };
                        if (b = angular.extend({}, a.options, b),
                            b.resolve = b.resolve || {}, !b.template &&
                            !b.templateUrl) throw new Error(
                            "One of template or templateUrl options is required."
                        );
                        var q, r = d.all([j(b)].concat(k(b.resolve)));
                        return q = m = d.all([m]).then(e, e).then(
                            function(a) {
                                var d = (b.scope || c).$new();
                                d.$close = p.close, d.$dismiss =
                                    p.dismiss, d.$on(
                                        "$destroy",
                                        function() {
                                            d.$$uibDestructionScheduled ||
                                                d.$dismiss(
                                                    "$uibUnscheduledDestruction"
                                                )
                                        });
                                var e, j = {},
                                    k = 1;
                                b.controller && (j.$scope =
                                    d, j.$uibModalInstance =
                                    p, Object.defineProperty(
                                        j,
                                        "$modalInstance", {
                                            get: function() {
                                                return
                                                    h ||
                                                    i
                                                    .warn(
                                                        "$modalInstance is now deprecated. Use $uibModalInstance instead."
                                                    ),
                                                    p
                                            }
                                        }), angular.forEach(
                                        b.resolve,
                                        function(b, c) {
                                            j[c] = a[k++]
                                        }), e = f(b.controller,
                                        j), b.controllerAs &&
                                    (b.bindToController &&
                                        angular.extend(
                                            e, d), d[b.controllerAs] =
                                        e)), g.open(p, {
                                    scope: d,
                                    deferred: l,
                                    renderDeferred: o,
                                    content: a[0],
                                    animation: b.animation,
                                    backdrop: b.backdrop,
                                    keyboard: b.keyboard,
                                    backdropClass: b
                                        .backdropClass,
                                    windowTopClass: b
                                        .windowTopClass,
                                    windowClass: b.windowClass,
                                    windowTemplateUrl: b
                                        .windowTemplateUrl,
                                    size: b.size,
                                    openedClass: b.openedClass
                                }), n.resolve(!0)
                            },
                            function(a) {
                                n.reject(a), l.reject(a)
                            })["finally"](function() {
                            m === q && (m = null)
                        }), p
                    }, l
                }
            ]
        };
        return a
    }), angular.module("ui.bootstrap.modal").value("$modalSuppressWarning", !1)
    .directive("modalBackdrop", ["$animate", "$injector", "$modalStack", "$log",
        "$modalSuppressWarning",
        function(a, b, c, d, e) {
            function f(b, f, h) {
                e || d.warn(
                    "modal-backdrop is now deprecated. Use uib-modal-backdrop instead."
                ), f.addClass("modal-backdrop"), h.modalInClass && (g ?
                    g(f, {
                        addClass: h.modalInClass
                    }).start() : a.addClass(f, h.modalInClass), b.$on(c
                        .NOW_CLOSING_EVENT,
                        function(b, c) {
                            var d = c();
                            g ? g(f, {
                                removeClass: h.modalInClass
                            }).start().then(d) : a.removeClass(f, h
                                .modalInClass).then(d)
                        }))
            }
            var g = null;
            return b.has("$animateCss") && (g = b.get("$animateCss")), {
                replace: !0,
                templateUrl: "template/modal/backdrop.html",
                compile: function(a, b) {
                    return a.addClass(b.backdropClass), f
                }
            }
        }
    ]).directive("modalWindow", ["$modalStack", "$q", "$animate", "$injector",
        "$log", "$modalSuppressWarning",
        function(a, b, c, d, e, f) {
            var g = null;
            return d.has("$animateCss") && (g = d.get("$animateCss")), {
                scope: {
                    index: "@"
                },
                replace: !0,
                transclude: !0,
                templateUrl: function(a, b) {
                    return b.templateUrl ||
                        "template/modal/window.html"
                },
                link: function(d, h, i) {
                    f || e.warn(
                            "modal-window is now deprecated. Use uib-modal-window instead."
                        ), h.addClass(i.windowClass || ""), h.addClass(
                            i.windowTopClass || ""), d.size = i.size,
                        d.close = function(b) {
                            var c = a.getTop();
                            c && c.value.backdrop && "static" !== c
                                .value.backdrop && b.target === b.currentTarget &&
                                (b.preventDefault(), b.stopPropagation(),
                                    a.dismiss(c.key,
                                        "backdrop click"))
                        }, h.on("click", d.close), d.$isRendered = !
                        0;
                    var j = b.defer();
                    i.$observe("modalRender", function(a) {
                        "true" == a && j.resolve()
                    }), j.promise.then(function() {
                        var e = null;
                        i.modalInClass && (e = g ? g(h, {
                            addClass: i.modalInClass
                        }).start() : c.addClass(h,
                            i.modalInClass), d.$on(
                            a.NOW_CLOSING_EVENT,
                            function(a, b) {
                                var d = b();
                                g ? g(h, {
                                    removeClass: i
                                        .modalInClass
                                }).start().then(
                                    d) : c.removeClass(
                                    h, i.modalInClass
                                ).then(d)
                            })), b.when(e).then(
                            function() {
                                var a = h[0].querySelector(
                                    "[autofocus]");
                                a ? a.focus() : h[0].focus()
                            });
                        var f = a.getTop();
                        f && a.modalRendered(f.key)
                    })
                }
            }
        }
    ]).directive("modalAnimationClass", ["$log", "$modalSuppressWarning",
        function(a, b) {
            return {
                compile: function(c, d) {
                    b || a.warn(
                        "modal-animation-class is now deprecated. Use uib-modal-animation-class instead."
                    ), d.modalAnimation && c.addClass(d.modalAnimationClass)
                }
            }
        }
    ]).directive("modalTransclude", ["$log", "$modalSuppressWarning", function(
        a, b) {
        return {
            link: function(c, d, e, f, g) {
                b || a.warn(
                    "modal-transclude is now deprecated. Use uib-modal-transclude instead."
                ), g(c.$parent, function(a) {
                    d.empty(), d.append(a)
                })
            }
        }
    }]).service("$modalStack", ["$animate", "$timeout", "$document", "$compile",
        "$rootScope", "$q", "$injector", "$$multiMap", "$$stackedMap",
        "$uibModalStack", "$log", "$modalSuppressWarning",
        function(a, b, c, d, e, f, g, h, i, j, k, l) {
            l || k.warn(
                "$modalStack is now deprecated. Use $uibModalStack instead."
            ), angular.extend(this, j)
        }
    ]).provider("$modal", ["$uibModalProvider", function(a) {
        angular.extend(this, a), this.$get = ["$injector", "$log",
            "$modalSuppressWarning",
            function(b, c, d) {
                return d || c.warn(
                    "$modal is now deprecated. Use $uibModal instead."
                ), b.invoke(a.$get)
            }
        ]
    }]), angular.module("ui.bootstrap.pagination", []).controller(
        "UibPaginationController", ["$scope", "$attrs", "$parse", function(a, b,
            c) {
            var d = this,
                e = {
                    $setViewValue: angular.noop
                },
                f = b.numPages ? c(b.numPages).assign : angular.noop;
            this.init = function(g, h) {
                e = g, this.config = h, e.$render = function() {
                    d.render()
                }, b.itemsPerPage ? a.$parent.$watch(c(b.itemsPerPage),
                    function(b) {
                        d.itemsPerPage = parseInt(b, 10), a.totalPages =
                            d.calculateTotalPages()
                    }) : this.itemsPerPage = h.itemsPerPage, a.$watch(
                    "totalItems",
                    function() {
                        a.totalPages = d.calculateTotalPages()
                    }), a.$watch("totalPages", function(b) {
                    f(a.$parent, b), a.page > b ? a.selectPage(
                        b) : e.$render()
                })
            }, this.calculateTotalPages = function() {
                var b = this.itemsPerPage < 1 ? 1 : Math.ceil(a.totalItems /
                    this.itemsPerPage);
                return Math.max(b || 0, 1)
            }, this.render = function() {
                a.page = parseInt(e.$viewValue, 10) || 1
            }, a.selectPage = function(b, c) {
                c && c.preventDefault();
                var d = !a.ngDisabled || !c;
                d && a.page !== b && b > 0 && b <= a.totalPages && (c &&
                    c.target && c.target.blur(), e.$setViewValue(b),
                    e.$render())
            }, a.getText = function(b) {
                return a[b + "Text"] || d.config[b + "Text"]
            }, a.noPrevious = function() {
                return 1 === a.page
            }, a.noNext = function() {
                return a.page === a.totalPages
            }
        }]).constant("uibPaginationConfig", {
        itemsPerPage: 10,
        boundaryLinks: !1,
        directionLinks: !0,
        firstText: "First",
        previousText: "Previous",
        nextText: "Next",
        lastText: "Last",
        rotate: !0
    }).directive("uibPagination", ["$parse", "uibPaginationConfig", function(a,
        b) {
        return {
            restrict: "EA",
            scope: {
                totalItems: "=",
                firstText: "@",
                previousText: "@",
                nextText: "@",
                lastText: "@",
                ngDisabled: "="
            },
            require: ["uibPagination", "?ngModel"],
            controller: "UibPaginationController",
            controllerAs: "pagination",
            templateUrl: function(a, b) {
                return b.templateUrl ||
                    "template/pagination/pagination.html"
            },
            replace: !0,
            link: function(c, d, e, f) {
                function g(a, b, c) {
                    return {
                        number: a,
                        text: b,
                        active: c
                    }
                }

                function h(a, b) {
                    var c = [],
                        d = 1,
                        e = b,
                        f = angular.isDefined(k) && b > k;
                    f && (l ? (d = Math.max(a - Math.floor(k / 2),
                        1), e = d + k - 1, e > b && (e =
                        b, d = e - k + 1)) : (d = (Math.ceil(
                        a / k) - 1) * k + 1, e = Math.min(
                        d + k - 1, b)));
                    for (var h = d; e >= h; h++) {
                        var i = g(h, h, h === a);
                        c.push(i)
                    }
                    if (f && !l) {
                        if (d > 1) {
                            var j = g(d - 1, "...", !1);
                            c.unshift(j)
                        }
                        if (b > e) {
                            var m = g(e + 1, "...", !1);
                            c.push(m)
                        }
                    }
                    return c
                }
                var i = f[0],
                    j = f[1];
                if (j) {
                    var k = angular.isDefined(e.maxSize) ? c.$parent
                        .$eval(e.maxSize) : b.maxSize,
                        l = angular.isDefined(e.rotate) ? c.$parent
                        .$eval(e.rotate) : b.rotate;
                    c.boundaryLinks = angular.isDefined(e.boundaryLinks) ?
                        c.$parent.$eval(e.boundaryLinks) : b.boundaryLinks,
                        c.directionLinks = angular.isDefined(e.directionLinks) ?
                        c.$parent.$eval(e.directionLinks) : b.directionLinks,
                        i.init(j, b), e.maxSize && c.$parent.$watch(
                            a(e.maxSize),
                            function(a) {
                                k = parseInt(a, 10), i.render()
                            });
                    var m = i.render;
                    i.render = function() {
                        m(), c.page > 0 && c.page <= c.totalPages &&
                            (c.pages = h(c.page, c.totalPages))
                    }
                }
            }
        }
    }]).constant("uibPagerConfig", {
        itemsPerPage: 10,
        previousText: "« Previous",
        nextText: "Next »",
        align: !0
    }).directive("uibPager", ["uibPagerConfig", function(a) {
        return {
            restrict: "EA",
            scope: {
                totalItems: "=",
                previousText: "@",
                nextText: "@",
                ngDisabled: "="
            },
            require: ["uibPager", "?ngModel"],
            controller: "UibPaginationController",
            controllerAs: "pagination",
            templateUrl: function(a, b) {
                return b.templateUrl ||
                    "template/pagination/pager.html"
            },
            replace: !0,
            link: function(b, c, d, e) {
                var f = e[0],
                    g = e[1];
                g && (b.align = angular.isDefined(d.align) ? b.$parent
                    .$eval(d.align) : a.align, f.init(g, a))
            }
        }
    }]), angular.module("ui.bootstrap.pagination").value(
        "$paginationSuppressWarning", !1).controller("PaginationController", [
        "$scope", "$attrs", "$parse", "$log", "$paginationSuppressWarning",
        function(a, b, c, d, e) {
            e || d.warn(
                "PaginationController is now deprecated. Use UibPaginationController instead."
            );
            var f = this,
                g = {
                    $setViewValue: angular.noop
                },
                h = b.numPages ? c(b.numPages).assign : angular.noop;
            this.init = function(d, e) {
                g = d, this.config = e, g.$render = function() {
                    f.render()
                }, b.itemsPerPage ? a.$parent.$watch(c(b.itemsPerPage),
                    function(b) {
                        f.itemsPerPage = parseInt(b, 10), a.totalPages =
                            f.calculateTotalPages()
                    }) : this.itemsPerPage = e.itemsPerPage, a.$watch(
                    "totalItems",
                    function() {
                        a.totalPages = f.calculateTotalPages()
                    }), a.$watch("totalPages", function(b) {
                    h(a.$parent, b), a.page > b ? a.selectPage(
                        b) : g.$render()
                })
            }, this.calculateTotalPages = function() {
                var b = this.itemsPerPage < 1 ? 1 : Math.ceil(a.totalItems /
                    this.itemsPerPage);
                return Math.max(b || 0, 1)
            }, this.render = function() {
                a.page = parseInt(g.$viewValue, 10) || 1
            }, a.selectPage = function(b, c) {
                c && c.preventDefault();
                var d = !a.ngDisabled || !c;
                d && a.page !== b && b > 0 && b <= a.totalPages && (c &&
                    c.target && c.target.blur(), g.$setViewValue(b),
                    g.$render())
            }, a.getText = function(b) {
                return a[b + "Text"] || f.config[b + "Text"]
            }, a.noPrevious = function() {
                return 1 === a.page
            }, a.noNext = function() {
                return a.page === a.totalPages
            }
        }
    ]).directive("pagination", ["$parse", "uibPaginationConfig", "$log",
        "$paginationSuppressWarning",
        function(a, b, c, d) {
            return {
                restrict: "EA",
                scope: {
                    totalItems: "=",
                    firstText: "@",
                    previousText: "@",
                    nextText: "@",
                    lastText: "@",
                    ngDisabled: "="
                },
                require: ["pagination", "?ngModel"],
                controller: "PaginationController",
                controllerAs: "pagination",
                templateUrl: function(a, b) {
                    return b.templateUrl ||
                        "template/pagination/pagination.html"
                },
                replace: !0,
                link: function(e, f, g, h) {
                    function i(a, b, c) {
                        return {
                            number: a,
                            text: b,
                            active: c
                        }
                    }

                    function j(a, b) {
                        var c = [],
                            d = 1,
                            e = b,
                            f = angular.isDefined(m) && b > m;
                        f && (n ? (d = Math.max(a - Math.floor(m / 2),
                            1), e = d + m - 1, e > b && (e =
                            b, d = e - m + 1)) : (d = (Math.ceil(
                            a / m) - 1) * m + 1, e = Math.min(
                            d + m - 1, b)));
                        for (var g = d; e >= g; g++) {
                            var h = i(g, g, g === a);
                            c.push(h)
                        }
                        if (f && !n) {
                            if (d > 1) {
                                var j = i(d - 1, "...", !1);
                                c.unshift(j)
                            }
                            if (b > e) {
                                var k = i(e + 1, "...", !1);
                                c.push(k)
                            }
                        }
                        return c
                    }
                    d || c.warn(
                        "pagination is now deprecated. Use uib-pagination instead."
                    );
                    var k = h[0],
                        l = h[1];
                    if (l) {
                        var m = angular.isDefined(g.maxSize) ? e.$parent
                            .$eval(g.maxSize) : b.maxSize,
                            n = angular.isDefined(g.rotate) ? e.$parent
                            .$eval(g.rotate) : b.rotate;
                        e.boundaryLinks = angular.isDefined(g.boundaryLinks) ?
                            e.$parent.$eval(g.boundaryLinks) : b.boundaryLinks,
                            e.directionLinks = angular.isDefined(g.directionLinks) ?
                            e.$parent.$eval(g.directionLinks) : b.directionLinks,
                            k.init(l, b), g.maxSize && e.$parent.$watch(
                                a(g.maxSize),
                                function(a) {
                                    m = parseInt(a, 10), k.render()
                                });
                        var o = k.render;
                        k.render = function() {
                            o(), e.page > 0 && e.page <= e.totalPages &&
                                (e.pages = j(e.page, e.totalPages))
                        }
                    }
                }
            }
        }
    ]).directive("pager", ["uibPagerConfig", "$log",
        "$paginationSuppressWarning",
        function(a, b, c) {
            return {
                restrict: "EA",
                scope: {
                    totalItems: "=",
                    previousText: "@",
                    nextText: "@",
                    ngDisabled: "="
                },
                require: ["pager", "?ngModel"],
                controller: "PaginationController",
                controllerAs: "pagination",
                templateUrl: function(a, b) {
                    return b.templateUrl ||
                        "template/pagination/pager.html"
                },
                replace: !0,
                link: function(d, e, f, g) {
                    c || b.warn(
                        "pager is now deprecated. Use uib-pager instead."
                    );
                    var h = g[0],
                        i = g[1];
                    i && (d.align = angular.isDefined(f.align) ? d.$parent
                        .$eval(f.align) : a.align, h.init(i, a))
                }
            }
        }
    ]), angular.module("ui.bootstrap.tooltip", ["ui.bootstrap.position",
        "ui.bootstrap.stackedMap"
    ]).provider("$uibTooltip", function() {
        function a(a) {
            var b = /[A-Z]/g,
                c = "-";
            return a.replace(b, function(a, b) {
                return (b ? c : "") + a.toLowerCase()
            })
        }
        var b = {
                placement: "top",
                animation: !0,
                popupDelay: 0,
                popupCloseDelay: 0,
                useContentExp: !1
            },
            c = {
                mouseenter: "mouseleave",
                click: "click",
                focus: "blur",
                none: ""
            },
            d = {};
        this.options = function(a) {
            angular.extend(d, a)
        }, this.setTriggers = function(a) {
            angular.extend(c, a)
        }, this.$get = ["$window", "$compile", "$timeout", "$document",
            "$uibPosition", "$interpolate", "$rootScope", "$parse",
            "$$stackedMap",
            function(e, f, g, h, i, j, k, l, m) {
                var n = m.createNew();
                return h.on("keypress", function(a) {
                        if (27 === a.which) {
                            var b = n.top();
                            b && (b.value.close(), n.removeTop(), b =
                                null)
                        }
                    }),
                    function(e, k, m, o) {
                        function p(a) {
                            var b = (a || o.trigger || m).split(" "),
                                d = b.map(function(a) {
                                    return c[a] || a
                                });
                            return {
                                show: b,
                                hide: d
                            }
                        }
                        o = angular.extend({}, b, d, o);
                        var q = a(e),
                            r = j.startSymbol(),
                            s = j.endSymbol(),
                            t = "<div " + q + '-popup title="' + r +
                            "title" + s + '" ' + (o.useContentExp ?
                                'content-exp="contentExp()" ' :
                                'content="' + r + "content" + s + '" ') +
                            'placement="' + r + "placement" + s +
                            '" popup-class="' + r + "popupClass" + s +
                            '" animation="animation" is-open="isOpen"origin-scope="origScope" style="visibility: hidden; display: block; top: -9999px; left: -9999px;"></div>';
                        return {
                            compile: function(a, b) {
                                var c = f(t);
                                return function(a, b, d, f) {
                                    function j() {
                                        L.isOpen ? q() : m()
                                    }

                                    function m() {
                                        (!K || a.$eval(d[k +
                                            "Enable"])) && (u(),
                                            x(), L.popupDelay ?
                                            F || (F = g(r, L.popupDelay, !
                                                1)) : r())
                                    }

                                    function q() {
                                        s(), L.popupCloseDelay ?
                                            G || (G = g(t, L.popupCloseDelay, !
                                                1)) : t()
                                    }

                                    function r() {
                                        return s(), u(), L.content ?
                                            (v(), void L.$evalAsync(
                                                function() {
                                                    L.isOpen = !
                                                        0,
                                                        y(!
                                                            0
                                                        ),
                                                        Q()
                                                })) : angular.noop
                                    }

                                    function s() {
                                        F && (g.cancel(F), F =
                                            null), H && (g.cancel(
                                                H), H =
                                            null)
                                    }

                                    function t() {
                                        s(), u(), L && L.$evalAsync(
                                            function() {
                                                L.isOpen = !
                                                    1, y(!1),
                                                    L.animation ?
                                                    E || (E =
                                                        g(w,
                                                            150, !
                                                            1
                                                        )) :
                                                    w()
                                            })
                                    }

                                    function u() {
                                        G && (g.cancel(G), G =
                                            null), E && (g.cancel(
                                                E), E =
                                            null)
                                    }

                                    function v() {
                                        C || (D = L.$new(), C =
                                            c(D, function(a) {
                                                I ? h.find(
                                                        "body"
                                                    ).append(
                                                        a
                                                    ) :
                                                    b.after(
                                                        a
                                                    )
                                            }), z())
                                    }

                                    function w() {
                                        A(), E = null, C && (C.remove(),
                                                C = null), D &&
                                            (D.$destroy(), D =
                                                null)
                                    }

                                    function x() {
                                        L.title = d[k + "Title"],
                                            O ? L.content = O(a) :
                                            L.content = d[e], L
                                            .popupClass = d[k +
                                                "Class"], L.placement =
                                            angular.isDefined(d[
                                                k +
                                                "Placement"
                                            ]) ? d[k +
                                                "Placement"] :
                                            o.placement;
                                        var b = parseInt(d[k +
                                                "PopupDelay"
                                            ], 10),
                                            c = parseInt(d[k +
                                                "PopupCloseDelay"
                                            ], 10);
                                        L.popupDelay = isNaN(b) ?
                                            o.popupDelay : b, L
                                            .popupCloseDelay =
                                            isNaN(c) ? o.popupCloseDelay :
                                            c
                                    }

                                    function y(b) {
                                        N && angular.isFunction(
                                            N.assign) && N.assign(
                                            a, b)
                                    }

                                    function z() {
                                        P.length = 0, O ? (P.push(
                                            a.$watch(O,
                                                function(
                                                    a) {
                                                    L.content =
                                                        a, !
                                                        a &&
                                                        L
                                                        .isOpen &&
                                                        t()
                                                })), P.push(
                                            D.$watch(
                                                function() {
                                                    M ||
                                                        (
                                                            M = !
                                                            0,
                                                            D
                                                            .$$postDigest(
                                                                function() {
                                                                    M
                                                                        = !
                                                                        1,
                                                                        L &&
                                                                        L
                                                                        .isOpen &&
                                                                        Q()
                                                                }
                                                            )
                                                        )
                                                }))) : P.push(
                                            d.$observe(e,
                                                function(a) {
                                                    L.content =
                                                        a, !
                                                        a &&
                                                        L.isOpen ?
                                                        t() :
                                                        Q()
                                                })), P.push(
                                            d.$observe(k +
                                                "Title",
                                                function(a) {
                                                    L.title =
                                                        a,
                                                        L.isOpen &&
                                                        Q()
                                                })), P.push(
                                            d.$observe(k +
                                                "Placement",
                                                function(a) {
                                                    L.placement =
                                                        a ?
                                                        a :
                                                        o.placement,
                                                        L.isOpen &&
                                                        Q()
                                                }))
                                    }

                                    function A() {
                                        P.length && (angular.forEach(
                                                P,
                                                function(a) {
                                                    a()
                                                }), P.length =
                                            0)
                                    }

                                    function B() {
                                        var a = d[k + "Trigger"];
                                        R(), J = p(a), "none" !==
                                            J.show && J.show.forEach(
                                                function(a, c) {
                                                    a === J.hide[
                                                            c] ?
                                                        b[0].addEventListener(
                                                            a,
                                                            j) :
                                                        a && (b[
                                                                0
                                                            ].addEventListener(
                                                                a,
                                                                m
                                                            ),
                                                            J.hide[
                                                                c
                                                            ].split(
                                                                " "
                                                            ).forEach(
                                                                function(
                                                                    a
                                                                ) {
                                                                    b
                                                                        [
                                                                            0
                                                                        ]
                                                                        .addEventListener(
                                                                            a,
                                                                            q
                                                                        )
                                                                }
                                                            )),
                                                        b.on(
                                                            "keypress",
                                                            function(
                                                                a
                                                            ) {
                                                                27
                                                                    ===
                                                                    a
                                                                    .which &&
                                                                    q()
                                                            })
                                                })
                                    }
                                    var C, D, E, F, G, H, I =
                                        angular.isDefined(o.appendToBody) ?
                                        o.appendToBody : !1,
                                        J = p(void 0),
                                        K = angular.isDefined(d[
                                            k + "Enable"]),
                                        L = a.$new(!0),
                                        M = !1,
                                        N = angular.isDefined(d[
                                            k + "IsOpen"]) ? l(
                                            d[k + "IsOpen"]) :
                                        !1,
                                        O = o.useContentExp ? l(
                                            d[e]) : !1,
                                        P = [],
                                        Q = function() {
                                            C && C.html() && (H ||
                                                (H = g(
                                                    function() {
                                                        C
                                                            .css({
                                                                top: 0,
                                                                left: 0
                                                            });
                                                        var
                                                            a =
                                                            i
                                                            .positionElements(
                                                                b,
                                                                C,
                                                                L
                                                                .placement,
                                                                I
                                                            );
                                                        a
                                                            .top +=
                                                            "px",
                                                            a
                                                            .left +=
                                                            "px",
                                                            a
                                                            .visibility =
                                                            "visible",
                                                            C
                                                            .css(
                                                                a
                                                            ),
                                                            H =
                                                            null
                                                    },
                                                    0, !
                                                    1)))
                                        };
                                    L.origScope = a, L.isOpen = !
                                        1, n.add(L, {
                                            close: t
                                        }), L.contentExp =
                                        function() {
                                            return L.content
                                        }, d.$observe(
                                            "disabled",
                                            function(a) {
                                                a && s(), a &&
                                                    L.isOpen &&
                                                    t()
                                            }), N && a.$watch(N,
                                            function(a) {
                                                L && !a === L.isOpen &&
                                                    j()
                                            });
                                    var R = function() {
                                        J.show.forEach(
                                            function(a) {
                                                b.unbind(
                                                    a,
                                                    m
                                                )
                                            }), J.hide.forEach(
                                            function(a) {
                                                a.split(
                                                    " "
                                                ).forEach(
                                                    function(
                                                        a
                                                    ) {
                                                        b
                                                            [
                                                                0
                                                            ]
                                                            .removeEventListener(
                                                                a,
                                                                q
                                                            )
                                                    }
                                                )
                                            })
                                    };
                                    B();
                                    var S = a.$eval(d[k +
                                        "Animation"]);
                                    L.animation = angular.isDefined(
                                        S) ? !!S : o.animation;
                                    var T = a.$eval(d[k +
                                        "AppendToBody"]);
                                    I = angular.isDefined(T) ?
                                        T : I, I && a.$on(
                                            "$locationChangeSuccess",
                                            function() {
                                                L.isOpen && t()
                                            }), a.$on(
                                            "$destroy",
                                            function() {
                                                s(), u(), R(),
                                                    w(), n.remove(
                                                        L), L =
                                                    null
                                            })
                                }
                            }
                        }
                    }
            }
        ]
    }).directive("uibTooltipTemplateTransclude", ["$animate", "$sce",
        "$compile", "$templateRequest",
        function(a, b, c, d) {
            return {
                link: function(e, f, g) {
                    var h, i, j, k = e.$eval(g.tooltipTemplateTranscludeScope),
                        l = 0,
                        m = function() {
                            i && (i.remove(), i = null), h && (h.$destroy(),
                                h = null), j && (a.leave(j).then(
                                function() {
                                    i = null
                                }), i = j, j = null)
                        };
                    e.$watch(b.parseAsResourceUrl(g.uibTooltipTemplateTransclude),
                        function(b) {
                            var g = ++l;
                            b ? (d(b, !0).then(function(d) {
                                if (g === l) {
                                    var e = k.$new(),
                                        i = d,
                                        n = c(i)(e,
                                            function(b) {
                                                m(), a.enter(
                                                    b,
                                                    f
                                                )
                                            });
                                    h = e, j = n, h.$emit(
                                        "$includeContentLoaded",
                                        b)
                                }
                            }, function() {
                                g === l && (m(), e.$emit(
                                    "$includeContentError",
                                    b))
                            }), e.$emit(
                                "$includeContentRequested",
                                b)) : m()
                        }), e.$on("$destroy", m)
                }
            }
        }
    ]).directive("uibTooltipClasses", function() {
        return {
            restrict: "A",
            link: function(a, b, c) {
                a.placement && b.addClass(a.placement), a.popupClass &&
                    b.addClass(a.popupClass), a.animation() && b.addClass(
                        c.tooltipAnimationClass)
            }
        }
    }).directive("uibTooltipPopup", function() {
        return {
            replace: !0,
            scope: {
                content: "@",
                placement: "@",
                popupClass: "@",
                animation: "&",
                isOpen: "&"
            },
            templateUrl: "template/tooltip/tooltip-popup.html",
            link: function(a, b) {
                b.addClass("tooltip")
            }
        }
    }).directive("uibTooltip", ["$uibTooltip", function(a) {
        return a("uibTooltip", "tooltip", "mouseenter")
    }]).directive("uibTooltipTemplatePopup", function() {
        return {
            replace: !0,
            scope: {
                contentExp: "&",
                placement: "@",
                popupClass: "@",
                animation: "&",
                isOpen: "&",
                originScope: "&"
            },
            templateUrl: "template/tooltip/tooltip-template-popup.html",
            link: function(a, b) {
                b.addClass("tooltip")
            }
        }
    }).directive("uibTooltipTemplate", ["$uibTooltip", function(a) {
        return a("uibTooltipTemplate", "tooltip", "mouseenter", {
            useContentExp: !0
        })
    }]).directive("uibTooltipHtmlPopup", function() {
        return {
            replace: !0,
            scope: {
                contentExp: "&",
                placement: "@",
                popupClass: "@",
                animation: "&",
                isOpen: "&"
            },
            templateUrl: "template/tooltip/tooltip-html-popup.html",
            link: function(a, b) {
                b.addClass("tooltip")
            }
        }
    }).directive("uibTooltipHtml", ["$uibTooltip", function(a) {
        return a("uibTooltipHtml", "tooltip", "mouseenter", {
            useContentExp: !0
        })
    }]), angular.module("ui.bootstrap.tooltip").value("$tooltipSuppressWarning", !
        1).provider("$tooltip", ["$uibTooltipProvider", function(a) {
        angular.extend(this, a), this.$get = ["$log",
            "$tooltipSuppressWarning", "$injector",
            function(b, c, d) {
                return c || b.warn(
                    "$tooltip is now deprecated. Use $uibTooltip instead."
                ), d.invoke(a.$get)
            }
        ]
    }]).directive("tooltipTemplateTransclude", ["$animate", "$sce", "$compile",
        "$templateRequest", "$log", "$tooltipSuppressWarning",
        function(a, b, c, d, e, f) {
            return {
                link: function(g, h, i) {
                    f || e.warn(
                        "tooltip-template-transclude is now deprecated. Use uib-tooltip-template-transclude instead."
                    );
                    var j, k, l, m = g.$eval(i.tooltipTemplateTranscludeScope),
                        n = 0,
                        o = function() {
                            k && (k.remove(), k = null), j && (j.$destroy(),
                                j = null), l && (a.leave(l).then(
                                function() {
                                    k = null
                                }), k = l, l = null)
                        };
                    g.$watch(b.parseAsResourceUrl(i.tooltipTemplateTransclude),
                        function(b) {
                            var e = ++n;
                            b ? (d(b, !0).then(function(d) {
                                if (e === n) {
                                    var f = m.$new(),
                                        g = d,
                                        i = c(g)(f,
                                            function(b) {
                                                o(), a.enter(
                                                    b,
                                                    h
                                                )
                                            });
                                    j = f, l = i, j.$emit(
                                        "$includeContentLoaded",
                                        b)
                                }
                            }, function() {
                                e === n && (o(), g.$emit(
                                    "$includeContentError",
                                    b))
                            }), g.$emit(
                                "$includeContentRequested",
                                b)) : o()
                        }), g.$on("$destroy", o)
                }
            }
        }
    ]).directive("tooltipClasses", ["$log", "$tooltipSuppressWarning", function(
        a, b) {
        return {
            restrict: "A",
            link: function(c, d, e) {
                b || a.warn(
                        "tooltip-classes is now deprecated. Use uib-tooltip-classes instead."
                    ), c.placement && d.addClass(c.placement), c.popupClass &&
                    d.addClass(c.popupClass), c.animation() && d.addClass(
                        e.tooltipAnimationClass)
            }
        }
    }]).directive("tooltipPopup", ["$log", "$tooltipSuppressWarning", function(
        a, b) {
        return {
            replace: !0,
            scope: {
                content: "@",
                placement: "@",
                popupClass: "@",
                animation: "&",
                isOpen: "&"
            },
            templateUrl: "template/tooltip/tooltip-popup.html",
            link: function(c, d) {
                b || a.warn(
                    "tooltip-popup is now deprecated. Use uib-tooltip-popup instead."
                ), d.addClass("tooltip")
            }
        }
    }]).directive("tooltip", ["$tooltip", function(a) {
        return a("tooltip", "tooltip", "mouseenter")
    }]).directive("tooltipTemplatePopup", ["$log", "$tooltipSuppressWarning",
        function(a, b) {
            return {
                replace: !0,
                scope: {
                    contentExp: "&",
                    placement: "@",
                    popupClass: "@",
                    animation: "&",
                    isOpen: "&",
                    originScope: "&"
                },
                templateUrl: "template/tooltip/tooltip-template-popup.html",
                link: function(c, d) {
                    b || a.warn(
                        "tooltip-template-popup is now deprecated. Use uib-tooltip-template-popup instead."
                    ), d.addClass("tooltip")
                }
            }
        }
    ]).directive("tooltipTemplate", ["$tooltip", function(a) {
        return a("tooltipTemplate", "tooltip", "mouseenter", {
            useContentExp: !0
        })
    }]).directive("tooltipHtmlPopup", ["$log", "$tooltipSuppressWarning",
        function(a, b) {
            return {
                replace: !0,
                scope: {
                    contentExp: "&",
                    placement: "@",
                    popupClass: "@",
                    animation: "&",
                    isOpen: "&"
                },
                templateUrl: "template/tooltip/tooltip-html-popup.html",
                link: function(c, d) {
                    b || a.warn(
                        "tooltip-html-popup is now deprecated. Use uib-tooltip-html-popup instead."
                    ), d.addClass("tooltip")
                }
            }
        }
    ]).directive("tooltipHtml", ["$tooltip", function(a) {
        return a("tooltipHtml", "tooltip", "mouseenter", {
            useContentExp: !0
        })
    }]), angular.module("ui.bootstrap.popover", ["ui.bootstrap.tooltip"]).directive(
        "uibPopoverTemplatePopup",
        function() {
            return {
                replace: !0,
                scope: {
                    title: "@",
                    contentExp: "&",
                    placement: "@",
                    popupClass: "@",
                    animation: "&",
                    isOpen: "&",
                    originScope: "&"
                },
                templateUrl: "template/popover/popover-template.html",
                link: function(a, b) {
                    b.addClass("popover")
                }
            }
        }).directive("uibPopoverTemplate", ["$uibTooltip", function(a) {
        return a("uibPopoverTemplate", "popover", "click", {
            useContentExp: !0
        })
    }]).directive("uibPopoverHtmlPopup", function() {
        return {
            replace: !0,
            scope: {
                contentExp: "&",
                title: "@",
                placement: "@",
                popupClass: "@",
                animation: "&",
                isOpen: "&"
            },
            templateUrl: "template/popover/popover-html.html",
            link: function(a, b) {
                b.addClass("popover")
            }
        }
    }).directive("uibPopoverHtml", ["$uibTooltip", function(a) {
        return a("uibPopoverHtml", "popover", "click", {
            useContentExp: !0
        })
    }]).directive("uibPopoverPopup", function() {
        return {
            replace: !0,
            scope: {
                title: "@",
                content: "@",
                placement: "@",
                popupClass: "@",
                animation: "&",
                isOpen: "&"
            },
            templateUrl: "template/popover/popover.html",
            link: function(a, b) {
                b.addClass("popover")
            }
        }
    }).directive("uibPopover", ["$uibTooltip", function(a) {
        return a("uibPopover", "popover", "click")
    }]), angular.module("ui.bootstrap.popover").value("$popoverSuppressWarning", !
        1).directive("popoverTemplatePopup", ["$log", "$popoverSuppressWarning",
        function(a, b) {
            return {
                replace: !0,
                scope: {
                    title: "@",
                    contentExp: "&",
                    placement: "@",
                    popupClass: "@",
                    animation: "&",
                    isOpen: "&",
                    originScope: "&"
                },
                templateUrl: "template/popover/popover-template.html",
                link: function(c, d) {
                    b || a.warn(
                        "popover-template-popup is now deprecated. Use uib-popover-template-popup instead."
                    ), d.addClass("popover")
                }
            }
        }
    ]).directive("popoverTemplate", ["$tooltip", function(a) {
        return a("popoverTemplate", "popover", "click", {
            useContentExp: !0
        })
    }]).directive("popoverHtmlPopup", ["$log", "$popoverSuppressWarning",
        function(a, b) {
            return {
                replace: !0,
                scope: {
                    contentExp: "&",
                    title: "@",
                    placement: "@",
                    popupClass: "@",
                    animation: "&",
                    isOpen: "&"
                },
                templateUrl: "template/popover/popover-html.html",
                link: function(c, d) {
                    b || a.warn(
                        "popover-html-popup is now deprecated. Use uib-popover-html-popup instead."
                    ), d.addClass("popover")
                }
            }
        }
    ]).directive("popoverHtml", ["$tooltip", function(a) {
        return a("popoverHtml", "popover", "click", {
            useContentExp: !0
        })
    }]).directive("popoverPopup", ["$log", "$popoverSuppressWarning", function(
        a, b) {
        return {
            replace: !0,
            scope: {
                title: "@",
                content: "@",
                placement: "@",
                popupClass: "@",
                animation: "&",
                isOpen: "&"
            },
            templateUrl: "template/popover/popover.html",
            link: function(c, d) {
                b || a.warn(
                    "popover-popup is now deprecated. Use uib-popover-popup instead."
                ), d.addClass("popover")
            }
        }
    }]).directive("popover", ["$tooltip", function(a) {
        return a("popover", "popover", "click")
    }]), angular.module("ui.bootstrap.progressbar", []).constant(
        "uibProgressConfig", {
            animate: !0,
            max: 100
        }).controller("UibProgressController", ["$scope", "$attrs",
        "uibProgressConfig",
        function(a, b, c) {
            var d = this,
                e = angular.isDefined(b.animate) ? a.$parent.$eval(b.animate) :
                c.animate;
            this.bars = [], a.max = angular.isDefined(a.max) ? a.max : c.max,
                this.addBar = function(b, c, f) {
                    e || c.css({
                            transition: "none"
                        }), this.bars.push(b), b.max = a.max, b.title = f &&
                        angular.isDefined(f.title) ? f.title :
                        "progressbar", b.$watch("value", function(a) {
                            b.recalculatePercentage()
                        }), b.recalculatePercentage = function() {
                            var a = d.bars.reduce(function(a, b) {
                                return b.percent = +(100 * b.value /
                                    b.max).toFixed(2), a + b.percent
                            }, 0);
                            a > 100 && (b.percent -= a - 100)
                        }, b.$on("$destroy", function() {
                            c = null, d.removeBar(b)
                        })
                }, this.removeBar = function(a) {
                    this.bars.splice(this.bars.indexOf(a), 1), this.bars.forEach(
                        function(a) {
                            a.recalculatePercentage()
                        })
                }, a.$watch("max", function(b) {
                    d.bars.forEach(function(b) {
                        b.max = a.max, b.recalculatePercentage()
                    })
                })
        }
    ]).directive("uibProgress", function() {
        return {
            replace: !0,
            transclude: !0,
            controller: "UibProgressController",
            require: "uibProgress",
            scope: {
                max: "=?"
            },
            templateUrl: "template/progressbar/progress.html"
        }
    }).directive("uibBar", function() {
        return {
            replace: !0,
            transclude: !0,
            require: "^uibProgress",
            scope: {
                value: "=",
                type: "@"
            },
            templateUrl: "template/progressbar/bar.html",
            link: function(a, b, c, d) {
                d.addBar(a, b, c)
            }
        }
    }).directive("uibProgressbar", function() {
        return {
            replace: !0,
            transclude: !0,
            controller: "UibProgressController",
            scope: {
                value: "=",
                max: "=?",
                type: "@"
            },
            templateUrl: "template/progressbar/progressbar.html",
            link: function(a, b, c, d) {
                d.addBar(a, angular.element(b.children()[0]), {
                    title: c.title
                })
            }
        }
    }), angular.module("ui.bootstrap.progressbar").value(
        "$progressSuppressWarning", !1).controller("ProgressController", [
        "$scope", "$attrs", "uibProgressConfig", "$log",
        "$progressSuppressWarning",
        function(a, b, c, d, e) {
            e || d.warn(
                "ProgressController is now deprecated. Use UibProgressController instead."
            );
            var f = this,
                g = angular.isDefined(b.animate) ? a.$parent.$eval(b.animate) :
                c.animate;
            this.bars = [], a.max = angular.isDefined(a.max) ? a.max : c.max,
                this.addBar = function(b, c, d) {
                    g || c.css({
                            transition: "none"
                        }), this.bars.push(b), b.max = a.max, b.title = d &&
                        angular.isDefined(d.title) ? d.title :
                        "progressbar", b.$watch("value", function(a) {
                            b.recalculatePercentage()
                        }), b.recalculatePercentage = function() {
                            b.percent = +(100 * b.value / b.max).toFixed(2);
                            var a = f.bars.reduce(function(a, b) {
                                return a + b.percent
                            }, 0);
                            a > 100 && (b.percent -= a - 100)
                        }, b.$on("$destroy", function() {
                            c = null, f.removeBar(b)
                        })
                }, this.removeBar = function(a) {
                    this.bars.splice(this.bars.indexOf(a), 1)
                }, a.$watch("max", function(b) {
                    f.bars.forEach(function(b) {
                        b.max = a.max, b.recalculatePercentage()
                    })
                })
        }
    ]).directive("progress", ["$log", "$progressSuppressWarning", function(a, b) {
        return {
            replace: !0,
            transclude: !0,
            controller: "ProgressController",
            require: "progress",
            scope: {
                max: "=?",
                title: "@?"
            },
            templateUrl: "template/progressbar/progress.html",
            link: function() {
                b || a.warn(
                    "progress is now deprecated. Use uib-progress instead."
                )
            }
        }
    }]).directive("bar", ["$log", "$progressSuppressWarning", function(a, b) {
        return {
            replace: !0,
            transclude: !0,
            require: "^progress",
            scope: {
                value: "=",
                type: "@"
            },
            templateUrl: "template/progressbar/bar.html",
            link: function(c, d, e, f) {
                b || a.warn(
                    "bar is now deprecated. Use uib-bar instead."
                ), f.addBar(c, d)
            }
        }
    }]).directive("progressbar", ["$log", "$progressSuppressWarning", function(
        a, b) {
        return {
            replace: !0,
            transclude: !0,
            controller: "ProgressController",
            scope: {
                value: "=",
                max: "=?",
                type: "@"
            },
            templateUrl: "template/progressbar/progressbar.html",
            link: function(c, d, e, f) {
                b || a.warn(
                    "progressbar is now deprecated. Use uib-progressbar instead."
                ), f.addBar(c, angular.element(d.children()[0]), {
                    title: e.title
                })
            }
        }
    }]), angular.module("ui.bootstrap.rating", []).constant("uibRatingConfig", {
        max: 5,
        stateOn: null,
        stateOff: null,
        titles: ["one", "two", "three", "four", "five"]
    }).controller("UibRatingController", ["$scope", "$attrs", "uibRatingConfig",
        function(a, b, c) {
            var d = {
                $setViewValue: angular.noop
            };
            this.init = function(e) {
                d = e, d.$render = this.render, d.$formatters.push(
                        function(a) {
                            return angular.isNumber(a) && a << 0 !== a &&
                                (a = Math.round(a)), a
                        }), this.stateOn = angular.isDefined(b.stateOn) ?
                    a.$parent.$eval(b.stateOn) : c.stateOn, this.stateOff =
                    angular.isDefined(b.stateOff) ? a.$parent.$eval(b.stateOff) :
                    c.stateOff;
                var f = angular.isDefined(b.titles) ? a.$parent.$eval(b
                    .titles) : c.titles;
                this.titles = angular.isArray(f) && f.length > 0 ? f :
                    c.titles;
                var g = angular.isDefined(b.ratingStates) ? a.$parent.$eval(
                    b.ratingStates) : new Array(angular.isDefined(b
                    .max) ? a.$parent.$eval(b.max) : c.max);
                a.range = this.buildTemplateObjects(g)
            }, this.buildTemplateObjects = function(a) {
                for (var b = 0, c = a.length; c > b; b++) a[b] =
                    angular.extend({
                        index: b
                    }, {
                        stateOn: this.stateOn,
                        stateOff: this.stateOff,
                        title: this.getTitle(b)
                    }, a[b]);
                return a
            }, this.getTitle = function(a) {
                return a >= this.titles.length ? a + 1 : this.titles[a]
            }, a.rate = function(b) {
                !a.readonly && b >= 0 && b <= a.range.length && (d.$setViewValue(
                    d.$viewValue === b ? 0 : b), d.$render())
            }, a.enter = function(b) {
                a.readonly || (a.value = b), a.onHover({
                    value: b
                })
            }, a.reset = function() {
                a.value = d.$viewValue, a.onLeave()
            }, a.onKeydown = function(b) {
                /(37|38|39|40)/.test(b.which) && (b.preventDefault(), b
                    .stopPropagation(), a.rate(a.value + (38 === b.which ||
                        39 === b.which ? 1 : -1)))
            }, this.render = function() {
                a.value = d.$viewValue
            }
        }
    ]).directive("uibRating", function() {
        return {
            require: ["uibRating", "ngModel"],
            scope: {
                readonly: "=?",
                onHover: "&",
                onLeave: "&"
            },
            controller: "UibRatingController",
            templateUrl: "template/rating/rating.html",
            replace: !0,
            link: function(a, b, c, d) {
                var e = d[0],
                    f = d[1];
                e.init(f)
            }
        }
    }), angular.module("ui.bootstrap.rating").value("$ratingSuppressWarning", !
        1).controller("RatingController", ["$scope", "$attrs", "$controller",
        "$log", "$ratingSuppressWarning",
        function(a, b, c, d, e) {
            e || d.warn(
                "RatingController is now deprecated. Use UibRatingController instead."
            ), angular.extend(this, c("UibRatingController", {
                $scope: a,
                $attrs: b
            }))
        }
    ]).directive("rating", ["$log", "$ratingSuppressWarning", function(a, b) {
        return {
            require: ["rating", "ngModel"],
            scope: {
                readonly: "=?",
                onHover: "&",
                onLeave: "&"
            },
            controller: "RatingController",
            templateUrl: "template/rating/rating.html",
            replace: !0,
            link: function(c, d, e, f) {
                b || a.warn(
                    "rating is now deprecated. Use uib-rating instead."
                );
                var g = f[0],
                    h = f[1];
                g.init(h)
            }
        }
    }]), angular.module("ui.bootstrap.tabs", []).controller(
        "UibTabsetController", ["$scope", function(a) {
            var b = this,
                c = b.tabs = a.tabs = [];
            b.select = function(a) {
                angular.forEach(c, function(b) {
                    b.active && b !== a && (b.active = !1, b.onDeselect(),
                        a.selectCalled = !1)
                }), a.active = !0, a.selectCalled || (a.onSelect(),
                    a.selectCalled = !0)
            }, b.addTab = function(a) {
                c.push(a), 1 === c.length && a.active !== !1 ? a.active = !
                    0 : a.active ? b.select(a) : a.active = !1
            }, b.removeTab = function(a) {
                var e = c.indexOf(a);
                if (a.active && c.length > 1 && !d) {
                    var f = e == c.length - 1 ? e - 1 : e + 1;
                    b.select(c[f])
                }
                c.splice(e, 1)
            };
            var d;
            a.$on("$destroy", function() {
                d = !0
            })
        }]).directive("uibTabset", function() {
        return {
            restrict: "EA",
            transclude: !0,
            replace: !0,
            scope: {
                type: "@"
            },
            controller: "UibTabsetController",
            templateUrl: "template/tabs/tabset.html",
            link: function(a, b, c) {
                a.vertical = angular.isDefined(c.vertical) ? a.$parent.$eval(
                        c.vertical) : !1, a.justified = angular.isDefined(
                        c.justified) ? a.$parent.$eval(c.justified) : !
                    1
            }
        }
    }).directive("uibTab", ["$parse", function(a) {
        return {
            require: "^uibTabset",
            restrict: "EA",
            replace: !0,
            templateUrl: "template/tabs/tab.html",
            transclude: !0,
            scope: {
                active: "=?",
                heading: "@",
                onSelect: "&select",
                onDeselect: "&deselect"
            },
            controller: function() {},
            link: function(b, c, d, e, f) {
                b.$watch("active", function(a) {
                    a && e.select(b)
                }), b.disabled = !1, d.disable && b.$parent.$watch(
                    a(d.disable),
                    function(a) {
                        b.disabled = !!a
                    }), b.select = function() {
                    b.disabled || (b.active = !0)
                }, e.addTab(b), b.$on("$destroy", function() {
                    e.removeTab(b)
                }), b.$transcludeFn = f
            }
        }
    }]).directive("uibTabHeadingTransclude", function() {
        return {
            restrict: "A",
            require: ["?^uibTab", "?^tab"],
            link: function(a, b) {
                a.$watch("headingElement", function(a) {
                    a && (b.html(""), b.append(a))
                })
            }
        }
    }).directive("uibTabContentTransclude", function() {
        function a(a) {
            return a.tagName && (a.hasAttribute("tab-heading") || a.hasAttribute(
                    "data-tab-heading") || a.hasAttribute(
                    "x-tab-heading") || a.hasAttribute(
                    "uib-tab-heading") || a.hasAttribute(
                    "data-uib-tab-heading") || a.hasAttribute(
                    "x-uib-tab-heading") || "tab-heading" === a.tagName
                .toLowerCase() || "data-tab-heading" === a.tagName.toLowerCase() ||
                "x-tab-heading" === a.tagName.toLowerCase() ||
                "uib-tab-heading" === a.tagName.toLowerCase() ||
                "data-uib-tab-heading" === a.tagName.toLowerCase() ||
                "x-uib-tab-heading" === a.tagName.toLowerCase())
        }
        return {
            restrict: "A",
            require: ["?^uibTabset", "?^tabset"],
            link: function(b, c, d) {
                var e = b.$eval(d.uibTabContentTransclude);
                e.$transcludeFn(e.$parent, function(b) {
                    angular.forEach(b, function(b) {
                        a(b) ? e.headingElement = b : c
                            .append(b)
                    })
                })
            }
        }
    }), angular.module("ui.bootstrap.tabs").value("$tabsSuppressWarning", !1).controller(
        "TabsetController", ["$scope", "$controller", "$log",
            "$tabsSuppressWarning",
            function(a, b, c, d) {
                d || c.warn(
                    "TabsetController is now deprecated. Use UibTabsetController instead."
                ), angular.extend(this, b("UibTabsetController", {
                    $scope: a
                }))
            }
        ]).directive("tabset", ["$log", "$tabsSuppressWarning", function(a, b) {
        return {
            restrict: "EA",
            transclude: !0,
            replace: !0,
            scope: {
                type: "@"
            },
            controller: "TabsetController",
            templateUrl: "template/tabs/tabset.html",
            link: function(c, d, e) {
                b || a.warn(
                        "tabset is now deprecated. Use uib-tabset instead."
                    ), c.vertical = angular.isDefined(e.vertical) ?
                    c.$parent.$eval(e.vertical) : !1, c.justified =
                    angular.isDefined(e.justified) ? c.$parent.$eval(
                        e.justified) : !1
            }
        }
    }]).directive("tab", ["$parse", "$log", "$tabsSuppressWarning", function(a,
        b, c) {
        return {
            require: "^tabset",
            restrict: "EA",
            replace: !0,
            templateUrl: "template/tabs/tab.html",
            transclude: !0,
            scope: {
                active: "=?",
                heading: "@",
                onSelect: "&select",
                onDeselect: "&deselect"
            },
            controller: function() {},
            link: function(d, e, f, g, h) {
                c || b.warn(
                    "tab is now deprecated. Use uib-tab instead."
                ), d.$watch("active", function(a) {
                    a && g.select(d)
                }), d.disabled = !1, f.disable && d.$parent.$watch(
                    a(f.disable),
                    function(a) {
                        d.disabled = !!a
                    }), d.select = function() {
                    d.disabled || (d.active = !0)
                }, g.addTab(d), d.$on("$destroy", function() {
                    g.removeTab(d)
                }), d.$transcludeFn = h
            }
        }
    }]).directive("tabHeadingTransclude", ["$log", "$tabsSuppressWarning",
        function(a, b) {
            return {
                restrict: "A",
                require: "^tab",
                link: function(c, d) {
                    b || a.warn(
                        "tab-heading-transclude is now deprecated. Use uib-tab-heading-transclude instead."
                    ), c.$watch("headingElement", function(a) {
                        a && (d.html(""), d.append(a))
                    })
                }
            }
        }
    ]).directive("tabContentTransclude", ["$log", "$tabsSuppressWarning",
        function(a, b) {
            function c(a) {
                return a.tagName && (a.hasAttribute("tab-heading") || a.hasAttribute(
                        "data-tab-heading") || a.hasAttribute(
                        "x-tab-heading") || "tab-heading" === a.tagName
                    .toLowerCase() || "data-tab-heading" === a.tagName.toLowerCase() ||
                    "x-tab-heading" === a.tagName.toLowerCase())
            }
            return {
                restrict: "A",
                require: "^tabset",
                link: function(d, e, f) {
                    b || a.warn(
                        "tab-content-transclude is now deprecated. Use uib-tab-content-transclude instead."
                    );
                    var g = d.$eval(f.tabContentTransclude);
                    g.$transcludeFn(g.$parent, function(a) {
                        angular.forEach(a, function(a) {
                            c(a) ? g.headingElement = a :
                                e.append(a)
                        })
                    })
                }
            }
        }
    ]), angular.module("ui.bootstrap.timepicker", []).constant(
        "uibTimepickerConfig", {
            hourStep: 1,
            minuteStep: 1,
            showMeridian: !0,
            meridians: null,
            readonlyInput: !1,
            mousewheel: !0,
            arrowkeys: !0,
            showSpinners: !0
        }).controller("UibTimepickerController", ["$scope", "$element",
        "$attrs", "$parse", "$log", "$locale", "uibTimepickerConfig",
        function(a, b, c, d, e, f, g) {
            function h() {
                var b = parseInt(a.hours, 10),
                    c = a.showMeridian ? b > 0 && 13 > b : b >= 0 && 24 > b;
                return c ? (a.showMeridian && (12 === b && (b = 0), a.meridian ===
                    r[1] && (b += 12)), b) : void 0
            }

            function i() {
                var b = parseInt(a.minutes, 10);
                return b >= 0 && 60 > b ? b : void 0
            }

            function j(a) {
                return angular.isDefined(a) && a.toString().length < 2 ?
                    "0" + a : a.toString()
            }

            function k(a) {
                l(), q.$setViewValue(new Date(p)), m(a)
            }

            function l() {
                q.$setValidity("time", !0), a.invalidHours = !1, a.invalidMinutes = !
                    1
            }

            function m(b) {
                var c = p.getHours(),
                    d = p.getMinutes();
                a.showMeridian && (c = 0 === c || 12 === c ? 12 : c % 12),
                    a.hours = "h" === b ? c : j(c), "m" !== b && (a.minutes =
                        j(d)), a.meridian = p.getHours() < 12 ? r[0] : r[1]
            }

            function n(a, b) {
                var c = new Date(a.getTime() + 6e4 * b),
                    d = new Date(a);
                return d.setHours(c.getHours(), c.getMinutes()), d
            }

            function o(a) {
                p = n(p, a), k()
            }
            var p = new Date,
                q = {
                    $setViewValue: angular.noop
                },
                r = angular.isDefined(c.meridians) ? a.$parent.$eval(c.meridians) :
                g.meridians || f.DATETIME_FORMATS.AMPMS;
            a.tabindex = angular.isDefined(c.tabindex) ? c.tabindex : 0, b.removeAttr(
                "tabindex"), this.init = function(b, d) {
                q = b, q.$render = this.render, q.$formatters.unshift(
                    function(a) {
                        return a ? new Date(a) : null
                    });
                var e = d.eq(0),
                    f = d.eq(1),
                    h = angular.isDefined(c.mousewheel) ? a.$parent.$eval(
                        c.mousewheel) : g.mousewheel;
                h && this.setupMousewheelEvents(e, f);
                var i = angular.isDefined(c.arrowkeys) ? a.$parent.$eval(
                    c.arrowkeys) : g.arrowkeys;
                i && this.setupArrowkeyEvents(e, f), a.readonlyInput =
                    angular.isDefined(c.readonlyInput) ? a.$parent.$eval(
                        c.readonlyInput) : g.readonlyInput, this.setupInputEvents(
                        e, f)
            };
            var s = g.hourStep;
            c.hourStep && a.$parent.$watch(d(c.hourStep), function(a) {
                s = parseInt(a, 10)
            });
            var t = g.minuteStep;
            c.minuteStep && a.$parent.$watch(d(c.minuteStep), function(a) {
                t = parseInt(a, 10)
            });
            var u;
            a.$parent.$watch(d(c.min), function(a) {
                var b = new Date(a);
                u = isNaN(b) ? void 0 : b
            });
            var v;
            a.$parent.$watch(d(c.max), function(a) {
                    var b = new Date(a);
                    v = isNaN(b) ? void 0 : b
                }), a.noIncrementHours = function() {
                    var a = n(p, 60 * s);
                    return a > v || p > a && u > a
                }, a.noDecrementHours = function() {
                    var a = n(p, 60 * -s);
                    return u > a || a > p && a > v
                }, a.noIncrementMinutes = function() {
                    var a = n(p, t);
                    return a > v || p > a && u > a
                }, a.noDecrementMinutes = function() {
                    var a = n(p, -t);
                    return u > a || a > p && a > v
                }, a.noToggleMeridian = function() {
                    return p.getHours() < 13 ? n(p, 720) > v : n(p, -720) <
                        u
                }, a.showMeridian = g.showMeridian, c.showMeridian && a.$parent
                .$watch(d(c.showMeridian), function(b) {
                    if (a.showMeridian = !!b, q.$error.time) {
                        var c = h(),
                            d = i();
                        angular.isDefined(c) && angular.isDefined(d) &&
                            (p.setHours(c), k())
                    } else m()
                }), this.setupMousewheelEvents = function(b, c) {
                    var d = function(a) {
                        a.originalEvent && (a = a.originalEvent);
                        var b = a.wheelDelta ? a.wheelDelta : -a.deltaY;
                        return a.detail || b > 0
                    };
                    b.bind("mousewheel wheel", function(b) {
                        a.$apply(d(b) ? a.incrementHours() : a.decrementHours()),
                            b.preventDefault()
                    }), c.bind("mousewheel wheel", function(b) {
                        a.$apply(d(b) ? a.incrementMinutes() : a.decrementMinutes()),
                            b.preventDefault()
                    })
                }, this.setupArrowkeyEvents = function(b, c) {
                    b.bind("keydown", function(b) {
                        38 === b.which ? (b.preventDefault(), a.incrementHours(),
                            a.$apply()) : 40 === b.which && (b.preventDefault(),
                            a.decrementHours(), a.$apply())
                    }), c.bind("keydown", function(b) {
                        38 === b.which ? (b.preventDefault(), a.incrementMinutes(),
                            a.$apply()) : 40 === b.which && (b.preventDefault(),
                            a.decrementMinutes(), a.$apply())
                    })
                }, this.setupInputEvents = function(b, c) {
                    if (a.readonlyInput) return a.updateHours = angular.noop,
                        void(a.updateMinutes = angular.noop);
                    var d = function(b, c) {
                        q.$setViewValue(null), q.$setValidity("time", !
                            1), angular.isDefined(b) && (a.invalidHours =
                            b), angular.isDefined(c) && (a.invalidMinutes =
                            c)
                    };
                    a.updateHours = function() {
                        var a = h(),
                            b = i();
                        angular.isDefined(a) && angular.isDefined(b) ?
                            (p.setHours(a), u > p || p > v ? d(!0) : k(
                                "h")) : d(!0)
                    }, b.bind("blur", function(b) {
                        !a.invalidHours && a.hours < 10 && a.$apply(
                            function() {
                                a.hours = j(a.hours)
                            })
                    }), a.updateMinutes = function() {
                        var a = i(),
                            b = h();
                        angular.isDefined(a) && angular.isDefined(b) ?
                            (p.setMinutes(a), u > p || p > v ? d(void 0, !
                                0) : k("m")) : d(void 0, !0)
                    }, c.bind("blur", function(b) {
                        !a.invalidMinutes && a.minutes < 10 && a.$apply(
                            function() {
                                a.minutes = j(a.minutes)
                            })
                    })
                }, this.render = function() {
                    var b = q.$viewValue;
                    isNaN(b) ? (q.$setValidity("time", !1), e.error(
                        'Timepicker directive: "ng-model" value must be a Date object, a number of milliseconds since 01.01.1970 or a string representing an RFC2822 or ISO 8601 date.'
                    )) : (b && (p = b), u > p || p > v ? (q.$setValidity(
                            "time", !1), a.invalidHours = !0, a.invalidMinutes = !
                        0) : l(), m())
                }, a.showSpinners = angular.isDefined(c.showSpinners) ? a.$parent
                .$eval(c.showSpinners) : g.showSpinners, a.incrementHours =
                function() {
                    a.noIncrementHours() || o(60 * s)
                }, a.decrementHours = function() {
                    a.noDecrementHours() || o(60 * -s)
                }, a.incrementMinutes = function() {
                    a.noIncrementMinutes() || o(t)
                }, a.decrementMinutes = function() {
                    a.noDecrementMinutes() || o(-t)
                }, a.toggleMeridian = function() {
                    a.noToggleMeridian() || o(720 * (p.getHours() < 12 ? 1 :
                        -1))
                }
        }
    ]).directive("uibTimepicker", function() {
        return {
            restrict: "EA",
            require: ["uibTimepicker", "?^ngModel"],
            controller: "UibTimepickerController",
            controllerAs: "timepicker",
            replace: !0,
            scope: {},
            templateUrl: function(a, b) {
                return b.templateUrl ||
                    "template/timepicker/timepicker.html"
            },
            link: function(a, b, c, d) {
                var e = d[0],
                    f = d[1];
                f && e.init(f, b.find("input"))
            }
        }
    }), angular.module("ui.bootstrap.timepicker").value(
        "$timepickerSuppressWarning", !1).controller("TimepickerController", [
        "$scope", "$element", "$attrs", "$controller", "$log",
        "$timepickerSuppressWarning",
        function(a, b, c, d, e, f) {
            f || e.warn(
                "TimepickerController is now deprecated. Use UibTimepickerController instead."
            ), angular.extend(this, d("UibTimepickerController", {
                $scope: a,
                $element: b,
                $attrs: c
            }))
        }
    ]).directive("timepicker", ["$log", "$timepickerSuppressWarning", function(
        a, b) {
        return {
            restrict: "EA",
            require: ["timepicker", "?^ngModel"],
            controller: "TimepickerController",
            controllerAs: "timepicker",
            replace: !0,
            scope: {},
            templateUrl: function(a, b) {
                return b.templateUrl ||
                    "template/timepicker/timepicker.html"
            },
            link: function(c, d, e, f) {
                b || a.warn(
                    "timepicker is now deprecated. Use uib-timepicker instead."
                );
                var g = f[0],
                    h = f[1];
                h && g.init(h, d.find("input"))
            }
        }
    }]), angular.module("ui.bootstrap.typeahead", ["ui.bootstrap.position"]).factory(
        "uibTypeaheadParser", ["$parse", function(a) {
            var b =
                /^\s*([\s\S]+?)(?:\s+as\s+([\s\S]+?))?\s+for\s+(?:([\$\w][\$\w\d]*))\s+in\s+([\s\S]+?)$/;
            return {
                parse: function(c) {
                    var d = c.match(b);
                    if (!d) throw new Error(
                        'Expected typeahead specification in form of "_modelValue_ (as _label_)? for _item_ in _collection_" but got "' +
                        c + '".');
                    return {
                        itemName: d[3],
                        source: a(d[4]),
                        viewMapper: a(d[2] || d[1]),
                        modelMapper: a(d[1])
                    }
                }
            }
        }]).controller("UibTypeaheadController", ["$scope", "$element",
        "$attrs", "$compile", "$parse", "$q", "$timeout", "$document",
        "$window", "$rootScope", "$uibPosition", "uibTypeaheadParser",
        function(a, b, c, d, e, f, g, h, i, j, k, l) {
            function m() {
                K.moveInProgress || (K.moveInProgress = !0, K.$digest()), S &&
                    g.cancel(S), S = g(function() {
                        K.matches.length && n(), K.moveInProgress = !1
                    }, r)
            }

            function n() {
                K.position = C ? k.offset(b) : k.position(b), K.position.top +=
                    b.prop("offsetHeight")
            }
            var o, p, q = [9, 13, 27, 38, 40],
                r = 200,
                s = a.$eval(c.typeaheadMinLength);
            s || 0 === s || (s = 1);
            var t, u, v = a.$eval(c.typeaheadWaitMs) || 0,
                w = a.$eval(c.typeaheadEditable) !== !1,
                x = e(c.typeaheadLoading).assign || angular.noop,
                y = e(c.typeaheadOnSelect),
                z = angular.isDefined(c.typeaheadSelectOnBlur) ? a.$eval(c.typeaheadSelectOnBlur) :
                !1,
                A = e(c.typeaheadNoResults).assign || angular.noop,
                B = c.typeaheadInputFormatter ? e(c.typeaheadInputFormatter) :
                void 0,
                C = c.typeaheadAppendToBody ? a.$eval(c.typeaheadAppendToBody) :
                !1,
                D = c.typeaheadAppendToElementId || !1,
                E = a.$eval(c.typeaheadFocusFirst) !== !1,
                F = c.typeaheadSelectOnExact ? a.$eval(c.typeaheadSelectOnExact) :
                !1,
                G = e(c.ngModel),
                H = e(c.ngModel + "($$$p)"),
                I = function(b, c) {
                    return angular.isFunction(G(a)) && p && p.$options && p
                        .$options.getterSetter ? H(b, {
                            $$$p: c
                        }) : G.assign(b, c)
                },
                J = l.parse(c.uibTypeahead),
                K = a.$new(),
                L = a.$on("$destroy", function() {
                    K.$destroy()
                });
            K.$on("$destroy", L);
            var M = "typeahead-" + K.$id + "-" + Math.floor(1e4 * Math.random());
            b.attr({
                "aria-autocomplete": "list",
                "aria-expanded": !1,
                "aria-owns": M
            });
            var N = angular.element("<div uib-typeahead-popup></div>");
            N.attr({
                id: M,
                matches: "matches",
                active: "activeIdx",
                select: "select(activeIdx)",
                "move-in-progress": "moveInProgress",
                query: "query",
                position: "position"
            }), angular.isDefined(c.typeaheadTemplateUrl) && N.attr(
                "template-url", c.typeaheadTemplateUrl), angular.isDefined(
                c.typeaheadPopupTemplateUrl) && N.attr(
                "popup-template-url", c.typeaheadPopupTemplateUrl);
            var O = function() {
                    K.matches = [], K.activeIdx = -1, b.attr(
                        "aria-expanded", !1)
                },
                P = function(a) {
                    return M + "-option-" + a
                };
            K.$watch("activeIdx", function(a) {
                0 > a ? b.removeAttr("aria-activedescendant") : b.attr(
                    "aria-activedescendant", P(a))
            });
            var Q = function(a, b) {
                    return K.matches.length > b && a ? a.toUpperCase() ===
                        K.matches[b].label.toUpperCase() : !1
                },
                R = function(c) {
                    var d = {
                        $viewValue: c
                    };
                    x(a, !0), A(a, !1), f.when(J.source(a, d)).then(
                        function(e) {
                            var f = c === o.$viewValue;
                            if (f && t)
                                if (e && e.length > 0) {
                                    K.activeIdx = E ? 0 : -1, A(a, !1),
                                        K.matches.length = 0;
                                    for (var g = 0; g < e.length; g++) d[
                                            J.itemName] = e[g], K.matches
                                        .push({
                                            id: P(g),
                                            label: J.viewMapper(K,
                                                d),
                                            model: e[g]
                                        });
                                    K.query = c, n(), b.attr(
                                            "aria-expanded", !0), F &&
                                        1 === K.matches.length && Q(c,
                                            0) && K.select(0)
                                } else O(), A(a, !0);
                            f && x(a, !1)
                        },
                        function() {
                            O(), x(a, !1), A(a, !0)
                        })
                };
            C && (angular.element(i).bind("resize", m), h.find("body").bind(
                "scroll", m));
            var S;
            K.moveInProgress = !1, K.query = void 0;
            var T, U = function(a) {
                    T = g(function() {
                        R(a)
                    }, v)
                },
                V = function() {
                    T && g.cancel(T)
                };
            O(), K.select = function(d) {
                var e, f, h = {};
                u = !0, h[J.itemName] = f = K.matches[d].model, e = J.modelMapper(
                        a, h), I(a, e), o.$setValidity("editable", !0),
                    o.$setValidity("parse", !0), y(a, {
                        $item: f,
                        $model: e,
                        $label: J.viewMapper(a, h)
                    }), O(), K.$eval(c.typeaheadFocusOnSelect) !== !1 &&
                    g(function() {
                        b[0].focus()
                    }, 0, !1)
            }, b.bind("keydown", function(a) {
                if (0 !== K.matches.length && -1 !== q.indexOf(a.which)) {
                    if (-1 === K.activeIdx && (9 === a.which || 13 ===
                            a.which)) return O(), void K.$digest();
                    a.preventDefault(), 40 === a.which ? (K.activeIdx =
                            (K.activeIdx + 1) % K.matches.length, K
                            .$digest()) : 38 === a.which ? (K.activeIdx =
                            (K.activeIdx > 0 ? K.activeIdx : K.matches
                                .length) - 1, K.$digest()) : 13 ===
                        a.which || 9 === a.which ? K.$apply(
                            function() {
                                K.select(K.activeIdx)
                            }) : 27 === a.which && (a.stopPropagation(),
                            O(), K.$digest())
                }
            }), b.bind("blur", function() {
                z && K.matches.length && -1 !== K.activeIdx && !u &&
                    (u = !0, K.$apply(function() {
                        K.select(K.activeIdx)
                    })), t = !1, u = !1
            });
            var W = function(a) {
                b[0] !== a.target && 3 !== a.which && 0 !== K.matches.length &&
                    (O(), j.$$phase || K.$digest())
            };
            h.bind("click", W), a.$on("$destroy", function() {
                h.unbind("click", W), (C || D) && X.remove(), C &&
                    (angular.element(i).unbind("resize", m), h.find(
                        "body").unbind("scroll", m)), N.remove()
            });
            var X = d(N)(K);
            C ? h.find("body").append(X) : D !== !1 ? angular.element(h[0].getElementById(
                D)).append(X) : b.after(X), this.init = function(b, c) {
                o = b, p = c, o.$parsers.unshift(function(b) {
                    return t = !0, 0 === s || b && b.length >=
                        s ? v > 0 ? (V(), U(b)) : R(b) : (x(a, !
                            1), V(), O()), w ? b : b ? void o.$setValidity(
                            "editable", !1) : (o.$setValidity(
                            "editable", !0), null)
                }), o.$formatters.push(function(b) {
                    var c, d, e = {};
                    return w || o.$setValidity("editable", !0),
                        B ? (e.$model = b, B(a, e)) : (e[J.itemName] =
                            b, c = J.viewMapper(a, e), e[J.itemName] =
                            void 0, d = J.viewMapper(a, e), c !==
                            d ? c : b)
                })
            }
        }
    ]).directive("uibTypeahead", function() {
        return {
            controller: "UibTypeaheadController",
            require: ["ngModel", "^?ngModelOptions", "uibTypeahead"],
            link: function(a, b, c, d) {
                d[2].init(d[0], d[1])
            }
        }
    }).directive("uibTypeaheadPopup", function() {
        return {
            scope: {
                matches: "=",
                query: "=",
                active: "=",
                position: "&",
                moveInProgress: "=",
                select: "&"
            },
            replace: !0,
            templateUrl: function(a, b) {
                return b.popupTemplateUrl ||
                    "template/typeahead/typeahead-popup.html"
            },
            link: function(a, b, c) {
                a.templateUrl = c.templateUrl, a.isOpen = function() {
                    return a.matches.length > 0
                }, a.isActive = function(b) {
                    return a.active == b
                }, a.selectActive = function(b) {
                    a.active = b
                }, a.selectMatch = function(b) {
                    a.select({
                        activeIdx: b
                    })
                }
            }
        }
    }).directive("uibTypeaheadMatch", ["$templateRequest", "$compile", "$parse",
        function(a, b, c) {
            return {
                scope: {
                    index: "=",
                    match: "=",
                    query: "="
                },
                link: function(d, e, f) {
                    var g = c(f.templateUrl)(d.$parent) ||
                        "template/typeahead/typeahead-match.html";
                    a(g).then(function(a) {
                        b(a.trim())(d, function(a) {
                            e.replaceWith(a)
                        })
                    })
                }
            }
        }
    ]).filter("uibTypeaheadHighlight", ["$sce", "$injector", "$log", function(a,
        b, c) {
        function d(a) {
            return a.replace(/([.?*+^$[\]\\(){}|-])/g, "\\$1")
        }

        function e(a) {
            return /<.*>/g.test(a)
        }
        var f;
        return f = b.has("$sanitize"),
            function(b, g) {
                return !f && e(b) && c.warn(
                    "Unsafe use of typeahead please use ngSanitize"
                ), b = g ? ("" + b).replace(new RegExp(d(g), "gi"),
                    "<strong>$&</strong>") : b, f || (b = a.trustAsHtml(
                    b)), b
            }
    }]), angular.module("ui.bootstrap.typeahead").value(
        "$typeaheadSuppressWarning", !1).service("typeaheadParser", ["$parse",
        "uibTypeaheadParser", "$log", "$typeaheadSuppressWarning",
        function(a, b, c, d) {
            return d || c.warn(
                "typeaheadParser is now deprecated. Use uibTypeaheadParser instead."
            ), b
        }
    ]).directive("typeahead", ["$compile", "$parse", "$q", "$timeout",
        "$document", "$window", "$rootScope", "$uibPosition",
        "typeaheadParser", "$log", "$typeaheadSuppressWarning",
        function(a, b, c, d, e, f, g, h, i, j, k) {
            var l = [9, 13, 27, 38, 40],
                m = 200;
            return {
                require: ["ngModel", "^?ngModelOptions"],
                link: function(n, o, p, q) {
                    function r() {
                        N.moveInProgress || (N.moveInProgress = !0, N.$digest()),
                            V && d.cancel(V), V = d(function() {
                                N.matches.length && s(), N.moveInProgress = !
                                    1
                            }, m)
                    }

                    function s() {
                        N.position = F ? h.offset(o) : h.position(o), N
                            .position.top += o.prop("offsetHeight")
                    }
                    k || j.warn(
                        "typeahead is now deprecated. Use uib-typeahead instead."
                    );
                    var t = q[0],
                        u = q[1],
                        v = n.$eval(p.typeaheadMinLength);
                    v || 0 === v || (v = 1);
                    var w, x, y = n.$eval(p.typeaheadWaitMs) || 0,
                        z = n.$eval(p.typeaheadEditable) !== !1,
                        A = b(p.typeaheadLoading).assign || angular.noop,
                        B = b(p.typeaheadOnSelect),
                        C = angular.isDefined(p.typeaheadSelectOnBlur) ?
                        n.$eval(p.typeaheadSelectOnBlur) : !1,
                        D = b(p.typeaheadNoResults).assign || angular.noop,
                        E = p.typeaheadInputFormatter ? b(p.typeaheadInputFormatter) :
                        void 0,
                        F = p.typeaheadAppendToBody ? n.$eval(p.typeaheadAppendToBody) :
                        !1,
                        G = p.typeaheadAppendToElementId || !1,
                        H = n.$eval(p.typeaheadFocusFirst) !== !1,
                        I = p.typeaheadSelectOnExact ? n.$eval(p.typeaheadSelectOnExact) :
                        !1,
                        J = b(p.ngModel),
                        K = b(p.ngModel + "($$$p)"),
                        L = function(a, b) {
                            return angular.isFunction(J(n)) && u && u.$options &&
                                u.$options.getterSetter ? K(a, {
                                    $$$p: b
                                }) : J.assign(a, b)
                        },
                        M = i.parse(p.typeahead),
                        N = n.$new(),
                        O = n.$on("$destroy", function() {
                            N.$destroy()
                        });
                    N.$on("$destroy", O);
                    var P = "typeahead-" + N.$id + "-" + Math.floor(1e4 *
                        Math.random());
                    o.attr({
                        "aria-autocomplete": "list",
                        "aria-expanded": !1,
                        "aria-owns": P
                    });
                    var Q = angular.element(
                        "<div typeahead-popup></div>");
                    Q.attr({
                            id: P,
                            matches: "matches",
                            active: "activeIdx",
                            select: "select(activeIdx)",
                            "move-in-progress": "moveInProgress",
                            query: "query",
                            position: "position"
                        }), angular.isDefined(p.typeaheadTemplateUrl) &&
                        Q.attr("template-url", p.typeaheadTemplateUrl),
                        angular.isDefined(p.typeaheadPopupTemplateUrl) &&
                        Q.attr("popup-template-url", p.typeaheadPopupTemplateUrl);
                    var R = function() {
                            N.matches = [], N.activeIdx = -1, o.attr(
                                "aria-expanded", !1)
                        },
                        S = function(a) {
                            return P + "-option-" + a
                        };
                    N.$watch("activeIdx", function(a) {
                        0 > a ? o.removeAttr(
                            "aria-activedescendant") : o.attr(
                            "aria-activedescendant", S(a))
                    });
                    var T = function(a, b) {
                            return N.matches.length > b && a ? a.toUpperCase() ===
                                N.matches[b].label.toUpperCase() : !1
                        },
                        U = function(a) {
                            var b = {
                                $viewValue: a
                            };
                            A(n, !0), D(n, !1), c.when(M.source(n, b)).then(
                                function(c) {
                                    var d = a === t.$viewValue;
                                    if (d && w)
                                        if (c && c.length > 0) {
                                            N.activeIdx = H ? 0 : -
                                                1, D(n, !1), N.matches
                                                .length = 0;
                                            for (var e = 0; e < c.length; e++)
                                                b[M.itemName] = c[e],
                                                N.matches.push({
                                                    id: S(e),
                                                    label: M.viewMapper(
                                                        N,
                                                        b),
                                                    model: c[e]
                                                });
                                            N.query = a, s(), o.attr(
                                                    "aria-expanded", !
                                                    0), I && 1 ===
                                                N.matches.length &&
                                                T(a, 0) && N.select(
                                                    0)
                                        } else R(), D(n, !0);
                                    d && A(n, !1)
                                },
                                function() {
                                    R(), A(n, !1), D(n, !0)
                                })
                        };
                    F && (angular.element(f).bind("resize", r), e.find(
                        "body").bind("scroll", r));
                    var V;
                    N.moveInProgress = !1, R(), N.query = void 0;
                    var W, X = function(a) {
                            W = d(function() {
                                U(a)
                            }, y)
                        },
                        Y = function() {
                            W && d.cancel(W)
                        };
                    t.$parsers.unshift(function(a) {
                        return w = !0, 0 === v || a && a.length >=
                            v ? y > 0 ? (Y(), X(a)) : U(a) : (A(
                                n, !1), Y(), R()), z ? a : a ?
                            void t.$setValidity("editable", !1) :
                            (t.$setValidity("editable", !0),
                                null)
                    }), t.$formatters.push(function(a) {
                        var b, c, d = {};
                        return z || t.$setValidity("editable", !
                                0), E ? (d.$model = a, E(n, d)) :
                            (d[M.itemName] = a, b = M.viewMapper(
                                    n, d), d[M.itemName] = void 0,
                                c = M.viewMapper(n, d), b !== c ?
                                b : a)
                    }), N.select = function(a) {
                        var b, c, e = {};
                        x = !0, e[M.itemName] = c = N.matches[a].model,
                            b = M.modelMapper(n, e), L(n, b), t.$setValidity(
                                "editable", !0), t.$setValidity(
                                "parse", !0), B(n, {
                                $item: c,
                                $model: b,
                                $label: M.viewMapper(n, e)
                            }), R(), N.$eval(p.typeaheadFocusOnSelect) !==
                            !1 && d(function() {
                                o[0].focus()
                            }, 0, !1)
                    }, o.bind("keydown", function(a) {
                        if (0 !== N.matches.length && -1 !== l.indexOf(
                                a.which)) {
                            if (-1 === N.activeIdx && (9 === a.which ||
                                    13 === a.which)) return R(),
                                void N.$digest();
                            a.preventDefault(), 40 === a.which ?
                                (N.activeIdx = (N.activeIdx + 1) %
                                    N.matches.length, N.$digest()
                                ) : 38 === a.which ? (N.activeIdx =
                                    (N.activeIdx > 0 ? N.activeIdx :
                                        N.matches.length) - 1,
                                    N.$digest()) : 13 === a.which ||
                                9 === a.which ? N.$apply(
                                    function() {
                                        N.select(N.activeIdx)
                                    }) : 27 === a.which && (a.stopPropagation(),
                                    R(), N.$digest())
                        }
                    }), o.bind("blur", function() {
                        C && N.matches.length && -1 !== N.activeIdx &&
                            !x && (x = !0, N.$apply(function() {
                                N.select(N.activeIdx)
                            })), w = !1, x = !1
                    });
                    var Z = function(a) {
                        o[0] !== a.target && 3 !== a.which && 0 !==
                            N.matches.length && (R(), g.$$phase ||
                                N.$digest())
                    };
                    e.bind("click", Z), n.$on("$destroy", function() {
                        e.unbind("click", Z), (F || G) && $.remove(),
                            F && (angular.element(f).unbind(
                                    "resize", r), e.find("body")
                                .unbind("scroll", r)), Q.remove()
                    });
                    var $ = a(Q)(N);
                    F ? e.find("body").append($) : G !== !1 ? angular.element(
                        e[0].getElementById(G)).append($) : o.after(
                        $)
                }
            }
        }
    ]).directive("typeaheadPopup", ["$typeaheadSuppressWarning", "$log",
        function(a, b) {
            return {
                scope: {
                    matches: "=",
                    query: "=",
                    active: "=",
                    position: "&",
                    moveInProgress: "=",
                    select: "&"
                },
                replace: !0,
                templateUrl: function(a, b) {
                    return b.popupTemplateUrl ||
                        "template/typeahead/typeahead-popup.html"
                },
                link: function(c, d, e) {
                    a || b.warn(
                            "typeahead-popup is now deprecated. Use uib-typeahead-popup instead."
                        ), c.templateUrl = e.templateUrl, c.isOpen =
                        function() {
                            return c.matches.length > 0
                        }, c.isActive = function(a) {
                            return c.active == a
                        }, c.selectActive = function(a) {
                            c.active = a
                        }, c.selectMatch = function(a) {
                            c.select({
                                activeIdx: a
                            })
                        }
                }
            }
        }
    ]).directive("typeaheadMatch", ["$templateRequest", "$compile", "$parse",
        "$typeaheadSuppressWarning", "$log",
        function(a, b, c, d, e) {
            return {
                restrict: "EA",
                scope: {
                    index: "=",
                    match: "=",
                    query: "="
                },
                link: function(f, g, h) {
                    d || e.warn(
                        "typeahead-match is now deprecated. Use uib-typeahead-match instead."
                    );
                    var i = c(h.templateUrl)(f.$parent) ||
                        "template/typeahead/typeahead-match.html";
                    a(i).then(function(a) {
                        b(a.trim())(f, function(a) {
                            g.replaceWith(a)
                        })
                    })
                }
            }
        }
    ]).filter("typeaheadHighlight", ["$sce", "$injector", "$log",
        "$typeaheadSuppressWarning",
        function(a, b, c, d) {
            function e(a) {
                return a.replace(/([.?*+^$[\]\\(){}|-])/g, "\\$1")
            }

            function f(a) {
                return /<.*>/g.test(a)
            }
            var g;
            return g = b.has("$sanitize"),
                function(b, h) {
                    return d || c.warn(
                        "typeaheadHighlight is now deprecated. Use uibTypeaheadHighlight instead."
                    ), !g && f(b) && c.warn(
                        "Unsafe use of typeahead please use ngSanitize"
                    ), b = h ? ("" + b).replace(new RegExp(e(h), "gi"),
                        "<strong>$&</strong>") : b, g || (b = a.trustAsHtml(
                        b)), b
                }
        }
    ]), angular.module("template/accordion/accordion-group.html", []).run([
        "$templateCache",
        function(a) {
            a.put("template/accordion/accordion-group.html",
                '<div class="panel {{panelClass || \'panel-default\'}}">\n  <div class="panel-heading" ng-keypress="toggleOpen($event)">\n    <h4 class="panel-title">\n      <a href tabindex="0" class="accordion-toggle" ng-click="toggleOpen()" uib-accordion-transclude="heading"><span ng-class="{\'text-muted\': isDisabled}">{{heading}}</span></a>\n    </h4>\n  </div>\n  <div class="panel-collapse collapse" uib-collapse="!isOpen">\n   <div class="panel-body" ng-transclude></div>\n  </div>\n</div>\n'
            )
        }
    ]), angular.module("template/accordion/accordion.html", []).run([
        "$templateCache",
        function(a) {
            a.put("template/accordion/accordion.html",
                '<div class="panel-group" ng-transclude></div>')
        }
    ]), angular.module("template/alert/alert.html", []).run(["$templateCache",
        function(a) {
            a.put("template/alert/alert.html",
                '<div class="alert" ng-class="[\'alert-\' + (type || \'warning\'), closeable ? \'alert-dismissible\' : null]" role="alert">\n    <button ng-show="closeable" type="button" class="close" ng-click="close({$event: $event})">\n        <span aria-hidden="true">&times;</span>\n        <span class="sr-only">Close</span>\n    </button>\n    <div ng-transclude></div>\n</div>\n'
            )
        }
    ]), angular.module("template/carousel/carousel.html", []).run([
        "$templateCache",
        function(a) {
            a.put("template/carousel/carousel.html",
                '<div ng-mouseenter="pause()" ng-mouseleave="play()" class="carousel" ng-swipe-right="prev()" ng-swipe-left="next()">\n  <div class="carousel-inner" ng-transclude></div>\n  <a role="button" href class="left carousel-control" ng-click="prev()" ng-show="slides.length > 1">\n    <span aria-hidden="true" class="glyphicon glyphicon-chevron-left"></span>\n    <span class="sr-only">previous</span>\n  </a>\n  <a role="button" href class="right carousel-control" ng-click="next()" ng-show="slides.length > 1">\n    <span aria-hidden="true" class="glyphicon glyphicon-chevron-right"></span>\n    <span class="sr-only">next</span>\n  </a>\n  <ol class="carousel-indicators" ng-show="slides.length > 1">\n    <li ng-repeat="slide in slides | orderBy:indexOfSlide track by $index" ng-class="{ active: isActive(slide) }" ng-click="select(slide)">\n      <span class="sr-only">slide {{ $index + 1 }} of {{ slides.length }}<span ng-if="isActive(slide)">, currently active</span></span>\n    </li>\n  </ol>\n</div>'
            )
        }
    ]), angular.module("template/carousel/slide.html", []).run([
        "$templateCache",
        function(a) {
            a.put("template/carousel/slide.html",
                '<div ng-class="{\n    \'active\': active\n  }" class="item text-center" ng-transclude></div>\n'
            )
        }
    ]), angular.module("template/datepicker/datepicker.html", []).run([
        "$templateCache",
        function(a) {
            a.put("template/datepicker/datepicker.html",
                '<div ng-switch="datepickerMode" role="application" ng-keydown="keydown($event)">\n  <uib-daypicker ng-switch-when="day" tabindex="0"></uib-daypicker>\n  <uib-monthpicker ng-switch-when="month" tabindex="0"></uib-monthpicker>\n  <uib-yearpicker ng-switch-when="year" tabindex="0"></uib-yearpicker>\n</div>'
            )
        }
    ]), angular.module("template/datepicker/day.html", []).run([
        "$templateCache",
        function(a) {
            a.put("template/datepicker/day.html",
                '<table role="grid" aria-labelledby="{{::uniqueId}}-title" aria-activedescendant="{{activeDateId}}">\n  <thead>\n    <tr>\n      <th><button type="button" class="btn btn-default btn-sm pull-left" ng-click="move(-1)" tabindex="-1"><i class="glyphicon glyphicon-chevron-left"></i></button></th>\n      <th colspan="{{::5 + showWeeks}}"><button id="{{::uniqueId}}-title" role="heading" aria-live="assertive" aria-atomic="true" type="button" class="btn btn-default btn-sm" ng-click="toggleMode()" ng-disabled="datepickerMode === maxMode" tabindex="-1" style="width:100%;"><strong>{{title}}</strong></button></th>\n      <th><button type="button" class="btn btn-default btn-sm pull-right" ng-click="move(1)" tabindex="-1"><i class="glyphicon glyphicon-chevron-right"></i></button></th>\n    </tr>\n    <tr>\n      <th ng-if="showWeeks" class="text-center"></th>\n      <th ng-repeat="label in ::labels track by $index" class="text-center"><small aria-label="{{::label.full}}">{{::label.abbr}}</small></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr ng-repeat="row in rows track by $index">\n      <td ng-if="showWeeks" class="text-center h6"><em>{{ weekNumbers[$index] }}</em></td>\n      <td ng-repeat="dt in row track by dt.date" class="text-center" role="gridcell" id="{{::dt.uid}}" ng-class="::dt.customClass">\n        <button type="button" style="min-width:100%;" class="btn btn-default btn-sm" ng-class="{\'btn-info\': dt.selected, active: isActive(dt)}" ng-click="select(dt.date)" ng-disabled="dt.disabled" tabindex="-1"><span ng-class="::{\'text-muted\': dt.secondary, \'text-info\': dt.current}">{{::dt.label}}</span></button>\n      </td>\n    </tr>\n  </tbody>\n</table>\n'
            )
        }
    ]), angular.module("template/datepicker/month.html", []).run([
        "$templateCache",
        function(a) {
            a.put("template/datepicker/month.html",
                '<table role="grid" aria-labelledby="{{::uniqueId}}-title" aria-activedescendant="{{activeDateId}}">\n  <thead>\n    <tr>\n      <th><button type="button" class="btn btn-default btn-sm pull-left" ng-click="move(-1)" tabindex="-1"><i class="glyphicon glyphicon-chevron-left"></i></button></th>\n      <th><button id="{{::uniqueId}}-title" role="heading" aria-live="assertive" aria-atomic="true" type="button" class="btn btn-default btn-sm" ng-click="toggleMode()" ng-disabled="datepickerMode === maxMode" tabindex="-1" style="width:100%;"><strong>{{title}}</strong></button></th>\n      <th><button type="button" class="btn btn-default btn-sm pull-right" ng-click="move(1)" tabindex="-1"><i class="glyphicon glyphicon-chevron-right"></i></button></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr ng-repeat="row in rows track by $index">\n      <td ng-repeat="dt in row track by dt.date" class="text-center" role="gridcell" id="{{::dt.uid}}" ng-class="::dt.customClass">\n        <button type="button" style="min-width:100%;" class="btn btn-default" ng-class="{\'btn-info\': dt.selected, active: isActive(dt)}" ng-click="select(dt.date)" ng-disabled="dt.disabled" tabindex="-1"><span ng-class="::{\'text-info\': dt.current}">{{::dt.label}}</span></button>\n      </td>\n    </tr>\n  </tbody>\n</table>\n'
            )
        }
    ]), angular.module("template/datepicker/popup.html", []).run([
        "$templateCache",
        function(a) {
            a.put("template/datepicker/popup.html",
                '<ul class="dropdown-menu" dropdown-nested ng-if="isOpen" style="display: block" ng-style="{top: position.top+\'px\', left: position.left+\'px\'}" ng-keydown="keydown($event)" ng-click="$event.stopPropagation()">\n <li ng-transclude></li>\n <li ng-if="showButtonBar" style="padding:10px 9px 2px">\n  <span class="btn-group pull-left">\n   <button type="button" class="btn btn-sm btn-info" ng-click="select(\'today\')" ng-disabled="isDisabled(\'today\')">{{ getText(\'current\') }}</button>\n   <button type="button" class="btn btn-sm btn-danger" ng-click="select(null)">{{ getText(\'clear\') }}</button>\n  </span>\n  <button type="button" class="btn btn-sm btn-success pull-right" ng-click="close()">{{ getText(\'close\') }}</button>\n </li>\n</ul>\n'
            )
        }
    ]), angular.module("template/datepicker/year.html", []).run([
        "$templateCache",
        function(a) {
            a.put("template/datepicker/year.html",
                '<table role="grid" aria-labelledby="{{::uniqueId}}-title" aria-activedescendant="{{activeDateId}}">\n  <thead>\n    <tr>\n      <th><button type="button" class="btn btn-default btn-sm pull-left" ng-click="move(-1)" tabindex="-1"><i class="glyphicon glyphicon-chevron-left"></i></button></th>\n      <th colspan="3"><button id="{{::uniqueId}}-title" role="heading" aria-live="assertive" aria-atomic="true" type="button" class="btn btn-default btn-sm" ng-click="toggleMode()" ng-disabled="datepickerMode === maxMode" tabindex="-1" style="width:100%;"><strong>{{title}}</strong></button></th>\n      <th><button type="button" class="btn btn-default btn-sm pull-right" ng-click="move(1)" tabindex="-1"><i class="glyphicon glyphicon-chevron-right"></i></button></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr ng-repeat="row in rows track by $index">\n      <td ng-repeat="dt in row track by dt.date" class="text-center" role="gridcell" id="{{::dt.uid}}" ng-class="::dt.customClass">\n        <button type="button" style="min-width:100%;" class="btn btn-default" ng-class="{\'btn-info\': dt.selected, active: isActive(dt)}" ng-click="select(dt.date)" ng-disabled="dt.disabled" tabindex="-1"><span ng-class="::{\'text-info\': dt.current}">{{::dt.label}}</span></button>\n      </td>\n    </tr>\n  </tbody>\n</table>\n'
            )
        }
    ]), angular.module("template/modal/backdrop.html", []).run([
        "$templateCache",
        function(a) {
            a.put("template/modal/backdrop.html",
                '<div uib-modal-animation-class="fade"\n     modal-in-class="in"\n     ng-style="{\'z-index\': 1040 + (index && 1 || 0) + index*10}"\n></div>\n'
            )
        }
    ]), angular.module("template/modal/window.html", []).run(["$templateCache",
        function(a) {
            a.put("template/modal/window.html",
                '<div modal-render="{{$isRendered}}" tabindex="-1" role="dialog" class="modal"\n    uib-modal-animation-class="fade"\n    modal-in-class="in"\n    ng-style="{\'z-index\': 1050 + index*10, display: \'block\'}">\n    <div class="modal-dialog" ng-class="size ? \'modal-\' + size : \'\'"><div class="modal-content" uib-modal-transclude></div></div>\n</div>\n'
            )
        }
    ]), angular.module("template/pagination/pager.html", []).run([
        "$templateCache",
        function(a) {
            a.put("template/pagination/pager.html",
                '<ul class="pager">\n  <li ng-class="{disabled: noPrevious()||ngDisabled, previous: align}"><a href ng-click="selectPage(page - 1, $event)">{{::getText(\'previous\')}}</a></li>\n  <li ng-class="{disabled: noNext()||ngDisabled, next: align}"><a href ng-click="selectPage(page + 1, $event)">{{::getText(\'next\')}}</a></li>\n</ul>\n'
            )
        }
    ]), angular.module("template/pagination/pagination.html", []).run([
        "$templateCache",
        function(a) {
            a.put("template/pagination/pagination.html",
                '<ul class="pagination">\n  <li ng-if="::boundaryLinks" ng-class="{disabled: noPrevious()||ngDisabled}" class="pagination-first"><a href ng-click="selectPage(1, $event)">{{::getText(\'first\')}}</a></li>\n  <li ng-if="::directionLinks" ng-class="{disabled: noPrevious()||ngDisabled}" class="pagination-prev"><a href ng-click="selectPage(page - 1, $event)">{{::getText(\'previous\')}}</a></li>\n  <li ng-repeat="page in pages track by $index" ng-class="{active: page.active,disabled: ngDisabled&&!page.active}" class="pagination-page"><a href ng-click="selectPage(page.number, $event)">{{page.text}}</a></li>\n  <li ng-if="::directionLinks" ng-class="{disabled: noNext()||ngDisabled}" class="pagination-next"><a href ng-click="selectPage(page + 1, $event)">{{::getText(\'next\')}}</a></li>\n  <li ng-if="::boundaryLinks" ng-class="{disabled: noNext()||ngDisabled}" class="pagination-last"><a href ng-click="selectPage(totalPages, $event)">{{::getText(\'last\')}}</a></li>\n</ul>\n'
            )
        }
    ]), angular.module("template/tooltip/tooltip-html-popup.html", []).run([
        "$templateCache",
        function(a) {
            a.put("template/tooltip/tooltip-html-popup.html",
                '<div\n  tooltip-animation-class="fade"\n  uib-tooltip-classes\n  ng-class="{ in: isOpen() }">\n  <div class="tooltip-arrow"></div>\n  <div class="tooltip-inner" ng-bind-html="contentExp()"></div>\n</div>\n'
            )
        }
    ]), angular.module("template/tooltip/tooltip-popup.html", []).run([
        "$templateCache",
        function(a) {
            a.put("template/tooltip/tooltip-popup.html",
                '<div\n  tooltip-animation-class="fade"\n  uib-tooltip-classes\n  ng-class="{ in: isOpen() }">\n  <div class="tooltip-arrow"></div>\n  <div class="tooltip-inner" ng-bind="content"></div>\n</div>\n'
            )
        }
    ]), angular.module("template/tooltip/tooltip-template-popup.html", []).run(
        ["$templateCache", function(a) {
            a.put("template/tooltip/tooltip-template-popup.html",
                '<div\n  tooltip-animation-class="fade"\n  uib-tooltip-classes\n  ng-class="{ in: isOpen() }">\n  <div class="tooltip-arrow"></div>\n  <div class="tooltip-inner"\n    uib-tooltip-template-transclude="contentExp()"\n    tooltip-template-transclude-scope="originScope()"></div>\n</div>\n'
            )
        }]), angular.module("template/popover/popover-html.html", []).run([
        "$templateCache",
        function(a) {
            a.put("template/popover/popover-html.html",
                '<div tooltip-animation-class="fade"\n  uib-tooltip-classes\n  ng-class="{ in: isOpen() }">\n  <div class="arrow"></div>\n\n  <div class="popover-inner">\n      <h3 class="popover-title" ng-bind="title" ng-if="title"></h3>\n      <div class="popover-content" ng-bind-html="contentExp()"></div>\n  </div>\n</div>\n'
            )
        }
    ]), angular.module("template/popover/popover-template.html", []).run([
        "$templateCache",
        function(a) {
            a.put("template/popover/popover-template.html",
                '<div tooltip-animation-class="fade"\n  uib-tooltip-classes\n  ng-class="{ in: isOpen() }">\n  <div class="arrow"></div>\n\n  <div class="popover-inner">\n      <h3 class="popover-title" ng-bind="title" ng-if="title"></h3>\n      <div class="popover-content"\n        uib-tooltip-template-transclude="contentExp()"\n        tooltip-template-transclude-scope="originScope()"></div>\n  </div>\n</div>\n'
            )
        }
    ]), angular.module("template/popover/popover.html", []).run([
        "$templateCache",
        function(a) {
            a.put("template/popover/popover.html",
                '<div tooltip-animation-class="fade"\n  uib-tooltip-classes\n  ng-class="{ in: isOpen() }">\n  <div class="arrow"></div>\n\n  <div class="popover-inner">\n      <h3 class="popover-title" ng-bind="title" ng-if="title"></h3>\n      <div class="popover-content" ng-bind="content"></div>\n  </div>\n</div>\n'
            )
        }
    ]), angular.module("template/progressbar/bar.html", []).run([
        "$templateCache",
        function(a) {
            a.put("template/progressbar/bar.html",
                '<div class="progress-bar" ng-class="type && \'progress-bar-\' + type" role="progressbar" aria-valuenow="{{value}}" aria-valuemin="0" aria-valuemax="{{max}}" ng-style="{width: (percent < 100 ? percent : 100) + \'%\'}" aria-valuetext="{{percent | number:0}}%" aria-labelledby="{{::title}}" style="min-width: 0;" ng-transclude></div>\n'
            )
        }
    ]), angular.module("template/progressbar/progress.html", []).run([
        "$templateCache",
        function(a) {
            a.put("template/progressbar/progress.html",
                '<div class="progress" ng-transclude aria-labelledby="{{::title}}"></div>'
            )
        }
    ]), angular.module("template/progressbar/progressbar.html", []).run([
        "$templateCache",
        function(a) {
            a.put("template/progressbar/progressbar.html",
                '<div class="progress">\n  <div class="progress-bar" ng-class="type && \'progress-bar-\' + type" role="progressbar" aria-valuenow="{{value}}" aria-valuemin="0" aria-valuemax="{{max}}" ng-style="{width: (percent < 100 ? percent : 100) + \'%\'}" aria-valuetext="{{percent | number:0}}%" aria-labelledby="{{::title}}" style="min-width: 0;" ng-transclude></div>\n</div>\n'
            )
        }
    ]), angular.module("template/rating/rating.html", []).run(["$templateCache",
        function(a) {
            a.put("template/rating/rating.html",
                '<span ng-mouseleave="reset()" ng-keydown="onKeydown($event)" tabindex="0" role="slider" aria-valuemin="0" aria-valuemax="{{range.length}}" aria-valuenow="{{value}}">\n    <span ng-repeat-start="r in range track by $index" class="sr-only">({{ $index < value ? \'*\' : \' \' }})</span>\n    <i ng-repeat-end ng-mouseenter="enter($index + 1)" ng-click="rate($index + 1)" class="glyphicon" ng-class="$index < value && (r.stateOn || \'glyphicon-star\') || (r.stateOff || \'glyphicon-star-empty\')" ng-attr-title="{{r.title}}" aria-valuetext="{{r.title}}"></i>\n</span>\n'
            );
        }
    ]), angular.module("template/tabs/tab.html", []).run(["$templateCache",
        function(a) {
            a.put("template/tabs/tab.html",
                '<li ng-class="{active: active, disabled: disabled}">\n  <a href ng-click="select()" uib-tab-heading-transclude>{{heading}}</a>\n</li>\n'
            )
        }
    ]), angular.module("template/tabs/tabset.html", []).run(["$templateCache",
        function(a) {
            a.put("template/tabs/tabset.html",
                '<div>\n  <ul class="nav nav-{{type || \'tabs\'}}" ng-class="{\'nav-stacked\': vertical, \'nav-justified\': justified}" ng-transclude></ul>\n  <div class="tab-content">\n    <div class="tab-pane" \n         ng-repeat="tab in tabs" \n         ng-class="{active: tab.active}"\n         uib-tab-content-transclude="tab">\n    </div>\n  </div>\n</div>\n'
            )
        }
    ]), angular.module("template/timepicker/timepicker.html", []).run([
        "$templateCache",
        function(a) {
            a.put("template/timepicker/timepicker.html",
                '<table>\n  <tbody>\n    <tr class="text-center" ng-show="::showSpinners">\n      <td><a ng-click="incrementHours()" ng-class="{disabled: noIncrementHours()}" class="btn btn-link" ng-disabled="noIncrementHours()" tabindex="{{::tabindex}}"><span class="glyphicon glyphicon-chevron-up"></span></a></td>\n      <td>&nbsp;</td>\n      <td><a ng-click="incrementMinutes()" ng-class="{disabled: noIncrementMinutes()}" class="btn btn-link" ng-disabled="noIncrementMinutes()" tabindex="{{::tabindex}}"><span class="glyphicon glyphicon-chevron-up"></span></a></td>\n      <td ng-show="showMeridian"></td>\n    </tr>\n    <tr>\n      <td class="form-group" ng-class="{\'has-error\': invalidHours}">\n        <input style="width:50px;" type="text" ng-model="hours" ng-change="updateHours()" class="form-control text-center" ng-readonly="::readonlyInput" maxlength="2" tabindex="{{::tabindex}}">\n      </td>\n      <td>:</td>\n      <td class="form-group" ng-class="{\'has-error\': invalidMinutes}">\n        <input style="width:50px;" type="text" ng-model="minutes" ng-change="updateMinutes()" class="form-control text-center" ng-readonly="::readonlyInput" maxlength="2" tabindex="{{::tabindex}}">\n      </td>\n      <td ng-show="showMeridian"><button type="button" ng-class="{disabled: noToggleMeridian()}" class="btn btn-default text-center" ng-click="toggleMeridian()" ng-disabled="noToggleMeridian()" tabindex="{{::tabindex}}">{{meridian}}</button></td>\n    </tr>\n    <tr class="text-center" ng-show="::showSpinners">\n      <td><a ng-click="decrementHours()" ng-class="{disabled: noDecrementHours()}" class="btn btn-link" ng-disabled="noDecrementHours()" tabindex="{{::tabindex}}"><span class="glyphicon glyphicon-chevron-down"></span></a></td>\n      <td>&nbsp;</td>\n      <td><a ng-click="decrementMinutes()" ng-class="{disabled: noDecrementMinutes()}" class="btn btn-link" ng-disabled="noDecrementMinutes()" tabindex="{{::tabindex}}"><span class="glyphicon glyphicon-chevron-down"></span></a></td>\n      <td ng-show="showMeridian"></td>\n    </tr>\n  </tbody>\n</table>\n'
            )
        }
    ]), angular.module("template/typeahead/typeahead-match.html", []).run([
        "$templateCache",
        function(a) {
            a.put("template/typeahead/typeahead-match.html",
                '<a href tabindex="-1" ng-bind-html="match.label | uibTypeaheadHighlight:query"></a>\n'
            )
        }
    ]), angular.module("template/typeahead/typeahead-popup.html", []).run([
        "$templateCache",
        function(a) {
            a.put("template/typeahead/typeahead-popup.html",
                '<ul class="dropdown-menu" ng-show="isOpen() && !moveInProgress" ng-style="{top: position().top+\'px\', left: position().left+\'px\'}" style="display: block;" role="listbox" aria-hidden="{{!isOpen()}}">\n    <li ng-repeat="match in matches track by $index" ng-class="{active: isActive($index) }" ng-mouseenter="selectActive($index)" ng-click="selectMatch($index)" role="option" id="{{::match.id}}">\n        <div uib-typeahead-match index="$index" match="match" query="query" template-url="templateUrl"></div>\n    </li>\n</ul>\n'
            )
        }
    ]), !angular.$$csp() && angular.element(document).find("head").prepend(
        '<style type="text/css">.ng-animate.item:not(.left):not(.right){-webkit-transition:0s ease-in-out left;transition:0s ease-in-out left}</style>'
    );
angular.module('monospaced.elastic', []).constant('msdElasticConfig', {
    append: ''
}).directive('msdElastic', ['$timeout', '$window', 'msdElasticConfig',
    function($timeout, $window, config) {
        'use strict';
        return {
            require: 'ngModel',
            restrict: 'A, C',
            link: function(scope, element, attrs, ngModel) {
                var ta = element[0],
                    $ta = element;
                if (ta.nodeName !== 'TEXTAREA' || !$window.getComputedStyle) {
                    return;
                }
                $ta.css({
                    'overflow': 'hidden',
                    'overflow-y': 'hidden',
                    'word-wrap': 'break-word'
                });
                var text = ta.value;
                ta.value = '';
                ta.value = text;
                var append = attrs.msdElastic ? attrs.msdElastic.replace(
                        /\\n/g, '\n') : config.append,
                    $win = angular.element($window),
                    mirrorInitStyle =
                    'position: absolute; top: -999px; right: auto; bottom: auto;' +
                    'left: 0; overflow: hidden; -webkit-box-sizing: content-box;' +
                    '-moz-box-sizing: content-box; box-sizing: content-box;' +
                    'min-height: 0 !important; height: 0 !important; padding: 0;' +
                    'word-wrap: break-word; border: 0;',
                    $mirror = angular.element(
                        '<textarea tabindex="-1" ' + 'style="' +
                        mirrorInitStyle + '"/>').data('elastic',
                        true),
                    mirror = $mirror[0],
                    taStyle = getComputedStyle(ta),
                    resize = taStyle.getPropertyValue('resize'),
                    borderBox = taStyle.getPropertyValue(
                        'box-sizing') === 'border-box' || taStyle.getPropertyValue(
                        '-moz-box-sizing') === 'border-box' ||
                    taStyle.getPropertyValue('-webkit-box-sizing') ===
                    'border-box',
                    boxOuter = !borderBox ? {
                        width: 0,
                        height: 0
                    } : {
                        width: parseInt(taStyle.getPropertyValue(
                                'border-right-width'), 10) +
                            parseInt(taStyle.getPropertyValue(
                                'padding-right'), 10) +
                            parseInt(taStyle.getPropertyValue(
                                'padding-left'), 10) +
                            parseInt(taStyle.getPropertyValue(
                                'border-left-width'), 10),
                        height: parseInt(taStyle.getPropertyValue(
                                'border-top-width'), 10) +
                            parseInt(taStyle.getPropertyValue(
                                'padding-top'), 10) +
                            parseInt(taStyle.getPropertyValue(
                                'padding-bottom'), 10) +
                            parseInt(taStyle.getPropertyValue(
                                'border-bottom-width'), 10)
                    },
                    minHeightValue = parseInt(taStyle.getPropertyValue(
                        'min-height'), 10),
                    heightValue = parseInt(taStyle.getPropertyValue(
                        'height'), 10),
                    minHeight = Math.max(minHeightValue,
                        heightValue) - boxOuter.height,
                    maxHeight = parseInt(taStyle.getPropertyValue(
                        'max-height'), 10),
                    mirrored, active, copyStyle = ['font-family',
                        'font-size', 'font-weight', 'font-style',
                        'letter-spacing', 'line-height',
                        'text-transform', 'word-spacing',
                        'text-indent'
                    ];
                if ($ta.data('elastic')) {
                    return;
                }
                maxHeight = maxHeight && maxHeight > 0 ? maxHeight :
                    9e4;
                if (mirror.parentNode !== document.body) {
                    angular.element(document.body).append(mirror);
                }
                $ta.css({
                    'resize': (resize === 'none' || resize ===
                        'vertical') ? 'none' : 'horizontal'
                }).data('elastic', true);

                function initMirror() {
                    var mirrorStyle = mirrorInitStyle;
                    mirrored = ta;
                    taStyle = getComputedStyle(ta);
                    angular.forEach(copyStyle, function(val) {
                        mirrorStyle += val + ':' + taStyle.getPropertyValue(
                            val) + ';';
                    });
                    mirror.setAttribute('style', mirrorStyle);
                }

                function adjust() {
                    var taHeight, taComputedStyleWidth,
                        mirrorHeight, width, overflow;
                    if (mirrored !== ta) {
                        initMirror();
                    }
                    if (!active) {
                        active = true;
                        mirror.value = ta.value + append;
                        mirror.style.overflowY = ta.style.overflowY;
                        taHeight = ta.style.height === '' ? 'auto' :
                            parseInt(ta.style.height, 10);
                        taComputedStyleWidth = getComputedStyle(ta)
                            .getPropertyValue('width');
                        if (taComputedStyleWidth.substr(
                                taComputedStyleWidth.length - 2, 2) ===
                            'px') {
                            width = parseInt(taComputedStyleWidth,
                                10) - boxOuter.width;
                            mirror.style.width = width + 'px';
                        }
                        mirrorHeight = mirror.scrollHeight;
                        if (mirrorHeight > maxHeight) {
                            mirrorHeight = maxHeight;
                            overflow = 'scroll';
                        } else if (mirrorHeight < minHeight) {
                            mirrorHeight = minHeight;
                        }
                        mirrorHeight += boxOuter.height;
                        ta.style.overflowY = overflow || 'hidden';
                        if (taHeight !== mirrorHeight) {
                            ta.style.height = mirrorHeight + 'px';
                            scope.$emit('elastic:resize', $ta);
                        }
                        $timeout(function() {
                            active = false;
                        }, 1);
                    }
                }

                function forceAdjust() {
                    active = false;
                    adjust();
                }
                if ('onpropertychange' in ta && 'oninput' in ta) {
                    ta['oninput'] = ta.onkeyup = adjust;
                } else {
                    ta['oninput'] = adjust;
                }
                $win.bind('resize', forceAdjust);
                scope.$watch(function() {
                    return ngModel.$modelValue;
                }, function(newValue) {
                    forceAdjust();
                });
                scope.$on('elastic:adjust', function() {
                    initMirror();
                    console.log("Calkled this");
                    forceAdjust();
                });
                $timeout(adjust);
                scope.$on('$destroy', function() {
                    $mirror.remove();
                    $win.unbind('resize', forceAdjust);
                });
            }
        };
    }
]);
(function(n, e) {
    'use strict';

    function B(a) {
        var c = [];
        w(c, e.noop).chars(a);
        return c.join("")
    }

    function h(a, c) {
        var b = {},
            d = a.split(","),
            l;
        for (l = 0; l < d.length; l++) b[c ? e.lowercase(d[l]) : d[l]] = !0;
        return b
    }

    function C(a, c) {
        null === a || void 0 === a ? a = "" : "string" !== typeof a && (a =
            "" + a);
        g.innerHTML = a;
        var b = 5;
        do {
            if (0 === b) throw x("uinput");
            b--;
            n.document.documentMode && t(g);
            a = g.innerHTML;
            g.innerHTML = a
        } while (a !== g.innerHTML);
        for (b = g.firstChild; b;) {
            switch (b.nodeType) {
                case 1:
                    c.start(b.nodeName.toLowerCase(), D(b.attributes));
                    break;
                case 3:
                    c.chars(b.textContent)
            }
            var d;
            if (!(d = b.firstChild) && (1 == b.nodeType && c.end(b.nodeName
                    .toLowerCase()), d = b.nextSibling, !d))
                for (; null == d;) {
                    b = b.parentNode;
                    if (b === g) break;
                    d = b.nextSibling;
                    1 == b.nodeType && c.end(b.nodeName.toLowerCase())
                }
            b = d
        }
        for (; b = g.firstChild;) g.removeChild(b)
    }

    function D(a) {
        for (var c = {}, b = 0, d = a.length; b < d; b++) {
            var l = a[b];
            c[l.name] = l.value
        }
        return c
    }

    function y(a) {
        return a.replace(/&/g, "&amp;").replace(E, function(a) {
            var b = a.charCodeAt(0);
            a = a.charCodeAt(1);
            return "&#" + (1024 * (b - 55296) +
                (a - 56320) + 65536) + ";"
        }).replace(F, function(a) {
            return "&#" + a.charCodeAt(0) + ";"
        }).replace(/</g, "&lt;").replace(/>/g, "&gt;")
    }

    function w(a, c) {
        var b = !1,
            d = e.bind(a, a.push);
        return {
            start: function(a, f) {
                a = e.lowercase(a);
                !b && G[a] && (b = a);
                b || !0 !== u[a] || (d("<"), d(a), e.forEach(f,
                    function(b, f) {
                        var g = e.lowercase(f),
                            h = "img" === a && "src" === g ||
                            "background" === g;
                        !0 !== H[g] || !0 === z[g] && !c(b, h) ||
                            (d(" "), d(f), d('="'), d(y(b)), d(
                                '"'))
                    }), d(">"))
            },
            end: function(a) {
                a = e.lowercase(a);
                b || !0 !== u[a] || !0 === A[a] || (d("</"), d(a), d(
                    ">"));
                a == b && (b = !1)
            },
            chars: function(a) {
                b || d(y(a))
            }
        }
    }

    function t(a) {
        if (a.nodeType === n.Node.ELEMENT_NODE)
            for (var c = a.attributes, b = 0, d = c.length; b < d; b++) {
                var e = c[b],
                    f = e.name.toLowerCase();
                if ("xmlns:ns1" === f || 0 === f.indexOf("ns1:")) a.removeAttributeNode(
                    e), b--, d--
            }(c = a.firstChild) && t(c);
        (c = a.nextSibling) && t(c)
    }
    var x = e.$$minErr("$sanitize"),
        E = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g,
        F = /([^\#-~ |!])/g,
        A = h("area,br,col,hr,img,wbr"),
        q = h("colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr"),
        k = h("rp,rt"),
        v = e.extend({}, k, q),
        q = e.extend({}, q, h(
            "address,article,aside,blockquote,caption,center,del,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,h6,header,hgroup,hr,ins,map,menu,nav,ol,pre,section,table,ul"
        )),
        k = e.extend({}, k, h(
            "a,abbr,acronym,b,bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,q,ruby,rp,rt,s,samp,small,span,strike,strong,sub,sup,time,tt,u,var"
        )),
        I = h(
            "circle,defs,desc,ellipse,font-face,font-face-name,font-face-src,g,glyph,hkern,image,linearGradient,line,marker,metadata,missing-glyph,mpath,path,polygon,polyline,radialGradient,rect,stop,svg,switch,text,title,tspan"
        ),
        G = h("script,style"),
        u = e.extend({}, A, q, k, v),
        z = h("background,cite,href,longdesc,src,xlink:href"),
        v = h(
            "abbr,align,alt,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,compact,coords,dir,face,headers,height,hreflang,hspace,ismap,lang,language,nohref,nowrap,rel,rev,rows,rowspan,rules,scope,scrolling,shape,size,span,start,summary,tabindex,target,title,type,valign,value,vspace,width"
        ),
        k = h(
            "accent-height,accumulate,additive,alphabetic,arabic-form,ascent,baseProfile,bbox,begin,by,calcMode,cap-height,class,color,color-rendering,content,cx,cy,d,dx,dy,descent,display,dur,end,fill,fill-rule,font-family,font-size,font-stretch,font-style,font-variant,font-weight,from,fx,fy,g1,g2,glyph-name,gradientUnits,hanging,height,horiz-adv-x,horiz-origin-x,ideographic,k,keyPoints,keySplines,keyTimes,lang,marker-end,marker-mid,marker-start,markerHeight,markerUnits,markerWidth,mathematical,max,min,offset,opacity,orient,origin,overline-position,overline-thickness,panose-1,path,pathLength,points,preserveAspectRatio,r,refX,refY,repeatCount,repeatDur,requiredExtensions,requiredFeatures,restart,rotate,rx,ry,slope,stemh,stemv,stop-color,stop-opacity,strikethrough-position,strikethrough-thickness,stroke,stroke-dasharray,stroke-dashoffset,stroke-linecap,stroke-linejoin,stroke-miterlimit,stroke-opacity,stroke-width,systemLanguage,target,text-anchor,to,transform,type,u1,u2,underline-position,underline-thickness,unicode,unicode-range,units-per-em,values,version,viewBox,visibility,width,widths,x,x-height,x1,x2,xlink:actuate,xlink:arcrole,xlink:role,xlink:show,xlink:title,xlink:type,xml:base,xml:lang,xml:space,xmlns,xmlns:xlink,y,y1,y2,zoomAndPan", !
            0),
        H = e.extend({}, z, k, v),
        g;
    (function(a) {
        if (a.document && a.document.implementation) a = a.document.implementation
            .createHTMLDocument("inert");
        else throw x("noinert");
        var c = (a.documentElement || a.getDocumentElement()).getElementsByTagName(
            "body");
        1 === c.length ? g = c[0] : (c = a.createElement("html"), g = a
            .createElement("body"), c.appendChild(g), a.appendChild(
                c))
    })(n);
    e.module("ngSanitize", []).provider("$sanitize", function() {
        var a = !1;
        this.$get = ["$$sanitizeUri", function(c) {
            a && e.extend(u, I);
            return function(a) {
                var d = [];
                C(a, w(d, function(a, b) {
                    return !/^unsafe:/.test(
                        c(a, b))
                }));
                return d.join("")
            }
        }];
        this.enableSvg = function(c) {
            return e.isDefined(c) ? (a = c, this) : a
        }
    });
    e.module("ngSanitize").filter("linky", ["$sanitize", function(a) {
        var c =
            /((ftp|https?):\/\/|(www\.)|(mailto:)?[A-Za-z0-9._%+-]+@)\S*[^\s.;,(){}<>"\u201d\u2019]/i,
            b = /^mailto:/i,
            d = e.$$minErr("linky"),
            g = e.isString;
        return function(f, h, m) {
            function k(a) {
                a && p.push(B(a))
            }

            function q(a, b) {
                var c;
                p.push("<a ");
                e.isFunction(m) && (m = m(a));
                if (e.isObject(m))
                    for (c in m) p.push(c + '="' + m[c] +
                        '" ');
                else m = {};
                !e.isDefined(h) || "target" in m || p.push(
                    'target="', h, '" ');
                p.push('href="', a.replace(/"/g, "&quot;"),
                    '">');
                k(b);
                p.push("</a>")
            }
            if (null == f || "" === f) return f;
            if (!g(f)) throw d("notstring", f);
            for (var r = f, p = [], s, n; f = r.match(c);) s =
                f[0], f[2] || f[4] || (s = (f[3] ?
                    "http://" : "mailto:") + s), n = f.index,
                k(r.substr(0, n)), q(s, f[0].replace(b, "")),
                r = r.substring(n + f[0].length);
            k(r);
            return a(p.join(""))
        }
    }])
})(window, window.angular);
"undefined" != typeof module && "undefined" != typeof exports && module.exports ===
    exports && (module.exports = "ui.router"),
    function(a, b, c) {
        "use strict";

        function d(a, b) {
            return R(new(R(function() {}, {
                prototype: a
            })), b)
        }

        function e(a) {
            return Q(arguments, function(b) {
                b !== a && Q(b, function(b, c) {
                    a.hasOwnProperty(c) || (a[c] = b)
                })
            }), a
        }

        function f(a, b) {
            var c = [];
            for (var d in a.path) {
                if (a.path[d] !== b.path[d]) break;
                c.push(a.path[d])
            }
            return c
        }

        function g(a) {
            if (Object.keys) return Object.keys(a);
            var b = [];
            return Q(a, function(a, c) {
                b.push(c)
            }), b
        }

        function h(a, b) {
            if (Array.prototype.indexOf) return a.indexOf(b, Number(arguments[2]) ||
                0);
            var c = a.length >>> 0,
                d = Number(arguments[2]) || 0;
            for (d = 0 > d ? Math.ceil(d) : Math.floor(d), 0 > d && (d += c); c >
                d; d++)
                if (d in a && a[d] === b) return d;
            return -1
        }

        function i(a, b, c, d) {
            var e, i = f(c, d),
                j = {},
                k = [];
            for (var l in i)
                if (i[l] && i[l].params && (e = g(i[l].params), e.length))
                    for (var m in e) h(k, e[m]) >= 0 || (k.push(e[m]), j[e[m]] =
                        a[e[m]]);
            return R({}, j, b)
        }

        function j(a, b, c) {
            if (!c) {
                c = [];
                for (var d in a) c.push(d)
            }
            for (var e = 0; e < c.length; e++) {
                var f = c[e];
                if (a[f] != b[f]) return !1
            }
            return !0
        }

        function k(a, b) {
            var c = {};
            return Q(a, function(a) {
                c[a] = b[a]
            }), c
        }

        function l(a) {
            var b = {},
                c = Array.prototype.concat.apply(Array.prototype, Array.prototype
                    .slice.call(arguments, 1));
            return Q(c, function(c) {
                c in a && (b[c] = a[c])
            }), b
        }

        function m(a) {
            var b = {},
                c = Array.prototype.concat.apply(Array.prototype, Array.prototype
                    .slice.call(arguments, 1));
            for (var d in a) - 1 == h(c, d) && (b[d] = a[d]);
            return b
        }

        function n(a, b) {
            var c = P(a),
                d = c ? [] : {};
            return Q(a, function(a, e) {
                b(a, e) && (d[c ? d.length : e] = a)
            }), d
        }

        function o(a, b) {
            var c = P(a) ? [] : {};
            return Q(a, function(a, d) {
                c[d] = b(a, d)
            }), c
        }

        function p(a, b) {
            var d = 1,
                f = 2,
                i = {},
                j = [],
                k = i,
                l = R(a.when(i), {
                    $$promises: i,
                    $$values: i
                });
            this.study = function(i) {
                function n(a, c) {
                    if (s[c] !== f) {
                        if (r.push(c), s[c] === d) throw r.splice(0, h(r, c)),
                            new Error("Cyclic dependency: " + r.join(" -> "));
                        if (s[c] = d, N(a)) q.push(c, [function() {
                            return b.get(a)
                        }], j);
                        else {
                            var e = b.annotate(a);
                            Q(e, function(a) {
                                a !== c && i.hasOwnProperty(a) && n(
                                    i[a], a)
                            }), q.push(c, a, e)
                        }
                        r.pop(), s[c] = f
                    }
                }

                function o(a) {
                    return O(a) && a.then && a.$$promises
                }
                if (!O(i)) throw new Error("'invocables' must be an object");
                var p = g(i || {}),
                    q = [],
                    r = [],
                    s = {};
                return Q(i, n), i = r = s = null,
                    function(d, f, g) {
                        function h() {
                            --u || (v || e(t, f.$$values), r.$$values = t,
                                r.$$promises = r.$$promises || !0,
                                delete r.$$inheritedValues, n.resolve(t)
                            )
                        }

                        function i(a) {
                            r.$$failure = a, n.reject(a)
                        }

                        function j(c, e, f) {
                            function j(a) {
                                l.reject(a), i(a)
                            }

                            function k() {
                                if (!L(r.$$failure)) try {
                                    l.resolve(b.invoke(e, g, t)), l.promise
                                        .then(function(a) {
                                            t[c] = a, h()
                                        }, j)
                                } catch (a) {
                                    j(a)
                                }
                            }
                            var l = a.defer(),
                                m = 0;
                            Q(f, function(a) {
                                s.hasOwnProperty(a) && !d.hasOwnProperty(
                                    a) && (m++, s[a].then(
                                    function(b) {
                                        t[a] = b, --m || k()
                                    }, j))
                            }), m || k(), s[c] = l.promise
                        }
                        if (o(d) && g === c && (g = f, f = d, d = null), d) {
                            if (!O(d)) throw new Error(
                                "'locals' must be an object")
                        } else d = k;
                        if (f) {
                            if (!o(f)) throw new Error(
                                "'parent' must be a promise returned by $resolve.resolve()"
                            )
                        } else f = l;
                        var n = a.defer(),
                            r = n.promise,
                            s = r.$$promises = {},
                            t = R({}, d),
                            u = 1 + q.length / 3,
                            v = !1;
                        if (L(f.$$failure)) return i(f.$$failure), r;
                        f.$$inheritedValues && e(t, m(f.$$inheritedValues,
                            p)), R(s, f.$$promises), f.$$values ? (v =
                            e(t, m(f.$$values, p)), r.$$inheritedValues =
                            m(f.$$values, p), h()) : (f.$$inheritedValues &&
                            (r.$$inheritedValues = m(f.$$inheritedValues,
                                p)), f.then(h, i));
                        for (var w = 0, x = q.length; x > w; w += 3) d.hasOwnProperty(
                            q[w]) ? h() : j(q[w], q[w + 1], q[w + 2]);
                        return r
                    }
            }, this.resolve = function(a, b, c, d) {
                return this.study(a)(b, c, d)
            }
        }

        function q(a, b, c) {
            this.fromConfig = function(a, b, c) {
                return L(a.template) ? this.fromString(a.template, b) : L(a
                    .templateUrl) ? this.fromUrl(a.templateUrl, b) : L(
                    a.templateProvider) ? this.fromProvider(a.templateProvider,
                    b, c) : null
            }, this.fromString = function(a, b) {
                return M(a) ? a(b) : a
            }, this.fromUrl = function(c, d) {
                return M(c) && (c = c(d)), null == c ? null : a.get(c, {
                    cache: b,
                    headers: {
                        Accept: "text/html"
                    }
                }).then(function(a) {
                    return a.data
                })
            }, this.fromProvider = function(a, b, d) {
                return c.invoke(a, null, d || {
                    params: b
                })
            }
        }

        function r(a, b, e) {
            function f(b, c, d, e) {
                if (q.push(b), o[b]) return o[b];
                if (!/^\w+([-.]+\w+)*(?:\[\])?$/.test(b)) throw new Error(
                    "Invalid parameter name '" + b + "' in pattern '" + a +
                    "'");
                if (p[b]) throw new Error("Duplicate parameter name '" + b +
                    "' in pattern '" + a + "'");
                return p[b] = new U.Param(b, c, d, e), p[b]
            }

            function g(a, b, c, d) {
                var e = ["", ""],
                    f = a.replace(/[\\\[\]\^$*+?.()|{}]/g, "\\$&");
                if (!b) return f;
                switch (c) {
                    case !1:
                        e = ["(", ")" + (d ? "?" : "")];
                        break;
                    case !0:
                        f = f.replace(/\/$/, ""), e = ["(?:/(", ")|/)?"];
                        break;
                    default:
                        e = ["(" + c + "|", ")?"]
                }
                return f + e[0] + b + e[1]
            }

            function h(e, f) {
                var g, h, i, j, k;
                return g = e[2] || e[3], k = b.params[g], i = a.substring(m, e.index),
                    h = f ? e[4] : e[4] || ("*" == e[1] ? ".*" : null), h && (j =
                        U.type(h) || d(U.type("string"), {
                            pattern: new RegExp(h, b.caseInsensitive ? "i" :
                                c)
                        })), {
                        id: g,
                        regexp: h,
                        segment: i,
                        type: j,
                        cfg: k
                    }
            }
            b = R({
                params: {}
            }, O(b) ? b : {});
            var i, j =
                /([:*])([\w\[\]]+)|\{([\w\[\]]+)(?:\:\s*((?:[^{}\\]+|\\.|\{(?:[^{}\\]+|\\.)*\})+))?\}/g,
                k =
                /([:]?)([\w\[\].-]+)|\{([\w\[\].-]+)(?:\:\s*((?:[^{}\\]+|\\.|\{(?:[^{}\\]+|\\.)*\})+))?\}/g,
                l = "^",
                m = 0,
                n = this.segments = [],
                o = e ? e.params : {},
                p = this.params = e ? e.params.$$new() : new U.ParamSet,
                q = [];
            this.source = a;
            for (var r, s, t;
                (i = j.exec(a)) && (r = h(i, !1), !(r.segment.indexOf("?") >= 0));
            ) s = f(r.id, r.type, r.cfg, "path"), l += g(r.segment, s.type.pattern
                .source, s.squash, s.isOptional), n.push(r.segment), m = j.lastIndex;
            t = a.substring(m);
            var u = t.indexOf("?");
            if (u >= 0) {
                var v = this.sourceSearch = t.substring(u);
                if (t = t.substring(0, u), this.sourcePath = a.substring(0, m +
                        u), v.length > 0)
                    for (m = 0; i = k.exec(v);) r = h(i, !0), s = f(r.id, r.type,
                        r.cfg, "search"), m = j.lastIndex
            } else this.sourcePath = a, this.sourceSearch = "";
            l += g(t) + (b.strict === !1 ? "/?" : "") + "$", n.push(t), this.regexp =
                new RegExp(l, b.caseInsensitive ? "i" : c), this.prefix = n[0],
                this.$$paramNames = q
        }

        function s(a) {
            R(this, a)
        }

        function t() {
            function a(a) {
                return null != a ? a.toString().replace(/~/g, "~~").replace(
                    /\//g, "~2F") : a
            }

            function e(a) {
                return null != a ? a.toString().replace(/~2F/g, "/").replace(
                    /~~/g, "~") : a
            }

            function f() {
                return {
                    strict: p,
                    caseInsensitive: m
                }
            }

            function i(a) {
                return M(a) || P(a) && M(a[a.length - 1])
            }

            function j() {
                for (; w.length;) {
                    var a = w.shift();
                    if (a.pattern) throw new Error(
                        "You cannot override a type's .pattern at runtime."
                    );
                    b.extend(u[a.name], l.invoke(a.def))
                }
            }

            function k(a) {
                R(this, a || {})
            }
            U = this;
            var l, m = !1,
                p = !0,
                q = !1,
                u = {},
                v = !0,
                w = [],
                x = {
                    string: {
                        encode: a,
                        decode: e,
                        is: function(a) {
                            return null == a || !L(a) || "string" == typeof a
                        },
                        pattern: /[^\/]*/
                    },
                    "int": {
                        encode: a,
                        decode: function(a) {
                            return parseInt(a, 10)
                        },
                        is: function(a) {
                            return L(a) && this.decode(a.toString()) === a
                        },
                        pattern: /\d+/
                    },
                    bool: {
                        encode: function(a) {
                            return a ? 1 : 0
                        },
                        decode: function(a) {
                            return 0 !== parseInt(a, 10)
                        },
                        is: function(a) {
                            return a === !0 || a === !1
                        },
                        pattern: /0|1/
                    },
                    date: {
                        encode: function(a) {
                            return this.is(a) ? [a.getFullYear(), ("0" + (a
                                .getMonth() + 1)).slice(-2), ("0" +
                                a.getDate()).slice(-2)].join("-") : c
                        },
                        decode: function(a) {
                            if (this.is(a)) return a;
                            var b = this.capture.exec(a);
                            return b ? new Date(b[1], b[2] - 1, b[3]) : c
                        },
                        is: function(a) {
                            return a instanceof Date && !isNaN(a.valueOf())
                        },
                        equals: function(a, b) {
                            return this.is(a) && this.is(b) && a.toISOString() ===
                                b.toISOString()
                        },
                        pattern: /[0-9]{4}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[1-2][0-9]|3[0-1])/,
                        capture: /([0-9]{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])/
                    },
                    json: {
                        encode: b.toJson,
                        decode: b.fromJson,
                        is: b.isObject,
                        equals: b.equals,
                        pattern: /[^\/]*/
                    },
                    any: {
                        encode: b.identity,
                        decode: b.identity,
                        equals: b.equals,
                        pattern: /.*/
                    }
                };
            t.$$getDefaultValue = function(a) {
                if (!i(a.value)) return a.value;
                if (!l) throw new Error(
                    "Injectable functions cannot be called at configuration time"
                );
                return l.invoke(a.value)
            }, this.caseInsensitive = function(a) {
                return L(a) && (m = a), m
            }, this.strictMode = function(a) {
                return L(a) && (p = a), p
            }, this.defaultSquashPolicy = function(a) {
                if (!L(a)) return q;
                if (a !== !0 && a !== !1 && !N(a)) throw new Error(
                    "Invalid squash policy: " + a +
                    ". Valid policies: false, true, arbitrary-string");
                return q = a, a
            }, this.compile = function(a, b) {
                return new r(a, R(f(), b))
            }, this.isMatcher = function(a) {
                if (!O(a)) return !1;
                var b = !0;
                return Q(r.prototype, function(c, d) {
                    M(c) && (b = b && L(a[d]) && M(a[d]))
                }), b
            }, this.type = function(a, b, c) {
                if (!L(b)) return u[a];
                if (u.hasOwnProperty(a)) throw new Error("A type named '" +
                    a + "' has already been defined.");
                return u[a] = new s(R({
                    name: a
                }, b)), c && (w.push({
                    name: a,
                    def: c
                }), v || j()), this
            }, Q(x, function(a, b) {
                u[b] = new s(R({
                    name: b
                }, a))
            }), u = d(u, {}), this.$get = ["$injector", function(a) {
                return l = a, v = !1, j(), Q(x, function(a, b) {
                    u[b] || (u[b] = new s(a))
                }), this
            }], this.Param = function(a, d, e, f) {
                function j(a) {
                    var b = O(a) ? g(a) : [],
                        c = -1 === h(b, "value") && -1 === h(b, "type") &&
                        -1 === h(b, "squash") && -1 === h(b, "array");
                    return c && (a = {
                        value: a
                    }), a.$$fn = i(a.value) ? a.value : function() {
                        return a.value
                    }, a
                }

                function k(c, d, e) {
                    if (c.type && d) throw new Error("Param '" + a +
                        "' has two type configurations.");
                    return d ? d : c.type ? b.isString(c.type) ? u[c.type] :
                        c.type instanceof s ? c.type : new s(c.type) :
                        "config" === e ? u.any : u.string
                }

                function m() {
                    var b = {
                            array: "search" === f ? "auto" : !1
                        },
                        c = a.match(/\[\]$/) ? {
                            array: !0
                        } : {};
                    return R(b, c, e).array
                }

                function p(a, b) {
                    var c = a.squash;
                    if (!b || c === !1) return !1;
                    if (!L(c) || null == c) return q;
                    if (c === !0 || N(c)) return c;
                    throw new Error("Invalid squash policy: '" + c +
                        "'. Valid policies: false, true, or arbitrary string"
                    )
                }

                function r(a, b, d, e) {
                    var f, g, i = [{
                        from: "",
                        to: d || b ? c : ""
                    }, {
                        from: null,
                        to: d || b ? c : ""
                    }];
                    return f = P(a.replace) ? a.replace : [], N(e) && f.push({
                        from: e,
                        to: c
                    }), g = o(f, function(a) {
                        return a.from
                    }), n(i, function(a) {
                        return -1 === h(g, a.from)
                    }).concat(f)
                }

                function t() {
                    if (!l) throw new Error(
                        "Injectable functions cannot be called at configuration time"
                    );
                    var a = l.invoke(e.$$fn);
                    if (null !== a && a !== c && !x.type.is(a)) throw new Error(
                        "Default value (" + a + ") for parameter '" + x
                        .id + "' is not an instance of Type (" + x.type
                        .name + ")");
                    return a
                }

                function v(a) {
                    function b(a) {
                        return function(b) {
                            return b.from === a
                        }
                    }

                    function c(a) {
                        var c = o(n(x.replace, b(a)), function(a) {
                            return a.to
                        });
                        return c.length ? c[0] : a
                    }
                    return a = c(a), L(a) ? x.type.$normalize(a) : t()
                }

                function w() {
                    return "{Param:" + a + " " + d + " squash: '" + A +
                        "' optional: " + z + "}"
                }
                var x = this;
                e = j(e), d = k(e, d, f);
                var y = m();
                d = y ? d.$asArray(y, "search" === f) : d, "string" !== d.name ||
                    y || "path" !== f || e.value !== c || (e.value = "");
                var z = e.value !== c,
                    A = p(e, z),
                    B = r(e, y, z, A);
                R(this, {
                    id: a,
                    type: d,
                    location: f,
                    array: y,
                    squash: A,
                    replace: B,
                    isOptional: z,
                    value: v,
                    dynamic: c,
                    config: e,
                    toString: w
                })
            }, k.prototype = {
                $$new: function() {
                    return d(this, R(new k, {
                        $$parent: this
                    }))
                },
                $$keys: function() {
                    for (var a = [], b = [], c = this, d = g(k.prototype); c;)
                        b.push(c), c = c.$$parent;
                    return b.reverse(), Q(b, function(b) {
                        Q(g(b), function(b) {
                            -1 === h(a, b) && -1 === h(
                                d, b) && a.push(b)
                        })
                    }), a
                },
                $$values: function(a) {
                    var b = {},
                        c = this;
                    return Q(c.$$keys(), function(d) {
                        b[d] = c[d].value(a && a[d])
                    }), b
                },
                $$equals: function(a, b) {
                    var c = !0,
                        d = this;
                    return Q(d.$$keys(), function(e) {
                        var f = a && a[e],
                            g = b && b[e];
                        d[e].type.equals(f, g) || (c = !1)
                    }), c
                },
                $$validates: function(a) {
                    var d, e, f, g, h, i = this.$$keys();
                    for (d = 0; d < i.length && (e = this[i[d]], f = a[
                            i[d]], f !== c && null !== f || !e.isOptional); d++) {
                        if (g = e.type.$normalize(f), !e.type.is(g))
                            return !1;
                        if (h = e.type.encode(g), b.isString(h) && !e.type
                            .pattern.exec(h)) return !1
                    }
                    return !0
                },
                $$parent: c
            }, this.ParamSet = k
        }

        function u(a, d) {
            function e(a) {
                var b = /^\^((?:\\[^a-zA-Z0-9]|[^\\\[\]\^$*+?.()|{}]+)*)/.exec(
                    a.source);
                return null != b ? b[1].replace(/\\(.)/g, "$1") : ""
            }

            function f(a, b) {
                return a.replace(/\$(\$|\d{1,2})/, function(a, c) {
                    return b["$" === c ? 0 : Number(c)]
                })
            }

            function g(a, b, c) {
                if (!c) return !1;
                var d = a.invoke(b, b, {
                    $match: c
                });
                return L(d) ? d : !0
            }

            function h(d, e, f, g, h) {
                function m(a, b, c) {
                    return "/" === q ? a : b ? q.slice(0, -1) + a : c ? q.slice(
                        1) + a : a
                }

                function n(a) {
                    function b(a) {
                        var b = a(f, d);
                        return b ? (N(b) && d.replace().url(b), !0) : !1
                    }
                    if (!a || !a.defaultPrevented) {
                        p && d.url() === p;
                        p = c;
                        var e, g = j.length;
                        for (e = 0; g > e; e++)
                            if (b(j[e])) return;
                        k && b(k)
                    }
                }

                function o() {
                    return i = i || e.$on("$locationChangeSuccess", n)
                }
                var p, q = g.baseHref(),
                    r = d.url();
                return l || o(), {
                    sync: function() {
                        n()
                    },
                    listen: function() {
                        return o()
                    },
                    update: function(a) {
                        return a ? void(r = d.url()) : void(d.url() !==
                            r && (d.url(r), d.replace()))
                    },
                    push: function(a, b, e) {
                        var f = a.format(b || {});
                        null !== f && b && b["#"] && (f += "#" + b["#"]),
                            d.url(f), p = e && e.$$avoidResync ? d.url() :
                            c, e && e.replace && d.replace()
                    },
                    href: function(c, e, f) {
                        if (!c.validates(e)) return null;
                        var g = a.html5Mode();
                        b.isObject(g) && (g = g.enabled), g = g && h.history;
                        var i = c.format(e);
                        if (f = f || {}, g || null === i || (i = "#" +
                                a.hashPrefix() + i), null !== i && e &&
                            e["#"] && (i += "#" + e["#"]), i = m(i, g,
                                f.absolute), !f.absolute || !i) return i;
                        var j = !g && i ? "/" : "",
                            k = d.port();
                        return k = 80 === k || 443 === k ? "" : ":" + k, [
                            d.protocol(), "://", d.host(), k, j, i
                        ].join("")
                    }
                }
            }
            var i, j = [],
                k = null,
                l = !1;
            this.rule = function(a) {
                if (!M(a)) throw new Error("'rule' must be a function");
                return j.push(a), this
            }, this.otherwise = function(a) {
                if (N(a)) {
                    var b = a;
                    a = function() {
                        return b
                    }
                } else if (!M(a)) throw new Error(
                    "'rule' must be a function");
                return k = a, this
            }, this.when = function(a, b) {
                var c, h = N(b);
                if (N(a) && (a = d.compile(a)), !h && !M(b) && !P(b)) throw new Error(
                    "invalid 'handler' in when()");
                var i = {
                        matcher: function(a, b) {
                            return h && (c = d.compile(b), b = [
                                "$match",
                                function(a) {
                                    return c.format(a)
                                }
                            ]), R(function(c, d) {
                                return g(c, b, a.exec(d.path(),
                                    d.search()))
                            }, {
                                prefix: N(a.prefix) ? a.prefix : ""
                            })
                        },
                        regex: function(a, b) {
                            if (a.global || a.sticky) throw new Error(
                                "when() RegExp must not be global or sticky"
                            );
                            return h && (c = b, b = ["$match", function(
                                a) {
                                return f(c, a)
                            }]), R(function(c, d) {
                                return g(c, b, a.exec(d.path()))
                            }, {
                                prefix: e(a)
                            })
                        }
                    },
                    j = {
                        matcher: d.isMatcher(a),
                        regex: a instanceof RegExp
                    };
                for (var k in j)
                    if (j[k]) return this.rule(i[k](a, b));
                throw new Error("invalid 'what' in when()")
            }, this.deferIntercept = function(a) {
                a === c && (a = !0), l = a
            }, this.$get = h, h.$inject = ["$location", "$rootScope",
                "$injector", "$browser", "$sniffer"
            ]
        }

        function v(a, e) {
            function f(a) {
                return 0 === a.indexOf(".") || 0 === a.indexOf("^")
            }

            function m(a, b) {
                if (!a) return c;
                var d = N(a),
                    e = d ? a : a.name,
                    g = f(e);
                if (g) {
                    if (!b) throw new Error(
                        "No reference point given for path '" + e + "'");
                    b = m(b);
                    for (var h = e.split("."), i = 0, j = h.length, k = b; j >
                        i; i++)
                        if ("" !== h[i] || 0 !== i) {
                            if ("^" !== h[i]) break;
                            if (!k.parent) throw new Error("Path '" + e +
                                "' not valid for state '" + b.name + "'");
                            k = k.parent
                        } else k = b;
                    h = h.slice(i).join("."), e = k.name + (k.name && h ? "." :
                        "") + h
                }
                var l = z[e];
                return !l || !d && (d || l !== a && l.self !== a) ? c : l
            }

            function n(a, b) {
                A[a] || (A[a] = []), A[a].push(b)
            }

            function p(a) {
                for (var b = A[a] || []; b.length;) q(b.shift())
            }

            function q(b) {
                b = d(b, {
                    self: b,
                    resolve: b.resolve || {},
                    toString: function() {
                        return this.name
                    }
                });
                var c = b.name;
                if (!N(c) || c.indexOf("@") >= 0) throw new Error(
                    "State must have a valid name");
                if (z.hasOwnProperty(c)) throw new Error("State '" + c +
                    "' is already defined");
                var e = -1 !== c.indexOf(".") ? c.substring(0, c.lastIndexOf(
                    ".")) : N(b.parent) ? b.parent : O(b.parent) && N(b.parent
                    .name) ? b.parent.name : "";
                if (e && !z[e]) return n(e, b.self);
                for (var f in C) M(C[f]) && (b[f] = C[f](b, C.$delegates[f]));
                return z[c] = b, !b[B] && b.url && a.when(b.url, ["$match",
                    "$stateParams",
                    function(a, c) {
                        y.$current.navigable == b && j(a, c) || y.transitionTo(
                            b, a, {
                                inherit: !0,
                                location: !1
                            })
                    }
                ]), p(c), b
            }

            function r(a) {
                return a.indexOf("*") > -1
            }

            function s(a) {
                for (var b = a.split("."), c = y.$current.name.split("."), d =
                        0, e = b.length; e > d; d++) "*" === b[d] && (c[d] =
                    "*");
                return "**" === b[0] && (c = c.slice(h(c, b[1])), c.unshift(
                        "**")), "**" === b[b.length - 1] && (c.splice(h(c, b[b.length -
                        2]) + 1, Number.MAX_VALUE), c.push("**")), b.length !=
                    c.length ? !1 : c.join("") === b.join("")
            }

            function t(a, b) {
                return N(a) && !L(b) ? C[a] : M(b) && N(a) ? (C[a] && !C.$delegates[
                    a] && (C.$delegates[a] = C[a]), C[a] = b, this) : this
            }

            function u(a, b) {
                return O(a) ? b = a : b.name = a, q(b), this
            }

            function v(a, e, f, h, l, n, p, q, t) {
                function u(b, c, d, f) {
                    var g = a.$broadcast("$stateNotFound", b, c, d);
                    if (g.defaultPrevented) return p.update(), D;
                    if (!g.retry) return null;
                    if (f.$retry) return p.update(), E;
                    var h = y.transition = e.when(g.retry);
                    return h.then(function() {
                        return h !== y.transition ? A : (b.options.$retry = !
                            0, y.transitionTo(b.to, b.toParams, b.options)
                        )
                    }, function() {
                        return D
                    }), p.update(), h
                }

                function v(a, c, d, g, i, j) {
                    function m() {
                        var c = [];
                        return Q(a.views, function(d, e) {
                            var g = d.resolve && d.resolve !== a.resolve ?
                                d.resolve : {};
                            g.$template = [function() {
                                return f.load(e, {
                                    view: d,
                                    locals: i.globals,
                                    params: n,
                                    notify: j.notify
                                }) || ""
                            }], c.push(l.resolve(g, i.globals, i.resolve,
                                a).then(function(c) {
                                if (M(d.controllerProvider) ||
                                    P(d.controllerProvider)
                                ) {
                                    var f = b.extend({}, g,
                                        i.globals);
                                    c.$$controller = h.invoke(
                                        d.controllerProvider,
                                        null, f)
                                } else c.$$controller = d.controller;
                                c.$$state = a, c.$$controllerAs =
                                    d.controllerAs, i[e] =
                                    c
                            }))
                        }), e.all(c).then(function() {
                            return i.globals
                        })
                    }
                    var n = d ? c : k(a.params.$$keys(), c),
                        o = {
                            $stateParams: n
                        };
                    i.resolve = l.resolve(a.resolve, o, i.resolve, a);
                    var p = [i.resolve.then(function(a) {
                        i.globals = a
                    })];
                    return g && p.push(g), e.all(p).then(m).then(function(a) {
                        return i
                    })
                }
                var A = e.reject(new Error("transition superseded")),
                    C = e.reject(new Error("transition prevented")),
                    D = e.reject(new Error("transition aborted")),
                    E = e.reject(new Error("transition failed"));
                return x.locals = {
                    resolve: null,
                    globals: {
                        $stateParams: {}
                    }
                }, y = {
                    params: {},
                    current: x.self,
                    $current: x,
                    transition: null
                }, y.reload = function(a) {
                    return y.transitionTo(y.current, n, {
                        reload: a || !0,
                        inherit: !1,
                        notify: !0
                    })
                }, y.go = function(a, b, c) {
                    return y.transitionTo(a, b, R({
                        inherit: !0,
                        relative: y.$current
                    }, c))
                }, y.transitionTo = function(b, c, f) {
                    c = c || {}, f = R({
                        location: !0,
                        inherit: !1,
                        relative: null,
                        notify: !0,
                        reload: !1,
                        $retry: !1
                    }, f || {});
                    var g, j = y.$current,
                        l = y.params,
                        o = j.path,
                        q = m(b, f.relative),
                        r = c["#"];
                    if (!L(q)) {
                        var s = {
                                to: b,
                                toParams: c,
                                options: f
                            },
                            t = u(s, j.self, l, f);
                        if (t) return t;
                        if (b = s.to, c = s.toParams, f = s.options, q = m(
                                b, f.relative), !L(q)) {
                            if (!f.relative) throw new Error(
                                "No such state '" + b + "'");
                            throw new Error("Could not resolve '" + b +
                                "' from state '" + f.relative + "'")
                        }
                    }
                    if (q[B]) throw new Error(
                        "Cannot transition to abstract state '" + b +
                        "'");
                    if (f.inherit && (c = i(n, c || {}, y.$current, q)), !q
                        .params.$$validates(c)) return E;
                    c = q.params.$$values(c), b = q;
                    var z = b.path,
                        D = 0,
                        F = z[D],
                        G = x.locals,
                        H = [];
                    if (f.reload) {
                        if (N(f.reload) || O(f.reload)) {
                            if (O(f.reload) && !f.reload.name) throw new Error(
                                "Invalid reload state object");
                            var I = f.reload === !0 ? o[0] : m(f.reload);
                            if (f.reload && !I) throw new Error(
                                "No such reload state '" + (N(f.reload) ?
                                    f.reload : f.reload.name) + "'");
                            for (; F && F === o[D] && F !== I;) G = H[D] =
                                F.locals, D++, F = z[D]
                        }
                    } else
                        for (; F && F === o[D] && F.ownParams.$$equals(c, l);)
                            G = H[D] = F.locals, D++, F = z[D];
                    if (w(b, c, j, l, G, f)) return r && (c["#"] = r), y.params =
                        c, S(y.params, n), S(k(b.params.$$keys(), n), b
                            .locals.globals.$stateParams), f.location &&
                        b.navigable && b.navigable.url && (p.push(b.navigable
                            .url, c, {
                                $$avoidResync: !0,
                                replace: "replace" === f.location
                            }), p.update(!0)), y.transition = null, e.when(
                            y.current);
                    if (c = k(b.params.$$keys(), c || {}), r && (c["#"] = r),
                        f.notify && a.$broadcast("$stateChangeStart", b.self,
                            c, j.self, l, f).defaultPrevented) return a.$broadcast(
                            "$stateChangeCancel", b.self, c, j.self, l),
                        null == y.transition && p.update(), C;
                    for (var J = e.when(G), K = D; K < z.length; K++, F = z[
                            K]) G = H[K] = d(G), J = v(F, c, F === b, J, G,
                        f);
                    var M = y.transition = J.then(function() {
                        var d, e, g;
                        if (y.transition !== M) return A;
                        for (d = o.length - 1; d >= D; d--) g = o[d],
                            g.self.onExit && h.invoke(g.self.onExit,
                                g.self, g.locals.globals), g.locals =
                            null;
                        for (d = D; d < z.length; d++) e = z[d], e.locals =
                            H[d], e.self.onEnter && h.invoke(e.self
                                .onEnter, e.self, e.locals.globals);
                        return y.transition !== M ? A : (y.$current =
                            b, y.current = b.self, y.params = c,
                            S(y.params, n), y.transition = null,
                            f.location && b.navigable && p.push(
                                b.navigable.url, b.navigable.locals
                                .globals.$stateParams, {
                                    $$avoidResync: !0,
                                    replace: "replace" === f.location
                                }), f.notify && a.$broadcast(
                                "$stateChangeSuccess", b.self,
                                c, j.self, l), p.update(!0), y.current
                        )
                    }, function(d) {
                        return y.transition !== M ? A : (y.transition =
                            null, g = a.$broadcast(
                                "$stateChangeError", b.self, c,
                                j.self, l, d), g.defaultPrevented ||
                            p.update(), e.reject(d))
                    });
                    return M
                }, y.is = function(a, b, d) {
                    d = R({
                        relative: y.$current
                    }, d || {});
                    var e = m(a, d.relative);
                    return L(e) ? y.$current !== e ? !1 : b ? j(e.params.$$values(
                        b), n) : !0 : c
                }, y.includes = function(a, b, d) {
                    if (d = R({
                            relative: y.$current
                        }, d || {}), N(a) && r(a)) {
                        if (!s(a)) return !1;
                        a = y.$current.name
                    }
                    var e = m(a, d.relative);
                    return L(e) ? L(y.$current.includes[e.name]) ? b ? j(e.params
                        .$$values(b), n, g(b)) : !0 : !1 : c
                }, y.href = function(a, b, d) {
                    d = R({
                        lossy: !0,
                        inherit: !0,
                        absolute: !1,
                        relative: y.$current
                    }, d || {});
                    var e = m(a, d.relative);
                    if (!L(e)) return null;
                    d.inherit && (b = i(n, b || {}, y.$current, e));
                    var f = e && d.lossy ? e.navigable : e;
                    return f && f.url !== c && null !== f.url ? p.href(f.url,
                        k(e.params.$$keys().concat("#"), b || {}), {
                            absolute: d.absolute
                        }) : null
                }, y.get = function(a, b) {
                    if (0 === arguments.length) return o(g(z), function(a) {
                        return z[a].self
                    });
                    var c = m(a, b || y.$current);
                    return c && c.self ? c.self : null
                }, y
            }

            function w(a, b, c, d, e, f) {
                function g(a, b, c) {
                    function d(b) {
                        return "search" != a.params[b].location
                    }
                    var e = a.params.$$keys().filter(d),
                        f = l.apply({}, [a.params].concat(e)),
                        g = new U.ParamSet(f);
                    return g.$$equals(b, c)
                }
                return !f.reload && a === c && (e === c.locals || a.self.reloadOnSearch ===
                    !1 && g(c, d, b)) ? !0 : void 0
            }
            var x, y, z = {},
                A = {},
                B = "abstract",
                C = {
                    parent: function(a) {
                        if (L(a.parent) && a.parent) return m(a.parent);
                        var b = /^(.+)\.[^.]+$/.exec(a.name);
                        return b ? m(b[1]) : x
                    },
                    data: function(a) {
                        return a.parent && a.parent.data && (a.data = a.self
                            .data = d(a.parent.data, a.data)), a.data
                    },
                    url: function(a) {
                        var b = a.url,
                            c = {
                                params: a.params || {}
                            };
                        if (N(b)) return "^" == b.charAt(0) ? e.compile(b.substring(
                            1), c) : (a.parent.navigable || x).url.concat(
                            b, c);
                        if (!b || e.isMatcher(b)) return b;
                        throw new Error("Invalid url '" + b +
                            "' in state '" + a + "'")
                    },
                    navigable: function(a) {
                        return a.url ? a : a.parent ? a.parent.navigable :
                            null
                    },
                    ownParams: function(a) {
                        var b = a.url && a.url.params || new U.ParamSet;
                        return Q(a.params || {}, function(a, c) {
                            b[c] || (b[c] = new U.Param(c, null, a,
                                "config"))
                        }), b
                    },
                    params: function(a) {
                        var b = l(a.ownParams, a.ownParams.$$keys());
                        return a.parent && a.parent.params ? R(a.parent.params
                            .$$new(), b) : new U.ParamSet
                    },
                    views: function(a) {
                        var b = {};
                        return Q(L(a.views) ? a.views : {
                            "": a
                        }, function(c, d) {
                            d.indexOf("@") < 0 && (d += "@" + a.parent
                                .name), b[d] = c
                        }), b
                    },
                    path: function(a) {
                        return a.parent ? a.parent.path.concat(a) : []
                    },
                    includes: function(a) {
                        var b = a.parent ? R({}, a.parent.includes) : {};
                        return b[a.name] = !0, b
                    },
                    $delegates: {}
                };
            x = q({
                    name: "",
                    url: "^",
                    views: null,
                    "abstract": !0
                }), x.navigable = null, this.decorator = t, this.state = u,
                this.$get = v, v.$inject = ["$rootScope", "$q", "$view",
                    "$injector", "$resolve", "$stateParams", "$urlRouter",
                    "$location", "$urlMatcherFactory"
                ]
        }

        function w() {
            function a(a, b) {
                return {
                    load: function(a, c) {
                        var d, e = {
                            template: null,
                            controller: null,
                            view: null,
                            locals: null,
                            notify: !0,
                            async: !0,
                            params: {}
                        };
                        return c = R(e, c), c.view && (d = b.fromConfig(c.view,
                            c.params, c.locals)), d
                    }
                }
            }
            this.$get = a, a.$inject = ["$rootScope", "$templateFactory"]
        }

        function x() {
            var a = !1;
            this.useAnchorScroll = function() {
                a = !0
            }, this.$get = ["$anchorScroll", "$timeout", function(b, c) {
                return a ? b : function(a) {
                    return c(function() {
                        a[0].scrollIntoView()
                    }, 0, !1)
                }
            }]
        }

        function y(a, c, d, e) {
            function f() {
                return c.has ? function(a) {
                    return c.has(a) ? c.get(a) : null
                } : function(a) {
                    try {
                        return c.get(a)
                    } catch (b) {
                        return null
                    }
                }
            }

            function g(a, c) {
                function d(a) {
                    return 1 === V && W >= 4 ? !!j.enabled(a) : 1 === V && W >=
                        2 ? !!j.enabled() : !!i
                }
                var e = {
                    enter: function(a, b, c) {
                        b.after(a), c()
                    },
                    leave: function(a, b) {
                        a.remove(), b()
                    }
                };
                if (a.noanimation) return e;
                if (j) return {
                    enter: function(a, c, f) {
                        d(a) ? b.version.minor > 2 ? j.enter(a, null, c)
                            .then(f) : j.enter(a, null, c, f) : e.enter(
                                a, c, f)
                    },
                    leave: function(a, c) {
                        d(a) ? b.version.minor > 2 ? j.leave(a).then(c) :
                            j.leave(a, c) : e.leave(a, c)
                    }
                };
                if (i) {
                    var f = i && i(c, a);
                    return {
                        enter: function(a, b, c) {
                            f.enter(a, null, b), c()
                        },
                        leave: function(a, b) {
                            f.leave(a), b()
                        }
                    }
                }
                return e
            }
            var h = f(),
                i = h("$animator"),
                j = h("$animate"),
                k = {
                    restrict: "ECA",
                    terminal: !0,
                    priority: 400,
                    transclude: "element",
                    compile: function(c, f, h) {
                        return function(c, f, i) {
                            function j() {
                                function a() {
                                    b && b.remove(), c && c.$destroy()
                                }
                                var b = l,
                                    c = n;
                                c && (c._willBeDestroyed = !0), m ? (r.leave(
                                        m,
                                        function() {
                                            a(), l = null
                                        }), l = m) : (a(), l = null), m =
                                    null, n = null
                            }

                            function k(g) {
                                var k, l = A(c, i, f, e),
                                    s = l && a.$current && a.$current.locals[
                                        l];
                                if ((g || s !== o) && !c._willBeDestroyed) {
                                    k = c.$new(), o = a.$current.locals[
                                        l], k.$emit(
                                        "$viewContentLoading", l);
                                    var t = h(k, function(a) {
                                        r.enter(a, f, function() {
                                            n && n.$emit(
                                                    "$viewContentAnimationEnded"
                                                ), (b.isDefined(
                                                        q
                                                    ) &&
                                                    !q ||
                                                    c.$eval(
                                                        q
                                                    )) &&
                                                d(a)
                                        }), j()
                                    });
                                    m = t, n = k, n.$emit(
                                            "$viewContentLoaded", l), n
                                        .$eval(p)
                                }
                            }
                            var l, m, n, o, p = i.onload || "",
                                q = i.autoscroll,
                                r = g(i, c);
                            c.$on("$stateChangeSuccess", function() {
                                k(!1)
                            }), k(!0)
                        }
                    }
                };
            return k
        }

        function z(a, b, c, d) {
            return {
                restrict: "ECA",
                priority: -400,
                compile: function(e) {
                    var f = e.html();
                    return function(e, g, h) {
                        var i = c.$current,
                            j = A(e, h, g, d),
                            k = i && i.locals[j];
                        if (k) {
                            g.data("$uiView", {
                                name: j,
                                state: k.$$state
                            }), g.html(k.$template ? k.$template :
                                f);
                            var l = a(g.contents());
                            if (k.$$controller) {
                                k.$scope = e, k.$element = g;
                                var m = b(k.$$controller, k);
                                k.$$controllerAs && (e[k.$$controllerAs] =
                                        m), g.data(
                                        "$ngControllerController", m),
                                    g.children().data(
                                        "$ngControllerController", m)
                            }
                            l(e)
                        }
                    }
                }
            }
        }

        function A(a, b, c, d) {
            var e = d(b.uiView || b.name || "")(a),
                f = c.inheritedData("$uiView");
            return e.indexOf("@") >= 0 ? e : e + "@" + (f ? f.state.name : "")
        }

        function B(a, b) {
            var c, d = a.match(/^\s*({[^}]*})\s*$/);
            if (d && (a = b + "(" + d[1] + ")"), c = a.replace(/\n/g, " ").match(
                    /^([^(]+?)\s*(\((.*)\))?$/), !c || 4 !== c.length) throw new Error(
                "Invalid state ref '" + a + "'");
            return {
                state: c[1],
                paramExpr: c[3] || null
            }
        }

        function C(a) {
            var b = a.parent().inheritedData("$uiView");
            return b && b.state && b.state.name ? b.state : void 0
        }

        function D(a) {
            var b = "[object SVGAnimatedString]" === Object.prototype.toString.call(
                    a.prop("href")),
                c = "FORM" === a[0].nodeName;
            return {
                attr: c ? "action" : b ? "xlink:href" : "href",
                isAnchor: "A" === a.prop("tagName").toUpperCase(),
                clickable: !c
            }
        }

        function E(a, b, c, d, e) {
            return function(f) {
                var g = f.which || f.button,
                    h = e();
                if (!(g > 1 || f.ctrlKey || f.metaKey || f.shiftKey || a.attr(
                        "target"))) {
                    var i = c(function() {
                        b.go(h.state, h.params, h.options)
                    });
                    f.preventDefault();
                    var j = d.isAnchor && !h.href ? 1 : 0;
                    f.preventDefault = function() {
                        j-- <= 0 && c.cancel(i)
                    }
                }
            }
        }

        function F(a, b) {
            return {
                relative: C(a) || b.$current,
                inherit: !0
            }
        }

        function G(a, c) {
            return {
                restrict: "A",
                require: ["?^uiSrefActive", "?^uiSrefActiveEq"],
                link: function(d, e, f, g) {
                    var h = B(f.uiSref, a.current.name),
                        i = {
                            state: h.state,
                            href: null,
                            params: null
                        },
                        j = D(e),
                        k = g[1] || g[0];
                    i.options = R(F(e, a), f.uiSrefOpts ? d.$eval(f.uiSrefOpts) : {});
                    var l = function(c) {
                        c && (i.params = b.copy(c)), i.href = a.href(h.state,
                                i.params, i.options), k && k.$$addStateInfo(
                                h.state, i.params), null !== i.href &&
                            f.$set(j.attr, i.href)
                    };
                    h.paramExpr && (d.$watch(h.paramExpr, function(a) {
                            a !== i.params && l(a)
                        }, !0), i.params = b.copy(d.$eval(h.paramExpr))), l(),
                        j.clickable && e.bind("click", E(e, a, c, j,
                            function() {
                                return i
                            }))
                }
            }
        }

        function H(a, b) {
            return {
                restrict: "A",
                require: ["?^uiSrefActive", "?^uiSrefActiveEq"],
                link: function(c, d, e, f) {
                    function g(b) {
                        l.state = b[0], l.params = b[1], l.options = b[2],
                            l.href = a.href(l.state, l.params, l.options),
                            i && i.$$addStateInfo(l.state, l.params), l.href &&
                            e.$set(h.attr, l.href)
                    }
                    var h = D(d),
                        i = f[1] || f[0],
                        j = [e.uiState, e.uiStateParams || null, e.uiStateOpts ||
                            null
                        ],
                        k = "[" + j.map(function(a) {
                            return a || "null"
                        }).join(", ") + "]",
                        l = {
                            state: null,
                            params: null,
                            options: null,
                            href: null
                        };
                    c.$watch(k, g, !0), g(c.$eval(k)), h.clickable && d.bind(
                        "click", E(d, a, b, h, function() {
                            return l
                        }))
                }
            }
        }

        function I(a, b, c) {
            return {
                restrict: "A",
                controller: ["$scope", "$element", "$attrs", "$timeout",
                    function(b, d, e, f) {
                        function g(b, c, e) {
                            var f = a.get(b, C(d)),
                                g = h(b, c);
                            p.push({
                                state: f || {
                                    name: b
                                },
                                params: c,
                                hash: g
                            }), q[g] = e
                        }

                        function h(a, c) {
                            if (!N(a)) throw new Error(
                                "state should be a string");
                            return O(c) ? a + T(c) : (c = b.$eval(c), O(c) ?
                                a + T(c) : a)
                        }

                        function i() {
                            for (var a = 0; a < p.length; a++) l(p[a].state,
                                    p[a].params) ? j(d, q[p[a].hash]) : k(d,
                                    q[p[a].hash]), m(p[a].state, p[a].params) ?
                                j(d, n) : k(d, n)
                        }

                        function j(a, b) {
                            f(function() {
                                a.addClass(b)
                            })
                        }

                        function k(a, b) {
                            a.removeClass(b)
                        }

                        function l(b, c) {
                            return a.includes(b.name, c)
                        }

                        function m(b, c) {
                            return a.is(b.name, c)
                        }
                        var n, o, p = [],
                            q = {};
                        n = c(e.uiSrefActiveEq || "", !1)(b);
                        try {
                            o = b.$eval(e.uiSrefActive)
                        } catch (r) {}
                        o = o || c(e.uiSrefActive || "", !1)(b), O(o) && Q(
                            o,
                            function(c, d) {
                                if (N(c)) {
                                    var e = B(c, a.current.name);
                                    g(e.state, b.$eval(e.paramExpr), d)
                                }
                            }), this.$$addStateInfo = function(a, b) {
                            O(o) && p.length > 0 || (g(a, b, o), i())
                        }, b.$on("$stateChangeSuccess", i), i()
                    }
                ]
            }
        }

        function J(a) {
            var b = function(b, c) {
                return a.is(b, c)
            };
            return b.$stateful = !0, b
        }

        function K(a) {
            var b = function(b, c, d) {
                return a.includes(b, c, d)
            };
            return b.$stateful = !0, b
        }
        var L = b.isDefined,
            M = b.isFunction,
            N = b.isString,
            O = b.isObject,
            P = b.isArray,
            Q = b.forEach,
            R = b.extend,
            S = b.copy,
            T = b.toJson;
        b.module("ui.router.util", ["ng"]), b.module("ui.router.router", [
            "ui.router.util"
        ]), b.module("ui.router.state", ["ui.router.router",
            "ui.router.util"
        ]), b.module("ui.router", ["ui.router.state"]), b.module(
            "ui.router.compat", ["ui.router"]), p.$inject = ["$q",
            "$injector"
        ], b.module("ui.router.util").service("$resolve", p), q.$inject = [
            "$http", "$templateCache", "$injector"
        ], b.module("ui.router.util").service("$templateFactory", q);
        var U;
        r.prototype.concat = function(a, b) {
                var c = {
                    caseInsensitive: U.caseInsensitive(),
                    strict: U.strictMode(),
                    squash: U.defaultSquashPolicy()
                };
                return new r(this.sourcePath + a + this.sourceSearch, R(c, b),
                    this)
            }, r.prototype.toString = function() {
                return this.source
            }, r.prototype.exec = function(a, b) {
                function c(a) {
                    function b(a) {
                        return a.split("").reverse().join("")
                    }

                    function c(a) {
                        return a.replace(/\\-/g, "-")
                    }
                    var d = b(a).split(/-(?!\\)/),
                        e = o(d, b);
                    return o(e, c).reverse()
                }
                var d = this.regexp.exec(a);
                if (!d) return null;
                b = b || {};
                var e, f, g, h = this.parameters(),
                    i = h.length,
                    j = this.segments.length - 1,
                    k = {};
                if (j !== d.length - 1) throw new Error(
                    "Unbalanced capture group in route '" + this.source +
                    "'");
                var l, m;
                for (e = 0; j > e; e++) {
                    for (g = h[e], l = this.params[g], m = d[e + 1], f = 0; f <
                        l.replace.length; f++) l.replace[f].from === m && (m =
                        l.replace[f].to);
                    m && l.array === !0 && (m = c(m)), L(m) && (m = l.type.decode(
                        m)), k[g] = l.value(m)
                }
                for (; i > e; e++) {
                    for (g = h[e], k[g] = this.params[g].value(b[g]), l = this.params[
                            g], m = b[g], f = 0; f < l.replace.length; f++) l.replace[
                        f].from === m && (m = l.replace[f].to);
                    L(m) && (m = l.type.decode(m)), k[g] = l.value(m)
                }
                return k
            }, r.prototype.parameters = function(a) {
                return L(a) ? this.params[a] || null : this.$$paramNames
            }, r.prototype.validates = function(a) {
                return this.params.$$validates(a)
            }, r.prototype.format = function(a) {
                function b(a) {
                    return encodeURIComponent(a).replace(/-/g, function(a) {
                        return "%5C%" + a.charCodeAt(0).toString(16).toUpperCase()
                    })
                }
                a = a || {};
                var c = this.segments,
                    d = this.parameters(),
                    e = this.params;
                if (!this.validates(a)) return null;
                var f, g = !1,
                    h = c.length - 1,
                    i = d.length,
                    j = c[0];
                for (f = 0; i > f; f++) {
                    var k = h > f,
                        l = d[f],
                        m = e[l],
                        n = m.value(a[l]),
                        p = m.isOptional && m.type.equals(m.value(), n),
                        q = p ? m.squash : !1,
                        r = m.type.encode(n);
                    if (k) {
                        var s = c[f + 1],
                            t = f + 1 === h;
                        if (q === !1) null != r && (j += P(r) ? o(r, b).join(
                            "-") : encodeURIComponent(r)), j += s;
                        else if (q === !0) {
                            var u = j.match(/\/$/) ? /\/?(.*)/ : /(.*)/;
                            j += s.match(u)[1]
                        } else N(q) && (j += q + s);
                        t && m.squash === !0 && "/" === j.slice(-1) && (j = j.slice(
                            0, -1))
                    } else {
                        if (null == r || p && q !== !1) continue;
                        if (P(r) || (r = [r]), 0 === r.length) continue;
                        r = o(r, encodeURIComponent).join("&" + l + "="), j +=
                            (g ? "&" : "?") + (l + "=" + r), g = !0
                    }
                }
                return j
            }, s.prototype.is = function(a, b) {
                return !0
            }, s.prototype.encode = function(a, b) {
                return a
            }, s.prototype.decode = function(a, b) {
                return a
            }, s.prototype.equals = function(a, b) {
                return a == b
            }, s.prototype.$subPattern = function() {
                var a = this.pattern.toString();
                return a.substr(1, a.length - 2)
            }, s.prototype.pattern = /.*/, s.prototype.toString = function() {
                return "{Type:" + this.name + "}"
            }, s.prototype.$normalize = function(a) {
                return this.is(a) ? a : this.decode(a)
            }, s.prototype.$asArray = function(a, b) {
                function d(a, b) {
                    function d(a, b) {
                        return function() {
                            return a[b].apply(a, arguments)
                        }
                    }

                    function e(a) {
                        return P(a) ? a : L(a) ? [a] : []
                    }

                    function f(a) {
                        switch (a.length) {
                            case 0:
                                return c;
                            case 1:
                                return "auto" === b ? a[0] : a;
                            default:
                                return a
                        }
                    }

                    function g(a) {
                        return !a
                    }

                    function h(a, b) {
                        return function(c) {
                            if (P(c) && 0 === c.length) return c;
                            c = e(c);
                            var d = o(c, a);
                            return b === !0 ? 0 === n(d, g).length : f(d)
                        }
                    }

                    function i(a) {
                        return function(b, c) {
                            var d = e(b),
                                f = e(c);
                            if (d.length !== f.length) return !1;
                            for (var g = 0; g < d.length; g++)
                                if (!a(d[g], f[g])) return !1;
                            return !0
                        }
                    }
                    this.encode = h(d(a, "encode")), this.decode = h(d(a,
                            "decode")), this.is = h(d(a, "is"), !0), this.equals =
                        i(d(a, "equals")), this.pattern = a.pattern, this.$normalize =
                        h(d(a, "$normalize")), this.name = a.name, this.$arrayMode =
                        b
                }
                if (!a) return this;
                if ("auto" === a && !b) throw new Error(
                    "'auto' array mode is for query parameters only");
                return new d(this, a)
            }, b.module("ui.router.util").provider("$urlMatcherFactory", t), b.module(
                "ui.router.util").run(["$urlMatcherFactory", function(a) {}]),
            u.$inject = ["$locationProvider", "$urlMatcherFactoryProvider"], b.module(
                "ui.router.router").provider("$urlRouter", u), v.$inject = [
                "$urlRouterProvider", "$urlMatcherFactoryProvider"
            ], b.module("ui.router.state").factory("$stateParams", function() {
                return {}
            }).provider("$state", v), w.$inject = [], b.module(
                "ui.router.state").provider("$view", w), b.module(
                "ui.router.state").provider("$uiViewScroll", x);
        var V = b.version.major,
            W = b.version.minor;
        y.$inject = ["$state", "$injector", "$uiViewScroll", "$interpolate"], z
            .$inject = ["$compile", "$controller", "$state", "$interpolate"], b
            .module("ui.router.state").directive("uiView", y), b.module(
                "ui.router.state").directive("uiView", z), G.$inject = [
                "$state", "$timeout"
            ], H.$inject = ["$state", "$timeout"], I.$inject = ["$state",
                "$stateParams", "$interpolate"
            ], b.module("ui.router.state").directive("uiSref", G).directive(
                "uiSrefActive", I).directive("uiSrefActiveEq", I).directive(
                "uiState", H), J.$inject = ["$state"], K.$inject = ["$state"],
            b.module("ui.router.state").filter("isState", J).filter(
                "includedByState", K)
    }(window, window.angular);
(function() {
    'use strict';
    var crop = angular.module('ngImgCrop', []);
    crop.factory('cropAreaCircle', ['cropArea', function(CropArea) {
        var CropAreaCircle = function() {
            CropArea.apply(this, arguments);
            this._boxResizeBaseSize = 20;
            this._boxResizeNormalRatio = 0.9;
            this._boxResizeHoverRatio = 1.2;
            this._iconMoveNormalRatio = 0.9;
            this._iconMoveHoverRatio = 1.2;
            this._boxResizeNormalSize = this._boxResizeBaseSize *
                this._boxResizeNormalRatio;
            this._boxResizeHoverSize = this._boxResizeBaseSize *
                this._boxResizeHoverRatio;
            this._posDragStartX = 0;
            this._posDragStartY = 0;
            this._posResizeStartX = 0;
            this._posResizeStartY = 0;
            this._posResizeStartSize = 0;
            this._boxResizeIsHover = false;
            this._areaIsHover = false;
            this._boxResizeIsDragging = false;
            this._areaIsDragging = false;
        };
        CropAreaCircle.prototype = new CropArea();
        CropAreaCircle.prototype._calcCirclePerimeterCoords =
            function(angleDegrees) {
                var hSize = this._size / 2;
                var angleRadians = angleDegrees * (Math.PI /
                        180),
                    circlePerimeterX = this._x + hSize * Math.cos(
                        angleRadians),
                    circlePerimeterY = this._y + hSize * Math.sin(
                        angleRadians);
                return [circlePerimeterX, circlePerimeterY];
            };
        CropAreaCircle.prototype._calcResizeIconCenterCoords =
            function() {
                return this._calcCirclePerimeterCoords(-45);
            };
        CropAreaCircle.prototype._isCoordWithinArea = function(
            coord) {
            return Math.sqrt((coord[0] - this._x) * (coord[
                    0] - this._x) + (coord[1] - this._y) *
                (coord[1] - this._y)) < this._size / 2;
        };
        CropAreaCircle.prototype._isCoordWithinBoxResize =
            function(coord) {
                var resizeIconCenterCoords = this._calcResizeIconCenterCoords();
                var hSize = this._boxResizeHoverSize / 2;
                return (coord[0] > resizeIconCenterCoords[0] -
                    hSize && coord[0] <
                    resizeIconCenterCoords[0] + hSize &&
                    coord[1] > resizeIconCenterCoords[1] -
                    hSize && coord[1] <
                    resizeIconCenterCoords[1] + hSize);
            };
        CropAreaCircle.prototype._drawArea = function(ctx,
            centerCoords, size) {
            ctx.arc(centerCoords[0], centerCoords[1], size /
                2, 0, 2 * Math.PI);
        };
        CropAreaCircle.prototype.draw = function() {
            CropArea.prototype.draw.apply(this, arguments);
            this._cropCanvas.drawIconMove([this._x, this._y],
                this._areaIsHover ? this._iconMoveHoverRatio :
                this._iconMoveNormalRatio);
            this._cropCanvas.drawIconResizeBoxNESW(this._calcResizeIconCenterCoords(),
                this._boxResizeBaseSize, this._boxResizeIsHover ?
                this._boxResizeHoverRatio : this._boxResizeNormalRatio
            );
        };
        CropAreaCircle.prototype.processMouseMove = function(
            mouseCurX, mouseCurY) {
            var cursor = 'default';
            var res = false;
            this._boxResizeIsHover = false;
            this._areaIsHover = false;
            if (this._areaIsDragging) {
                this._x = mouseCurX - this._posDragStartX;
                this._y = mouseCurY - this._posDragStartY;
                this._areaIsHover = true;
                cursor = 'move';
                res = true;
                this._events.trigger('area-move');
            } else if (this._boxResizeIsDragging) {
                cursor = 'nesw-resize';
                var iFR, iFX, iFY;
                iFX = mouseCurX - this._posResizeStartX;
                iFY = this._posResizeStartY - mouseCurY;
                if (iFX > iFY) {
                    iFR = this._posResizeStartSize + iFY *
                        2;
                } else {
                    iFR = this._posResizeStartSize + iFX *
                        2;
                }
                this._size = Math.max(this._minSize, iFR);
                this._boxResizeIsHover = true;
                res = true;
                this._events.trigger('area-resize');
            } else if (this._isCoordWithinBoxResize([
                    mouseCurX, mouseCurY
                ])) {
                cursor = 'nesw-resize';
                this._areaIsHover = false;
                this._boxResizeIsHover = true;
                res = true;
            } else if (this._isCoordWithinArea([mouseCurX,
                    mouseCurY
                ])) {
                cursor = 'move';
                this._areaIsHover = true;
                res = true;
            }
            this._dontDragOutside();
            angular.element(this._ctx.canvas).css({
                'cursor': cursor
            });
            return res;
        };
        CropAreaCircle.prototype.processMouseDown = function(
            mouseDownX, mouseDownY) {
            if (this._isCoordWithinBoxResize([mouseDownX,
                    mouseDownY
                ])) {
                this._areaIsDragging = false;
                this._areaIsHover = false;
                this._boxResizeIsDragging = true;
                this._boxResizeIsHover = true;
                this._posResizeStartX = mouseDownX;
                this._posResizeStartY = mouseDownY;
                this._posResizeStartSize = this._size;
                this._events.trigger('area-resize-start');
            } else if (this._isCoordWithinArea([mouseDownX,
                    mouseDownY
                ])) {
                this._areaIsDragging = true;
                this._areaIsHover = true;
                this._boxResizeIsDragging = false;
                this._boxResizeIsHover = false;
                this._posDragStartX = mouseDownX - this._x;
                this._posDragStartY = mouseDownY - this._y;
                this._events.trigger('area-move-start');
            }
        };
        CropAreaCircle.prototype.processMouseUp = function() {
            if (this._areaIsDragging) {
                this._areaIsDragging = false;
                this._events.trigger('area-move-end');
            }
            if (this._boxResizeIsDragging) {
                this._boxResizeIsDragging = false;
                this._events.trigger('area-resize-end');
            }
            this._areaIsHover = false;
            this._boxResizeIsHover = false;
            this._posDragStartX = 0;
            this._posDragStartY = 0;
        };
        return CropAreaCircle;
    }]);
    crop.factory('cropAreaSquare', ['cropArea', function(CropArea) {
        var CropAreaSquare = function() {
            CropArea.apply(this, arguments);
            this._resizeCtrlBaseRadius = 10;
            this._resizeCtrlNormalRatio = 0.75;
            this._resizeCtrlHoverRatio = 1;
            this._iconMoveNormalRatio = 0.9;
            this._iconMoveHoverRatio = 1.2;
            this._resizeCtrlNormalRadius = this._resizeCtrlBaseRadius *
                this._resizeCtrlNormalRatio;
            this._resizeCtrlHoverRadius = this._resizeCtrlBaseRadius *
                this._resizeCtrlHoverRatio;
            this._posDragStartX = 0;
            this._posDragStartY = 0;
            this._posResizeStartX = 0;
            this._posResizeStartY = 0;
            this._posResizeStartSize = 0;
            this._resizeCtrlIsHover = -1;
            this._areaIsHover = false;
            this._resizeCtrlIsDragging = -1;
            this._areaIsDragging = false;
        };
        CropAreaSquare.prototype = new CropArea();
        CropAreaSquare.prototype._calcSquareCorners = function() {
            var hSize = this._size / 2;
            return [
                [this._x - hSize, this._y - hSize],
                [this._x + hSize, this._y - hSize],
                [this._x - hSize, this._y + hSize],
                [this._x + hSize, this._y + hSize]
            ];
        };
        CropAreaSquare.prototype._calcSquareDimensions =
            function() {
                var hSize = this._size / 2;
                return {
                    left: this._x - hSize,
                    top: this._y - hSize,
                    right: this._x + hSize,
                    bottom: this._y + hSize
                };
            };
        CropAreaSquare.prototype._isCoordWithinArea = function(
            coord) {
            var squareDimensions = this._calcSquareDimensions();
            return (coord[0] >= squareDimensions.left &&
                coord[0] <= squareDimensions.right &&
                coord[1] >= squareDimensions.top &&
                coord[1] <= squareDimensions.bottom);
        };
        CropAreaSquare.prototype._isCoordWithinResizeCtrl =
            function(coord) {
                var resizeIconsCenterCoords = this._calcSquareCorners();
                var res = -1;
                for (var i = 0, len = resizeIconsCenterCoords.length; i <
                    len; i++) {
                    var resizeIconCenterCoords =
                        resizeIconsCenterCoords[i];
                    if (coord[0] > resizeIconCenterCoords[0] -
                        this._resizeCtrlHoverRadius && coord[0] <
                        resizeIconCenterCoords[0] + this._resizeCtrlHoverRadius &&
                        coord[1] > resizeIconCenterCoords[1] -
                        this._resizeCtrlHoverRadius && coord[1] <
                        resizeIconCenterCoords[1] + this._resizeCtrlHoverRadius
                    ) {
                        res = i;
                        break;
                    }
                }
                return res;
            };
        CropAreaSquare.prototype._drawArea = function(ctx,
            centerCoords, size) {
            var hSize = size / 2;
            ctx.rect(centerCoords[0] - hSize, centerCoords[
                1] - hSize, size, size);
        };
        CropAreaSquare.prototype.draw = function() {
            CropArea.prototype.draw.apply(this, arguments);
            this._cropCanvas.drawIconMove([this._x, this._y],
                this._areaIsHover ? this._iconMoveHoverRatio :
                this._iconMoveNormalRatio);
            var resizeIconsCenterCoords = this._calcSquareCorners();
            for (var i = 0, len = resizeIconsCenterCoords.length; i <
                len; i++) {
                var resizeIconCenterCoords =
                    resizeIconsCenterCoords[i];
                this._cropCanvas.drawIconResizeCircle(
                    resizeIconCenterCoords, this._resizeCtrlBaseRadius,
                    this._resizeCtrlIsHover === i ?
                    this._resizeCtrlHoverRatio : this._resizeCtrlNormalRatio
                );
            }
        };
        CropAreaSquare.prototype.processMouseMove = function(
            mouseCurX, mouseCurY) {
            var cursor = 'default';
            var res = false;
            this._resizeCtrlIsHover = -1;
            this._areaIsHover = false;
            if (this._areaIsDragging) {
                this._x = mouseCurX - this._posDragStartX;
                this._y = mouseCurY - this._posDragStartY;
                this._areaIsHover = true;
                cursor = 'move';
                res = true;
                this._events.trigger('area-move');
            } else if (this._resizeCtrlIsDragging > -1) {
                var xMulti, yMulti;
                switch (this._resizeCtrlIsDragging) {
                    case 0:
                        xMulti = -1;
                        yMulti = -1;
                        cursor = 'nwse-resize';
                        break;
                    case 1:
                        xMulti = 1;
                        yMulti = -1;
                        cursor = 'nesw-resize';
                        break;
                    case 2:
                        xMulti = -1;
                        yMulti = 1;
                        cursor = 'nesw-resize';
                        break;
                    case 3:
                        xMulti = 1;
                        yMulti = 1;
                        cursor = 'nwse-resize';
                        break;
                }
                var iFX = (mouseCurX - this._posResizeStartX) *
                    xMulti;
                var iFY = (mouseCurY - this._posResizeStartY) *
                    yMulti;
                var iFR;
                if (iFX > iFY) {
                    iFR = this._posResizeStartSize + iFY;
                } else {
                    iFR = this._posResizeStartSize + iFX;
                }
                var wasSize = this._size;
                this._size = Math.max(this._minSize, iFR);
                var posModifier = (this._size - wasSize) /
                    2;
                this._x += posModifier * xMulti;
                this._y += posModifier * yMulti;
                this._resizeCtrlIsHover = this._resizeCtrlIsDragging;
                res = true;
                this._events.trigger('area-resize');
            } else {
                var hoveredResizeBox = this._isCoordWithinResizeCtrl(
                    [mouseCurX, mouseCurY]);
                if (hoveredResizeBox > -1) {
                    switch (hoveredResizeBox) {
                        case 0:
                            cursor = 'nwse-resize';
                            break;
                        case 1:
                            cursor = 'nesw-resize';
                            break;
                        case 2:
                            cursor = 'nesw-resize';
                            break;
                        case 3:
                            cursor = 'nwse-resize';
                            break;
                    }
                    this._areaIsHover = false;
                    this._resizeCtrlIsHover =
                        hoveredResizeBox;
                    res = true;
                } else if (this._isCoordWithinArea([
                        mouseCurX, mouseCurY
                    ])) {
                    cursor = 'move';
                    this._areaIsHover = true;
                    res = true;
                }
            }
            this._dontDragOutside();
            angular.element(this._ctx.canvas).css({
                'cursor': cursor
            });
            return res;
        };
        CropAreaSquare.prototype.processMouseDown = function(
            mouseDownX, mouseDownY) {
            var isWithinResizeCtrl = this._isCoordWithinResizeCtrl(
                [mouseDownX, mouseDownY]);
            if (isWithinResizeCtrl > -1) {
                this._areaIsDragging = false;
                this._areaIsHover = false;
                this._resizeCtrlIsDragging =
                    isWithinResizeCtrl;
                this._resizeCtrlIsHover =
                    isWithinResizeCtrl;
                this._posResizeStartX = mouseDownX;
                this._posResizeStartY = mouseDownY;
                this._posResizeStartSize = this._size;
                this._events.trigger('area-resize-start');
            } else if (this._isCoordWithinArea([mouseDownX,
                    mouseDownY
                ])) {
                this._areaIsDragging = true;
                this._areaIsHover = true;
                this._resizeCtrlIsDragging = -1;
                this._resizeCtrlIsHover = -1;
                this._posDragStartX = mouseDownX - this._x;
                this._posDragStartY = mouseDownY - this._y;
                this._events.trigger('area-move-start');
            }
        };
        CropAreaSquare.prototype.processMouseUp = function() {
            if (this._areaIsDragging) {
                this._areaIsDragging = false;
                this._events.trigger('area-move-end');
            }
            if (this._resizeCtrlIsDragging > -1) {
                this._resizeCtrlIsDragging = -1;
                this._events.trigger('area-resize-end');
            }
            this._areaIsHover = false;
            this._resizeCtrlIsHover = -1;
            this._posDragStartX = 0;
            this._posDragStartY = 0;
        };
        return CropAreaSquare;
    }]);
    crop.factory('cropArea', ['cropCanvas', function(CropCanvas) {
        var CropArea = function(ctx, events) {
            this._ctx = ctx;
            this._events = events;
            this._minSize = 80;
            this._cropCanvas = new CropCanvas(ctx);
            this._image = new Image();
            this._x = 0;
            this._y = 0;
            this._size = 300;
        };
        CropArea.prototype.getImage = function() {
            return this._image;
        };
        CropArea.prototype.setImage = function(image) {
            this._image = image;
        };
        CropArea.prototype.getX = function() {
            return this._x;
        };
        CropArea.prototype.setX = function(x) {
            this._x = x;
            this._dontDragOutside();
        };
        CropArea.prototype.getY = function() {
            return this._y;
        };
        CropArea.prototype.setY = function(y) {
            this._y = y;
            this._dontDragOutside();
        };
        CropArea.prototype.getSize = function() {
            return this._size;
        };
        CropArea.prototype.setSize = function(size) {
            this._size = Math.max(this._minSize, size);
            this._dontDragOutside();
        };
        CropArea.prototype.getMinSize = function() {
            return this._minSize;
        };
        CropArea.prototype.setMinSize = function(size) {
            this._minSize = size;
            this._size = Math.max(this._minSize, this._size);
            this._dontDragOutside();
        };
        CropArea.prototype._dontDragOutside = function() {
            var h = this._ctx.canvas.height,
                w = this._ctx.canvas.width;
            if (this._size > w) {
                this._size = w;
            }
            if (this._size > h) {
                this._size = h;
            }
            if (this._x < this._size / 2) {
                this._x = this._size / 2;
            }
            if (this._x > w - this._size / 2) {
                this._x = w - this._size / 2;
            }
            if (this._y < this._size / 2) {
                this._y = this._size / 2;
            }
            if (this._y > h - this._size / 2) {
                this._y = h - this._size / 2;
            }
        };
        CropArea.prototype._drawArea = function() {};
        CropArea.prototype.draw = function() {
            this._cropCanvas.drawCropArea(this._image, [
                this._x, this._y
            ], this._size, this._drawArea);
        };
        CropArea.prototype.processMouseMove = function() {};
        CropArea.prototype.processMouseDown = function() {};
        CropArea.prototype.processMouseUp = function() {};
        return CropArea;
    }]);
    crop.factory('cropCanvas', [function() {
        var shapeArrowNW = [
            [-0.5, -2],
            [-3, -4.5],
            [-0.5, -7],
            [-7, -7],
            [-7, -0.5],
            [-4.5, -3],
            [-2, -0.5]
        ];
        var shapeArrowNE = [
            [0.5, -2],
            [3, -4.5],
            [0.5, -7],
            [7, -7],
            [7, -0.5],
            [4.5, -3],
            [2, -0.5]
        ];
        var shapeArrowSW = [
            [-0.5, 2],
            [-3, 4.5],
            [-0.5, 7],
            [-7, 7],
            [-7, 0.5],
            [-4.5, 3],
            [-2, 0.5]
        ];
        var shapeArrowSE = [
            [0.5, 2],
            [3, 4.5],
            [0.5, 7],
            [7, 7],
            [7, 0.5],
            [4.5, 3],
            [2, 0.5]
        ];
        var shapeArrowN = [
            [-1.5, -2.5],
            [-1.5, -6],
            [-5, -6],
            [0, -11],
            [5, -6],
            [1.5, -6],
            [1.5, -2.5]
        ];
        var shapeArrowW = [
            [-2.5, -1.5],
            [-6, -1.5],
            [-6, -5],
            [-11, 0],
            [-6, 5],
            [-6, 1.5],
            [-2.5, 1.5]
        ];
        var shapeArrowS = [
            [-1.5, 2.5],
            [-1.5, 6],
            [-5, 6],
            [0, 11],
            [5, 6],
            [1.5, 6],
            [1.5, 2.5]
        ];
        var shapeArrowE = [
            [2.5, -1.5],
            [6, -1.5],
            [6, -5],
            [11, 0],
            [6, 5],
            [6, 1.5],
            [2.5, 1.5]
        ];
        var colors = {
            areaOutline: '#fff',
            resizeBoxStroke: '#fff',
            resizeBoxFill: '#444',
            resizeBoxArrowFill: '#fff',
            resizeCircleStroke: '#fff',
            resizeCircleFill: '#444',
            moveIconFill: '#fff'
        };
        return function(ctx) {
            var calcPoint = function(point, offset, scale) {
                return [scale * point[0] + offset[0],
                    scale * point[1] + offset[1]
                ];
            };
            var drawFilledPolygon = function(shape,
                fillStyle, centerCoords, scale) {
                ctx.save();
                ctx.fillStyle = fillStyle;
                ctx.beginPath();
                var pc, pc0 = calcPoint(shape[0],
                    centerCoords, scale);
                ctx.moveTo(pc0[0], pc0[1]);
                for (var p in shape) {
                    if (p > 0) {
                        pc = calcPoint(shape[p],
                            centerCoords, scale);
                        ctx.lineTo(pc[0], pc[1]);
                    }
                }
                ctx.lineTo(pc0[0], pc0[1]);
                ctx.fill();
                ctx.closePath();
                ctx.restore();
            };
            this.drawIconMove = function(centerCoords,
                scale) {
                drawFilledPolygon(shapeArrowN, colors.moveIconFill,
                    centerCoords, scale);
                drawFilledPolygon(shapeArrowW, colors.moveIconFill,
                    centerCoords, scale);
                drawFilledPolygon(shapeArrowS, colors.moveIconFill,
                    centerCoords, scale);
                drawFilledPolygon(shapeArrowE, colors.moveIconFill,
                    centerCoords, scale);
            };
            this.drawIconResizeCircle = function(
                centerCoords, circleRadius, scale) {
                var scaledCircleRadius = circleRadius *
                    scale;
                ctx.save();
                ctx.strokeStyle = colors.resizeCircleStroke;
                ctx.lineWidth = 2;
                ctx.fillStyle = colors.resizeCircleFill;
                ctx.beginPath();
                ctx.arc(centerCoords[0], centerCoords[1],
                    scaledCircleRadius, 0, 2 * Math
                    .PI);
                ctx.fill();
                ctx.stroke();
                ctx.closePath();
                ctx.restore();
            };
            this.drawIconResizeBoxBase = function(
                centerCoords, boxSize, scale) {
                var scaledBoxSize = boxSize * scale;
                ctx.save();
                ctx.strokeStyle = colors.resizeBoxStroke;
                ctx.lineWidth = 2;
                ctx.fillStyle = colors.resizeBoxFill;
                ctx.fillRect(centerCoords[0] -
                    scaledBoxSize / 2, centerCoords[
                        1] - scaledBoxSize / 2,
                    scaledBoxSize, scaledBoxSize);
                ctx.strokeRect(centerCoords[0] -
                    scaledBoxSize / 2, centerCoords[
                        1] - scaledBoxSize / 2,
                    scaledBoxSize, scaledBoxSize);
                ctx.restore();
            };
            this.drawIconResizeBoxNESW = function(
                centerCoords, boxSize, scale) {
                this.drawIconResizeBoxBase(centerCoords,
                    boxSize, scale);
                drawFilledPolygon(shapeArrowNE, colors.resizeBoxArrowFill,
                    centerCoords, scale);
                drawFilledPolygon(shapeArrowSW, colors.resizeBoxArrowFill,
                    centerCoords, scale);
            };
            this.drawIconResizeBoxNWSE = function(
                centerCoords, boxSize, scale) {
                this.drawIconResizeBoxBase(centerCoords,
                    boxSize, scale);
                drawFilledPolygon(shapeArrowNW, colors.resizeBoxArrowFill,
                    centerCoords, scale);
                drawFilledPolygon(shapeArrowSE, colors.resizeBoxArrowFill,
                    centerCoords, scale);
            };
            this.drawCropArea = function(image,
                centerCoords, size, fnDrawClipPath) {
                var xRatio = image.width / ctx.canvas.width,
                    yRatio = image.height / ctx.canvas.height,
                    xLeft = centerCoords[0] - size / 2,
                    yTop = centerCoords[1] - size / 2;
                ctx.save();
                ctx.strokeStyle = colors.areaOutline;
                ctx.lineWidth = 2;
                ctx.beginPath();
                fnDrawClipPath(ctx, centerCoords, size);
                ctx.stroke();
                ctx.clip();
                if (size > 0) {
                    ctx.drawImage(image, xLeft * xRatio,
                        yTop * yRatio, size *
                        xRatio, size * yRatio,
                        xLeft, yTop, size, size);
                }
                ctx.beginPath();
                fnDrawClipPath(ctx, centerCoords, size);
                ctx.stroke();
                ctx.clip();
                ctx.restore();
            };
        };
    }]);
    crop.service('cropEXIF', [function() {
        var debug = false;
        var ExifTags = this.Tags = {
            0x9000: "ExifVersion",
            0xA000: "FlashpixVersion",
            0xA001: "ColorSpace",
            0xA002: "PixelXDimension",
            0xA003: "PixelYDimension",
            0x9101: "ComponentsConfiguration",
            0x9102: "CompressedBitsPerPixel",
            0x927C: "MakerNote",
            0x9286: "UserComment",
            0xA004: "RelatedSoundFile",
            0x9003: "DateTimeOriginal",
            0x9004: "DateTimeDigitized",
            0x9290: "SubsecTime",
            0x9291: "SubsecTimeOriginal",
            0x9292: "SubsecTimeDigitized",
            0x829A: "ExposureTime",
            0x829D: "FNumber",
            0x8822: "ExposureProgram",
            0x8824: "SpectralSensitivity",
            0x8827: "ISOSpeedRatings",
            0x8828: "OECF",
            0x9201: "ShutterSpeedValue",
            0x9202: "ApertureValue",
            0x9203: "BrightnessValue",
            0x9204: "ExposureBias",
            0x9205: "MaxApertureValue",
            0x9206: "SubjectDistance",
            0x9207: "MeteringMode",
            0x9208: "LightSource",
            0x9209: "Flash",
            0x9214: "SubjectArea",
            0x920A: "FocalLength",
            0xA20B: "FlashEnergy",
            0xA20C: "SpatialFrequencyResponse",
            0xA20E: "FocalPlaneXResolution",
            0xA20F: "FocalPlaneYResolution",
            0xA210: "FocalPlaneResolutionUnit",
            0xA214: "SubjectLocation",
            0xA215: "ExposureIndex",
            0xA217: "SensingMethod",
            0xA300: "FileSource",
            0xA301: "SceneType",
            0xA302: "CFAPattern",
            0xA401: "CustomRendered",
            0xA402: "ExposureMode",
            0xA403: "WhiteBalance",
            0xA404: "DigitalZoomRation",
            0xA405: "FocalLengthIn35mmFilm",
            0xA406: "SceneCaptureType",
            0xA407: "GainControl",
            0xA408: "Contrast",
            0xA409: "Saturation",
            0xA40A: "Sharpness",
            0xA40B: "DeviceSettingDescription",
            0xA40C: "SubjectDistanceRange",
            0xA005: "InteroperabilityIFDPointer",
            0xA420: "ImageUniqueID"
        };
        var TiffTags = this.TiffTags = {
            0x0100: "ImageWidth",
            0x0101: "ImageHeight",
            0x8769: "ExifIFDPointer",
            0x8825: "GPSInfoIFDPointer",
            0xA005: "InteroperabilityIFDPointer",
            0x0102: "BitsPerSample",
            0x0103: "Compression",
            0x0106: "PhotometricInterpretation",
            0x0112: "Orientation",
            0x0115: "SamplesPerPixel",
            0x011C: "PlanarConfiguration",
            0x0212: "YCbCrSubSampling",
            0x0213: "YCbCrPositioning",
            0x011A: "XResolution",
            0x011B: "YResolution",
            0x0128: "ResolutionUnit",
            0x0111: "StripOffsets",
            0x0116: "RowsPerStrip",
            0x0117: "StripByteCounts",
            0x0201: "JPEGInterchangeFormat",
            0x0202: "JPEGInterchangeFormatLength",
            0x012D: "TransferFunction",
            0x013E: "WhitePoint",
            0x013F: "PrimaryChromaticities",
            0x0211: "YCbCrCoefficients",
            0x0214: "ReferenceBlackWhite",
            0x0132: "DateTime",
            0x010E: "ImageDescription",
            0x010F: "Make",
            0x0110: "Model",
            0x0131: "Software",
            0x013B: "Artist",
            0x8298: "Copyright"
        };
        var GPSTags = this.GPSTags = {
            0x0000: "GPSVersionID",
            0x0001: "GPSLatitudeRef",
            0x0002: "GPSLatitude",
            0x0003: "GPSLongitudeRef",
            0x0004: "GPSLongitude",
            0x0005: "GPSAltitudeRef",
            0x0006: "GPSAltitude",
            0x0007: "GPSTimeStamp",
            0x0008: "GPSSatellites",
            0x0009: "GPSStatus",
            0x000A: "GPSMeasureMode",
            0x000B: "GPSDOP",
            0x000C: "GPSSpeedRef",
            0x000D: "GPSSpeed",
            0x000E: "GPSTrackRef",
            0x000F: "GPSTrack",
            0x0010: "GPSImgDirectionRef",
            0x0011: "GPSImgDirection",
            0x0012: "GPSMapDatum",
            0x0013: "GPSDestLatitudeRef",
            0x0014: "GPSDestLatitude",
            0x0015: "GPSDestLongitudeRef",
            0x0016: "GPSDestLongitude",
            0x0017: "GPSDestBearingRef",
            0x0018: "GPSDestBearing",
            0x0019: "GPSDestDistanceRef",
            0x001A: "GPSDestDistance",
            0x001B: "GPSProcessingMethod",
            0x001C: "GPSAreaInformation",
            0x001D: "GPSDateStamp",
            0x001E: "GPSDifferential"
        };
        var StringValues = this.StringValues = {
            ExposureProgram: {
                0: "Not defined",
                1: "Manual",
                2: "Normal program",
                3: "Aperture priority",
                4: "Shutter priority",
                5: "Creative program",
                6: "Action program",
                7: "Portrait mode",
                8: "Landscape mode"
            },
            MeteringMode: {
                0: "Unknown",
                1: "Average",
                2: "CenterWeightedAverage",
                3: "Spot",
                4: "MultiSpot",
                5: "Pattern",
                6: "Partial",
                255: "Other"
            },
            LightSource: {
                0: "Unknown",
                1: "Daylight",
                2: "Fluorescent",
                3: "Tungsten (incandescent light)",
                4: "Flash",
                9: "Fine weather",
                10: "Cloudy weather",
                11: "Shade",
                12: "Daylight fluorescent (D 5700 - 7100K)",
                13: "Day white fluorescent (N 4600 - 5400K)",
                14: "Cool white fluorescent (W 3900 - 4500K)",
                15: "White fluorescent (WW 3200 - 3700K)",
                17: "Standard light A",
                18: "Standard light B",
                19: "Standard light C",
                20: "D55",
                21: "D65",
                22: "D75",
                23: "D50",
                24: "ISO studio tungsten",
                255: "Other"
            },
            Flash: {
                0x0000: "Flash did not fire",
                0x0001: "Flash fired",
                0x0005: "Strobe return light not detected",
                0x0007: "Strobe return light detected",
                0x0009: "Flash fired, compulsory flash mode",
                0x000D: "Flash fired, compulsory flash mode, return light not detected",
                0x000F: "Flash fired, compulsory flash mode, return light detected",
                0x0010: "Flash did not fire, compulsory flash mode",
                0x0018: "Flash did not fire, auto mode",
                0x0019: "Flash fired, auto mode",
                0x001D: "Flash fired, auto mode, return light not detected",
                0x001F: "Flash fired, auto mode, return light detected",
                0x0020: "No flash function",
                0x0041: "Flash fired, red-eye reduction mode",
                0x0045: "Flash fired, red-eye reduction mode, return light not detected",
                0x0047: "Flash fired, red-eye reduction mode, return light detected",
                0x0049: "Flash fired, compulsory flash mode, red-eye reduction mode",
                0x004D: "Flash fired, compulsory flash mode, red-eye reduction mode, return light not detected",
                0x004F: "Flash fired, compulsory flash mode, red-eye reduction mode, return light detected",
                0x0059: "Flash fired, auto mode, red-eye reduction mode",
                0x005D: "Flash fired, auto mode, return light not detected, red-eye reduction mode",
                0x005F: "Flash fired, auto mode, return light detected, red-eye reduction mode"
            },
            SensingMethod: {
                1: "Not defined",
                2: "One-chip color area sensor",
                3: "Two-chip color area sensor",
                4: "Three-chip color area sensor",
                5: "Color sequential area sensor",
                7: "Trilinear sensor",
                8: "Color sequential linear sensor"
            },
            SceneCaptureType: {
                0: "Standard",
                1: "Landscape",
                2: "Portrait",
                3: "Night scene"
            },
            SceneType: {
                1: "Directly photographed"
            },
            CustomRendered: {
                0: "Normal process",
                1: "Custom process"
            },
            WhiteBalance: {
                0: "Auto white balance",
                1: "Manual white balance"
            },
            GainControl: {
                0: "None",
                1: "Low gain up",
                2: "High gain up",
                3: "Low gain down",
                4: "High gain down"
            },
            Contrast: {
                0: "Normal",
                1: "Soft",
                2: "Hard"
            },
            Saturation: {
                0: "Normal",
                1: "Low saturation",
                2: "High saturation"
            },
            Sharpness: {
                0: "Normal",
                1: "Soft",
                2: "Hard"
            },
            SubjectDistanceRange: {
                0: "Unknown",
                1: "Macro",
                2: "Close view",
                3: "Distant view"
            },
            FileSource: {
                3: "DSC"
            },
            Components: {
                0: "",
                1: "Y",
                2: "Cb",
                3: "Cr",
                4: "R",
                5: "G",
                6: "B"
            }
        };

        function addEvent(element, event, handler) {
            if (element.addEventListener) {
                element.addEventListener(event, handler, false);
            } else if (element.attachEvent) {
                element.attachEvent("on" + event, handler);
            }
        }

        function imageHasData(img) {
            return !!(img.exifdata);
        }

        function base64ToArrayBuffer(base64, contentType) {
            contentType = contentType || base64.match(
                /^data\:([^\;]+)\;base64,/mi)[1] || '';
            base64 = base64.replace(
                /^data\:([^\;]+)\;base64,/gmi, '');
            var binary = atob(base64);
            var len = binary.length;
            var buffer = new ArrayBuffer(len);
            var view = new Uint8Array(buffer);
            for (var i = 0; i < len; i++) {
                view[i] = binary.charCodeAt(i);
            }
            return buffer;
        }

        function objectURLToBlob(url, callback) {
            var http = new XMLHttpRequest();
            http.open("GET", url, true);
            http.responseType = "blob";
            http.onload = function(e) {
                if (this.status == 200 || this.status === 0) {
                    callback(this.response);
                }
            };
            http.send();
        }

        function getImageData(img, callback) {
            function handleBinaryFile(binFile) {
                var data = findEXIFinJPEG(binFile);
                var iptcdata = findIPTCinJPEG(binFile);
                img.exifdata = data || {};
                img.iptcdata = iptcdata || {};
                if (callback) {
                    callback.call(img);
                }
            }
            if (img.src) {
                if (/^data\:/i.test(img.src)) {
                    var arrayBuffer = base64ToArrayBuffer(img.src);
                    handleBinaryFile(arrayBuffer);
                } else if (/^blob\:/i.test(img.src)) {
                    var fileReader = new FileReader();
                    fileReader.onload = function(e) {
                        handleBinaryFile(e.target.result);
                    };
                    objectURLToBlob(img.src, function(blob) {
                        fileReader.readAsArrayBuffer(
                            blob);
                    });
                } else {
                    var http = new XMLHttpRequest();
                    http.onload = function() {
                        if (this.status == 200 || this.status ===
                            0) {
                            handleBinaryFile(http.response);
                        } else {
                            throw "Could not load image";
                        }
                        http = null;
                    };
                    http.open("GET", img.src, true);
                    http.responseType = "arraybuffer";
                    http.send(null);
                }
            } else if (window.FileReader && (img instanceof window
                    .Blob || img instanceof window.File)) {
                var fileReader = new FileReader();
                fileReader.onload = function(e) {
                    if (debug) console.log(
                        "Got file of length " + e.target
                        .result.byteLength);
                    handleBinaryFile(e.target.result);
                };
                fileReader.readAsArrayBuffer(img);
            }
        }

        function findEXIFinJPEG(file) {
            var dataView = new DataView(file);
            if (debug) console.log("Got file of length " + file
                .byteLength);
            if ((dataView.getUint8(0) != 0xFF) || (dataView.getUint8(
                    1) != 0xD8)) {
                if (debug) console.log("Not a valid JPEG");
                return false;
            }
            var offset = 2,
                length = file.byteLength,
                marker;
            while (offset < length) {
                if (dataView.getUint8(offset) != 0xFF) {
                    if (debug) console.log(
                        "Not a valid marker at offset " +
                        offset + ", found: " + dataView.getUint8(
                            offset));
                    return false;
                }
                marker = dataView.getUint8(offset + 1);
                if (debug) console.log(marker);
                if (marker == 225) {
                    if (debug) console.log(
                        "Found 0xFFE1 marker");
                    return readEXIFData(dataView, offset + 4,
                        dataView.getUint16(offset + 2) - 2);
                } else {
                    offset += 2 + dataView.getUint16(offset + 2);
                }
            }
        }

        function findIPTCinJPEG(file) {
            var dataView = new DataView(file);
            if (debug) console.log("Got file of length " + file
                .byteLength);
            if ((dataView.getUint8(0) != 0xFF) || (dataView.getUint8(
                    1) != 0xD8)) {
                if (debug) console.log("Not a valid JPEG");
                return false;
            }
            var offset = 2,
                length = file.byteLength;
            var isFieldSegmentStart = function(dataView, offset) {
                return (dataView.getUint8(offset) === 0x38 &&
                    dataView.getUint8(offset + 1) ===
                    0x42 && dataView.getUint8(offset +
                        2) === 0x49 && dataView.getUint8(
                        offset + 3) === 0x4D &&
                    dataView.getUint8(offset + 4) ===
                    0x04 && dataView.getUint8(offset +
                        5) === 0x04);
            };
            while (offset < length) {
                if (isFieldSegmentStart(dataView, offset)) {
                    var nameHeaderLength = dataView.getUint8(
                        offset + 7);
                    if (nameHeaderLength % 2 !== 0)
                        nameHeaderLength += 1;
                    if (nameHeaderLength === 0) {
                        nameHeaderLength = 4;
                    }
                    var startOffset = offset + 8 +
                        nameHeaderLength;
                    var sectionLength = dataView.getUint16(
                        offset + 6 + nameHeaderLength);
                    return readIPTCData(file, startOffset,
                        sectionLength);
                    break;
                }
                offset++;
            }
        }
        var IptcFieldMap = {
            0x78: 'caption',
            0x6E: 'credit',
            0x19: 'keywords',
            0x37: 'dateCreated',
            0x50: 'byline',
            0x55: 'bylineTitle',
            0x7A: 'captionWriter',
            0x69: 'headline',
            0x74: 'copyright',
            0x0F: 'category'
        };

        function readIPTCData(file, startOffset, sectionLength) {
            var dataView = new DataView(file);
            var data = {};
            var fieldValue, fieldName, dataSize, segmentType,
                segmentSize;
            var segmentStartPos = startOffset;
            while (segmentStartPos < startOffset +
                sectionLength) {
                if (dataView.getUint8(segmentStartPos) === 0x1C &&
                    dataView.getUint8(segmentStartPos + 1) ===
                    0x02) {
                    segmentType = dataView.getUint8(
                        segmentStartPos + 2);
                    if (segmentType in IptcFieldMap) {
                        dataSize = dataView.getInt16(
                            segmentStartPos + 3);
                        segmentSize = dataSize + 5;
                        fieldName = IptcFieldMap[segmentType];
                        fieldValue = getStringFromDB(dataView,
                            segmentStartPos + 5, dataSize);
                        if (data.hasOwnProperty(fieldName)) {
                            if (data[fieldName] instanceof Array) {
                                data[fieldName].push(fieldValue);
                            } else {
                                data[fieldName] = [data[
                                        fieldName],
                                    fieldValue
                                ];
                            }
                        } else {
                            data[fieldName] = fieldValue;
                        }
                    }
                }
                segmentStartPos++;
            }
            return data;
        }

        function readTags(file, tiffStart, dirStart, strings,
            bigEnd) {
            var entries = file.getUint16(dirStart, !bigEnd),
                tags = {},
                entryOffset, tag, i;
            for (i = 0; i < entries; i++) {
                entryOffset = dirStart + i * 12 + 2;
                tag = strings[file.getUint16(entryOffset, !
                    bigEnd)];
                if (!tag && debug) console.log("Unknown tag: " +
                    file.getUint16(entryOffset, !bigEnd));
                tags[tag] = readTagValue(file, entryOffset,
                    tiffStart, dirStart, bigEnd);
            }
            return tags;
        }

        function readTagValue(file, entryOffset, tiffStart,
            dirStart, bigEnd) {
            var type = file.getUint16(entryOffset + 2, !bigEnd),
                numValues = file.getUint32(entryOffset + 4, !
                    bigEnd),
                valueOffset = file.getUint32(entryOffset + 8, !
                    bigEnd) + tiffStart,
                offset, vals, val, n, numerator, denominator;
            switch (type) {
                case 1:
                case 7:
                    if (numValues == 1) {
                        return file.getUint8(entryOffset + 8, !
                            bigEnd);
                    } else {
                        offset = numValues > 4 ? valueOffset :
                            (entryOffset + 8);
                        vals = [];
                        for (n = 0; n < numValues; n++) {
                            vals[n] = file.getUint8(offset + n);
                        }
                        return vals;
                    }
                case 2:
                    offset = numValues > 4 ? valueOffset : (
                        entryOffset + 8);
                    return getStringFromDB(file, offset,
                        numValues - 1);
                case 3:
                    if (numValues == 1) {
                        return file.getUint16(entryOffset + 8, !
                            bigEnd);
                    } else {
                        offset = numValues > 2 ? valueOffset :
                            (entryOffset + 8);
                        vals = [];
                        for (n = 0; n < numValues; n++) {
                            vals[n] = file.getUint16(offset + 2 *
                                n, !bigEnd);
                        }
                        return vals;
                    }
                case 4:
                    if (numValues == 1) {
                        return file.getUint32(entryOffset + 8, !
                            bigEnd);
                    } else {
                        vals = [];
                        for (n = 0; n < numValues; n++) {
                            vals[n] = file.getUint32(
                                valueOffset + 4 * n, !
                                bigEnd);
                        }
                        return vals;
                    }
                case 5:
                    if (numValues == 1) {
                        numerator = file.getUint32(valueOffset, !
                            bigEnd);
                        denominator = file.getUint32(
                            valueOffset + 4, !bigEnd);
                        val = new Number(numerator /
                            denominator);
                        val.numerator = numerator;
                        val.denominator = denominator;
                        return val;
                    } else {
                        vals = [];
                        for (n = 0; n < numValues; n++) {
                            numerator = file.getUint32(
                                valueOffset + 8 * n, !
                                bigEnd);
                            denominator = file.getUint32(
                                valueOffset + 4 + 8 * n, !
                                bigEnd);
                            vals[n] = new Number(numerator /
                                denominator);
                            vals[n].numerator = numerator;
                            vals[n].denominator = denominator;
                        }
                        return vals;
                    }
                case 9:
                    if (numValues == 1) {
                        return file.getInt32(entryOffset + 8, !
                            bigEnd);
                    } else {
                        vals = [];
                        for (n = 0; n < numValues; n++) {
                            vals[n] = file.getInt32(valueOffset +
                                4 * n, !bigEnd);
                        }
                        return vals;
                    }
                case 10:
                    if (numValues == 1) {
                        return file.getInt32(valueOffset, !
                            bigEnd) / file.getInt32(
                            valueOffset + 4, !bigEnd);
                    } else {
                        vals = [];
                        for (n = 0; n < numValues; n++) {
                            vals[n] = file.getInt32(valueOffset +
                                8 * n, !bigEnd) / file.getInt32(
                                valueOffset + 4 + 8 * n, !
                                bigEnd);
                        }
                        return vals;
                    }
            }
        }

        function getStringFromDB(buffer, start, length) {
            var outstr = "";
            for (var n = start; n < start + length; n++) {
                outstr += String.fromCharCode(buffer.getUint8(n));
            }
            return outstr;
        }

        function readEXIFData(file, start) {
            if (getStringFromDB(file, start, 4) != "Exif") {
                if (debug) console.log("Not valid EXIF data! " +
                    getStringFromDB(file, start, 4));
                return false;
            }
            var bigEnd, tags, tag, exifData, gpsData,
                tiffOffset = start + 6;
            if (file.getUint16(tiffOffset) == 0x4949) {
                bigEnd = false;
            } else if (file.getUint16(tiffOffset) == 0x4D4D) {
                bigEnd = true;
            } else {
                if (debug) console.log(
                    "Not valid TIFF data! (no 0x4949 or 0x4D4D)"
                );
                return false;
            }
            if (file.getUint16(tiffOffset + 2, !bigEnd) !=
                0x002A) {
                if (debug) console.log(
                    "Not valid TIFF data! (no 0x002A)");
                return false;
            }
            var firstIFDOffset = file.getUint32(tiffOffset + 4, !
                bigEnd);
            if (firstIFDOffset < 0x00000008) {
                if (debug) console.log(
                    "Not valid TIFF data! (First offset less than 8)",
                    file.getUint32(tiffOffset + 4, !bigEnd)
                );
                return false;
            }
            tags = readTags(file, tiffOffset, tiffOffset +
                firstIFDOffset, TiffTags, bigEnd);
            if (tags.ExifIFDPointer) {
                exifData = readTags(file, tiffOffset,
                    tiffOffset + tags.ExifIFDPointer,
                    ExifTags, bigEnd);
                for (tag in exifData) {
                    switch (tag) {
                        case "LightSource":
                        case "Flash":
                        case "MeteringMode":
                        case "ExposureProgram":
                        case "SensingMethod":
                        case "SceneCaptureType":
                        case "SceneType":
                        case "CustomRendered":
                        case "WhiteBalance":
                        case "GainControl":
                        case "Contrast":
                        case "Saturation":
                        case "Sharpness":
                        case "SubjectDistanceRange":
                        case "FileSource":
                            exifData[tag] = StringValues[tag][
                                exifData[tag]
                            ];
                            break;
                        case "ExifVersion":
                        case "FlashpixVersion":
                            exifData[tag] = String.fromCharCode(
                                exifData[tag][0], exifData[
                                    tag][1], exifData[tag][
                                    2
                                ], exifData[tag][3]);
                            break;
                        case "ComponentsConfiguration":
                            exifData[tag] = StringValues.Components[
                                    exifData[tag][0]] +
                                StringValues.Components[
                                    exifData[tag][1]] +
                                StringValues.Components[
                                    exifData[tag][2]] +
                                StringValues.Components[
                                    exifData[tag][3]];
                            break;
                    }
                    tags[tag] = exifData[tag];
                }
            }
            if (tags.GPSInfoIFDPointer) {
                gpsData = readTags(file, tiffOffset, tiffOffset +
                    tags.GPSInfoIFDPointer, GPSTags, bigEnd
                );
                for (tag in gpsData) {
                    switch (tag) {
                        case "GPSVersionID":
                            gpsData[tag] = gpsData[tag][0] +
                                "." + gpsData[tag][1] + "." +
                                gpsData[tag][2] + "." + gpsData[
                                    tag][3];
                            break;
                    }
                    tags[tag] = gpsData[tag];
                }
            }
            return tags;
        }
        this.getData = function(img, callback) {
            if ((img instanceof Image || img instanceof HTMLImageElement) &&
                !img.complete) return false;
            if (!imageHasData(img)) {
                getImageData(img, callback);
            } else {
                if (callback) {
                    callback.call(img);
                }
            }
            return true;
        }
        this.getTag = function(img, tag) {
            if (!imageHasData(img)) return;
            return img.exifdata[tag];
        }
        this.getAllTags = function(img) {
            if (!imageHasData(img)) return {};
            var a, data = img.exifdata,
                tags = {};
            for (a in data) {
                if (data.hasOwnProperty(a)) {
                    tags[a] = data[a];
                }
            }
            return tags;
        }
        this.pretty = function(img) {
            if (!imageHasData(img)) return "";
            var a, data = img.exifdata,
                strPretty = "";
            for (a in data) {
                if (data.hasOwnProperty(a)) {
                    if (typeof data[a] == "object") {
                        if (data[a] instanceof Number) {
                            strPretty += a + " : " + data[a] +
                                " [" + data[a].numerator +
                                "/" + data[a].denominator +
                                "]\r\n";
                        } else {
                            strPretty += a + " : [" + data[
                                    a].length +
                                " values]\r\n";
                        }
                    } else {
                        strPretty += a + " : " + data[a] +
                            "\r\n";
                    }
                }
            }
            return strPretty;
        }
        this.readFromBinaryFile = function(file) {
            return findEXIFinJPEG(file);
        }
    }]);
    crop.factory('cropHost', ['$document', 'cropAreaCircle',
        'cropAreaSquare', 'cropEXIF',
        function($document, CropAreaCircle, CropAreaSquare,
            cropEXIF) {
            var getElementOffset = function(elem) {
                var box = elem.getBoundingClientRect();
                var body = document.body;
                var docElem = document.documentElement;
                var scrollTop = window.pageYOffset || docElem.scrollTop ||
                    body.scrollTop;
                var scrollLeft = window.pageXOffset || docElem.scrollLeft ||
                    body.scrollLeft;
                var clientTop = docElem.clientTop || body.clientTop ||
                    0;
                var clientLeft = docElem.clientLeft || body.clientLeft ||
                    0;
                var top = box.top + scrollTop - clientTop;
                var left = box.left + scrollLeft - clientLeft;
                return {
                    top: Math.round(top),
                    left: Math.round(left)
                };
            };
            return function(elCanvas, opts, events) {
                var ctx = null,
                    image = null,
                    theArea = null;
                var minCanvasDims = [100, 100],
                    maxCanvasDims = [300, 300];
                var resImgSize = 300;
                var resImgFormat = 'image/png';
                var resImgQuality = null;

                function drawScene() {
                    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas
                        .height);
                    if (image !== null) {
                        ctx.drawImage(image, 0, 0, ctx.canvas.width,
                            ctx.canvas.height);
                        ctx.save();
                        ctx.fillStyle = 'rgba(0, 0, 0, 0.65)';
                        ctx.fillRect(0, 0, ctx.canvas.width,
                            ctx.canvas.height);
                        ctx.restore();
                        theArea.draw();
                    }
                }
                var resetCropHost = function() {
                    if (image !== null) {
                        theArea.setImage(image);
                        var imageDims = [image.width, image
                                .height
                            ],
                            imageRatio = image.width /
                            image.height,
                            canvasDims = imageDims;
                        if (canvasDims[0] > maxCanvasDims[0]) {
                            canvasDims[0] = maxCanvasDims[0];
                            canvasDims[1] = canvasDims[0] /
                                imageRatio;
                        } else if (canvasDims[0] <
                            minCanvasDims[0]) {
                            canvasDims[0] = minCanvasDims[0];
                            canvasDims[1] = canvasDims[0] /
                                imageRatio;
                        }
                        if (canvasDims[1] > maxCanvasDims[1]) {
                            canvasDims[1] = maxCanvasDims[1];
                            canvasDims[0] = canvasDims[1] *
                                imageRatio;
                        } else if (canvasDims[1] <
                            minCanvasDims[1]) {
                            canvasDims[1] = minCanvasDims[1];
                            canvasDims[0] = canvasDims[1] *
                                imageRatio;
                        }
                        elCanvas.prop('width', canvasDims[0])
                            .prop('height', canvasDims[1]).css({
                                'margin-left': -
                                    canvasDims[0] / 2 +
                                    'px',
                                'margin-top': -
                                    canvasDims[1] / 2 +
                                    'px'
                            });
                        theArea.setX(ctx.canvas.width / 2);
                        theArea.setY(ctx.canvas.height / 2);
                        theArea.setSize(Math.min(300, ctx.canvas
                            .width / 2, ctx.canvas.height /
                            2));
                    } else {
                        elCanvas.prop('width', 0).prop(
                            'height', 0).css({
                            'margin-top': 0
                        });
                    }
                    drawScene();
                };
                var getChangedTouches = function(event) {
                    if (angular.isDefined(event.changedTouches)) {
                        return event.changedTouches;
                    } else {
                        return event.originalEvent.changedTouches;
                    }
                };
                var onMouseMove = function(e) {
                    if (image !== null) {
                        var offset = getElementOffset(ctx.canvas),
                            pageX, pageY;
                        if (e.type === 'touchmove') {
                            pageX = getChangedTouches(e)[0]
                                .pageX;
                            pageY = getChangedTouches(e)[0]
                                .pageY;
                        } else {
                            pageX = e.pageX;
                            pageY = e.pageY;
                        }
                        theArea.processMouseMove(pageX -
                            offset.left, pageY - offset
                            .top);
                        drawScene();
                    }
                };
                var onMouseDown = function(e) {
                    e.preventDefault();
                    e.stopPropagation();
                    if (image !== null) {
                        var offset = getElementOffset(ctx.canvas),
                            pageX, pageY;
                        if (e.type === 'touchstart') {
                            pageX = getChangedTouches(e)[0]
                                .pageX;
                            pageY = getChangedTouches(e)[0]
                                .pageY;
                        } else {
                            pageX = e.pageX;
                            pageY = e.pageY;
                        }
                        theArea.processMouseDown(pageX -
                            offset.left, pageY - offset
                            .top);
                        drawScene();
                    }
                };
                var onMouseUp = function(e) {
                    if (image !== null) {
                        var offset = getElementOffset(ctx.canvas),
                            pageX, pageY;
                        if (e.type === 'touchend') {
                            pageX = getChangedTouches(e)[0]
                                .pageX;
                            pageY = getChangedTouches(e)[0]
                                .pageY;
                        } else {
                            pageX = e.pageX;
                            pageY = e.pageY;
                        }
                        theArea.processMouseUp(pageX -
                            offset.left, pageY - offset
                            .top);
                        drawScene();
                    }
                };
                this.getResultImageDataURI = function() {
                    var temp_ctx, temp_canvas;
                    temp_canvas = angular.element(
                        '<canvas></canvas>')[0];
                    temp_ctx = temp_canvas.getContext('2d');
                    temp_canvas.width = resImgSize;
                    temp_canvas.height = resImgSize;
                    if (image !== null) {
                        temp_ctx.drawImage(image, (theArea.getX() -
                                theArea.getSize() / 2) *
                            (image.width / ctx.canvas.width), (
                                theArea.getY() -
                                theArea.getSize() / 2) *
                            (image.height / ctx.canvas.height),
                            theArea.getSize() * (image.width /
                                ctx.canvas.width),
                            theArea.getSize() * (image.height /
                                ctx.canvas.height), 0,
                            0, resImgSize, resImgSize);
                    }
                    if (resImgQuality !== null) {
                        return temp_canvas.toDataURL(
                            resImgFormat, resImgQuality
                        );
                    }
                    return temp_canvas.toDataURL(
                        resImgFormat);
                };
                this.setNewImageSource = function(imageSource) {
                    image = null;
                    resetCropHost();
                    events.trigger('image-updated');
                    if (!!imageSource) {
                        var newImage = new Image();
                        if (imageSource.substring(0, 4).toLowerCase() ===
                            'http') {
                            newImage.crossOrigin =
                                'anonymous';
                        }
                        newImage.onload = function() {
                            events.trigger('load-done');
                            cropEXIF.getData(newImage,
                                function() {
                                    var
                                        orientationTemp =
                                        cropEXIF.getTag(
                                            newImage,
                                            'Orientation'
                                        );
                                    var
                                        newDimensionsW =
                                        newImage.width,
                                        newDimensionsH =
                                        newImage.height;
                                    var
                                        aspectRaioTemp =
                                        newDimensionsW /
                                        newDimensionsH;
                                    var temp_ctx,
                                        temp_canvas;
                                    temp_canvas =
                                        angular.element(
                                            '<canvas></canvas>'
                                        )[0];
                                    temp_ctx =
                                        temp_canvas
                                        .getContext(
                                            '2d');
                                    newDimensionsH =
                                        maxCanvasDims[
                                            0];
                                    newDimensionsW =
                                        maxCanvasDims[
                                            1] *
                                        aspectRaioTemp;
                                    var deg = 0;
                                    temp_canvas.width =
                                        newDimensionsW;
                                    temp_canvas.height =
                                        newDimensionsH;
                                    switch (
                                        orientationTemp
                                    ) {
                                        case 3:
                                            deg =
                                                180;
                                            break;
                                        case 6:
                                            temp_canvas
                                                .width =
                                                newDimensionsH;
                                            temp_canvas
                                                .height =
                                                newDimensionsW;
                                            deg =
                                                90;
                                            break;
                                        case 8:
                                            temp_canvas
                                                .width =
                                                newDimensionsH;
                                            temp_canvas
                                                .height =
                                                newDimensionsW;
                                            deg =
                                                270;
                                            break;
                                    }
                                    if (deg != 0) {
                                        temp_ctx.translate(
                                            temp_canvas
                                            .width /
                                            2,
                                            temp_canvas
                                            .height /
                                            2);
                                        temp_ctx.rotate(
                                            deg *
                                            Math
                                            .PI /
                                            180
                                        );
                                        temp_ctx.drawImage(
                                            newImage, -
                                            newDimensionsW /
                                            2, -
                                            newDimensionsH /
                                            2,
                                            newDimensionsW,
                                            newDimensionsH
                                        );
                                    } else {
                                        temp_ctx.drawImage(
                                            newImage,
                                            0,
                                            0,
                                            newDimensionsW,
                                            newDimensionsH
                                        );
                                    }
                                    image = new Image();
                                    image.src =
                                        temp_canvas
                                        .toDataURL(
                                            "image/png"
                                        );
                                    resetCropHost();
                                    events.trigger(
                                        'image-updated'
                                    );
                                    setTimeout(
                                        function() {
                                            resetCropHost
                                                ();
                                        }, 1000
                                    );
                                });
                        };
                        newImage.onerror = function() {
                            events.trigger('load-error');
                        };
                        events.trigger('load-start');
                        newImage.src = imageSource;
                    }
                };
                this.setMaxDimensions = function(width, height) {
                    maxCanvasDims = [width, height];
                    if (image !== null) {
                        var curWidth = ctx.canvas.width,
                            curHeight = ctx.canvas.height;
                        var imageDims = [image.width, image
                                .height
                            ],
                            imageRatio = image.width /
                            image.height,
                            canvasDims = imageDims;
                        if (canvasDims[0] > maxCanvasDims[0]) {
                            canvasDims[0] = maxCanvasDims[0];
                            canvasDims[1] = canvasDims[0] /
                                imageRatio;
                        } else if (canvasDims[0] <
                            minCanvasDims[0]) {
                            canvasDims[0] = minCanvasDims[0];
                            canvasDims[1] = canvasDims[0] /
                                imageRatio;
                        }
                        if (canvasDims[1] > maxCanvasDims[1]) {
                            canvasDims[1] = maxCanvasDims[1];
                            canvasDims[0] = canvasDims[1] *
                                imageRatio;
                        } else if (canvasDims[1] <
                            minCanvasDims[1]) {
                            canvasDims[1] = minCanvasDims[1];
                            canvasDims[0] = canvasDims[1] *
                                imageRatio;
                        }
                        elCanvas.prop('width', canvasDims[0])
                            .prop('height', canvasDims[1]).css({
                                'margin-left': -
                                    canvasDims[0] / 2 +
                                    'px',
                                'margin-top': -
                                    canvasDims[1] / 2 +
                                    'px'
                            });
                        var ratioNewCurWidth = ctx.canvas.width /
                            curWidth,
                            ratioNewCurHeight = ctx.canvas.height /
                            curHeight,
                            ratioMin = Math.min(
                                ratioNewCurWidth,
                                ratioNewCurHeight);
                        theArea.setX(theArea.getX() *
                            ratioNewCurWidth);
                        theArea.setY(theArea.getY() *
                            ratioNewCurHeight);
                        theArea.setSize(theArea.getSize() *
                            ratioMin);
                    } else {
                        elCanvas.prop('width', 0).prop(
                            'height', 0).css({
                            'margin-top': 0
                        });
                    }
                    drawScene();
                };
                this.setAreaMinSize = function(size) {
                    size = parseInt(size, 10);
                    if (!isNaN(size)) {
                        theArea.setMinSize(size);
                        drawScene();
                    }
                };
                this.setResultImageSize = function(size) {
                    size = parseInt(size, 10);
                    if (!isNaN(size)) {
                        resImgSize = size;
                    }
                };
                this.setResultImageFormat = function(format) {
                    resImgFormat = format;
                };
                this.setResultImageQuality = function(quality) {
                    quality = parseFloat(quality);
                    if (!isNaN(quality) && quality >= 0 &&
                        quality <= 1) {
                        resImgQuality = quality;
                    }
                };
                this.setAreaType = function(type) {
                    var curSize = theArea.getSize(),
                        curMinSize = theArea.getMinSize(),
                        curX = theArea.getX(),
                        curY = theArea.getY();
                    var AreaClass = CropAreaCircle;
                    if (type === 'square') {
                        AreaClass = CropAreaSquare;
                    }
                    theArea = new AreaClass(ctx, events);
                    theArea.setMinSize(curMinSize);
                    theArea.setSize(curSize);
                    theArea.setX(curX);
                    theArea.setY(curY);
                    if (image !== null) {
                        theArea.setImage(image);
                    }
                    drawScene();
                };
                ctx = elCanvas[0].getContext('2d');
                theArea = new CropAreaCircle(ctx, events);
                $document.on('mousemove', onMouseMove);
                elCanvas.on('mousedown', onMouseDown);
                $document.on('mouseup', onMouseUp);
                $document.on('touchmove', onMouseMove);
                elCanvas.on('touchstart', onMouseDown);
                $document.on('touchend', onMouseUp);
                this.destroy = function() {
                    $document.off('mousemove', onMouseMove);
                    elCanvas.off('mousedown', onMouseDown);
                    $document.off('mouseup', onMouseMove);
                    $document.off('touchmove', onMouseMove);
                    elCanvas.off('touchstart', onMouseDown);
                    $document.off('touchend', onMouseMove);
                    elCanvas.remove();
                };
            };
        }
    ]);
    crop.factory('cropPubSub', [function() {
        return function() {
            var events = {};
            this.on = function(names, handler) {
                names.split(' ').forEach(function(name) {
                    if (!events[name]) {
                        events[name] = [];
                    }
                    events[name].push(handler);
                });
                return this;
            };
            this.trigger = function(name, args) {
                angular.forEach(events[name], function(
                    handler) {
                    handler.call(null, args);
                });
                return this;
            };
        };
    }]);
    crop.directive('imgCrop', ['$timeout', 'cropHost', 'cropPubSub',
        function($timeout, CropHost, CropPubSub) {
            return {
                restrict: 'E',
                scope: {
                    image: '=',
                    resultImage: '=',
                    changeOnFly: '=',
                    areaType: '@',
                    areaMinSize: '=',
                    resultImageSize: '=',
                    resultImageFormat: '@',
                    resultImageQuality: '=',
                    onChange: '&',
                    onLoadBegin: '&',
                    onLoadDone: '&',
                    onLoadError: '&'
                },
                template: '<canvas></canvas>',
                controller: ['$scope', function($scope) {
                    $scope.events = new CropPubSub();
                }],
                link: function(scope, element) {
                    var events = scope.events;
                    var cropHost = new CropHost(element.find(
                        'canvas'), {}, events);
                    var storedResultImage;
                    var updateResultImage = function(scope) {
                        var resultImage = cropHost.getResultImageDataURI();
                        if (storedResultImage !==
                            resultImage) {
                            storedResultImage = resultImage;
                            if (angular.isDefined(scope.resultImage)) {
                                scope.resultImage =
                                    resultImage;
                            }
                            scope.onChange({
                                $dataURI: scope.resultImage
                            });
                        }
                    };
                    var fnSafeApply = function(fn) {
                        return function() {
                            $timeout(function() {
                                scope.$apply(
                                    function(
                                        scope
                                    ) {
                                        fn(
                                            scope
                                        );
                                    });
                            });
                        };
                    };
                    events.on('load-start', fnSafeApply(
                        function(scope) {
                            scope.onLoadBegin({});
                        })).on('load-done', fnSafeApply(
                        function(scope) {
                            scope.onLoadDone({});
                        })).on('load-error', fnSafeApply(
                        function(scope) {
                            scope.onLoadError({});
                        })).on('area-move area-resize',
                        fnSafeApply(function(scope) {
                            if (!!scope.changeOnFly) {
                                updateResultImage(scope);
                            }
                        })).on(
                        'area-move-end area-resize-end image-updated',
                        fnSafeApply(function(scope) {
                            updateResultImage(scope);
                        }));
                    scope.$watch('image', function() {
                        cropHost.setNewImageSource(
                            scope.image);
                    });
                    scope.$watch('areaType', function() {
                        cropHost.setAreaType(scope.areaType);
                        updateResultImage(scope);
                    });
                    scope.$watch('areaMinSize', function() {
                        cropHost.setAreaMinSize(scope.areaMinSize);
                        updateResultImage(scope);
                    });
                    scope.$watch('resultImageSize', function() {
                        cropHost.setResultImageSize(
                            scope.resultImageSize);
                        updateResultImage(scope);
                    });
                    scope.$watch('resultImageFormat', function() {
                        cropHost.setResultImageFormat(
                            scope.resultImageFormat
                        );
                        updateResultImage(scope);
                    });
                    scope.$watch('resultImageQuality', function() {
                        cropHost.setResultImageQuality(
                            scope.resultImageQuality
                        );
                        updateResultImage(scope);
                    });
                    scope.$watch(function() {
                        return [element[0].clientWidth,
                            element[0].clientHeight
                        ];
                    }, function(value) {
                        cropHost.setMaxDimensions(value[
                            0], value[1]);
                        updateResultImage(scope);
                    }, true);
                    scope.$on('$destroy', function() {
                        cropHost.destroy();
                    });
                }
            };
        }
    ]);
}());;;;
angular.module('ccc-app', ['ui.bootstrap', 'monospaced.elastic', 'ngSanitize',
    'ui.router', 'ngImgCrop'
]);;;;
(function(f) {
    if (typeof exports === "object" && typeof module !== "undefined") {
        module.exports = f()
    } else if (typeof define === "function" && define.amd) {
        define([], f)
    } else {
        var g;
        if (typeof window !== "undefined") {
            g = window
        } else if (typeof global !== "undefined") {
            g = global
        } else if (typeof self !== "undefined") {
            g = self
        } else {
            g = this
        }
        g.io = f()
    }
})(function() {
    var define, module, exports;
    return function e(t, n, r) {
        function s(o, u) {
            if (!n[o]) {
                if (!t[o]) {
                    var a = typeof require == "function" && require;
                    if (!u && a) return a(o, !0);
                    if (i) return i(o, !0);
                    var f = new Error("Cannot find module '" + o + "'");
                    throw f.code = "MODULE_NOT_FOUND", f
                }
                var l = n[o] = {
                    exports: {}
                };
                t[o][0].call(l.exports, function(e) {
                    var n = t[o][1][e];
                    return s(n ? n : e)
                }, l, l.exports, e, t, n, r)
            }
            return n[o].exports
        }
        var i = typeof require == "function" && require;
        for (var o = 0; o < r.length; o++) s(r[o]);
        return s
    }({
        1: [function(_dereq_, module, exports) {
            module.exports = _dereq_("./lib/")
        }, {
            "./lib/": 2
        }],
        2: [function(_dereq_, module, exports) {
            module.exports = _dereq_("./socket");
            module.exports.parser = _dereq_(
                "engine.io-parser")
        }, {
            "./socket": 3,
            "engine.io-parser": 19
        }],
        3: [function(_dereq_, module, exports) {
            (function(global) {
                var transports = _dereq_("./transports");
                var Emitter = _dereq_(
                    "component-emitter");
                var debug = _dereq_("debug")(
                    "engine.io-client:socket");
                var index = _dereq_("indexof");
                var parser = _dereq_("engine.io-parser");
                var parseuri = _dereq_("parseuri");
                var parsejson = _dereq_("parsejson");
                var parseqs = _dereq_("parseqs");
                module.exports = Socket;

                function noop() {}

                function Socket(uri, opts) {
                    if (!(this instanceof Socket))
                        return new Socket(uri, opts);
                    opts = opts || {};
                    if (uri && "object" == typeof uri) {
                        opts = uri;
                        uri = null
                    }
                    if (uri) {
                        uri = parseuri(uri);
                        opts.hostname = uri.host;
                        opts.secure = uri.protocol ==
                            "https" || uri.protocol ==
                            "wss";
                        opts.port = uri.port;
                        if (uri.query) opts.query = uri
                            .query
                    } else if (opts.host) {
                        opts.hostname = parseuri(opts.host)
                            .host
                    }
                    this.secure = null != opts.secure ?
                        opts.secure : global.location &&
                        "https:" == location.protocol;
                    if (opts.hostname && !opts.port) {
                        opts.port = this.secure ? "443" :
                            "80"
                    }
                    this.agent = opts.agent || false;
                    this.hostname = opts.hostname || (
                        global.location ? location.hostname :
                        "localhost");
                    this.port = opts.port || (global.location &&
                        location.port ? location.port :
                        this.secure ? 443 : 80);
                    this.query = opts.query || {};
                    if ("string" == typeof this.query)
                        this.query = parseqs.decode(
                            this.query);
                    this.upgrade = false !== opts.upgrade;
                    this.path = (opts.path ||
                        "/engine.io").replace(/\/$/,
                        "") + "/";
                    this.forceJSONP = !!opts.forceJSONP;
                    this.jsonp = false !== opts.jsonp;
                    this.forceBase64 = !!opts.forceBase64;
                    this.enablesXDR = !!opts.enablesXDR;
                    this.timestampParam = opts.timestampParam ||
                        "t";
                    this.timestampRequests = opts.timestampRequests;
                    this.transports = opts.transports || [
                        "polling", "websocket"
                    ];
                    this.readyState = "";
                    this.writeBuffer = [];
                    this.policyPort = opts.policyPort ||
                        843;
                    this.rememberUpgrade = opts.rememberUpgrade ||
                        false;
                    this.binaryType = null;
                    this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;
                    this.perMessageDeflate = false !==
                        opts.perMessageDeflate ? opts.perMessageDeflate || {} :
                        false;
                    if (true === this.perMessageDeflate)
                        this.perMessageDeflate = {};
                    if (this.perMessageDeflate && null ==
                        this.perMessageDeflate.threshold
                    ) {
                        this.perMessageDeflate.threshold =
                            1024
                    }
                    this.pfx = opts.pfx || null;
                    this.key = opts.key || null;
                    this.passphrase = opts.passphrase ||
                        null;
                    this.cert = opts.cert || null;
                    this.ca = opts.ca || null;
                    this.ciphers = opts.ciphers || null;
                    this.rejectUnauthorized = opts.rejectUnauthorized ===
                        undefined ? null : opts.rejectUnauthorized;
                    var freeGlobal = typeof global ==
                        "object" && global;
                    if (freeGlobal.global ===
                        freeGlobal) {
                        if (opts.extraHeaders && Object
                            .keys(opts.extraHeaders).length >
                            0) {
                            this.extraHeaders = opts.extraHeaders
                        }
                    }
                    this.open()
                }
                Socket.priorWebsocketSuccess = false;
                Emitter(Socket.prototype);
                Socket.protocol = parser.protocol;
                Socket.Socket = Socket;
                Socket.Transport = _dereq_(
                    "./transport");
                Socket.transports = _dereq_(
                    "./transports");
                Socket.parser = _dereq_(
                    "engine.io-parser");
                Socket.prototype.createTransport =
                    function(name) {
                        debug('creating transport "%s"',
                            name);
                        var query = clone(this.query);
                        query.EIO = parser.protocol;
                        query.transport = name;
                        if (this.id) query.sid = this.id;
                        var transport = new transports[
                            name]({
                            agent: this.agent,
                            hostname: this.hostname,
                            port: this.port,
                            secure: this.secure,
                            path: this.path,
                            query: query,
                            forceJSONP: this.forceJSONP,
                            jsonp: this.jsonp,
                            forceBase64: this.forceBase64,
                            enablesXDR: this.enablesXDR,
                            timestampRequests: this
                                .timestampRequests,
                            timestampParam: this
                                .timestampParam,
                            policyPort: this.policyPort,
                            socket: this,
                            pfx: this.pfx,
                            key: this.key,
                            passphrase: this.passphrase,
                            cert: this.cert,
                            ca: this.ca,
                            ciphers: this.ciphers,
                            rejectUnauthorized: this
                                .rejectUnauthorized,
                            perMessageDeflate: this
                                .perMessageDeflate,
                            extraHeaders: this.extraHeaders
                        });
                        return transport
                    };

                function clone(obj) {
                    var o = {};
                    for (var i in obj) {
                        if (obj.hasOwnProperty(i)) {
                            o[i] = obj[i]
                        }
                    }
                    return o
                }
                Socket.prototype.open = function() {
                    var transport;
                    if (this.rememberUpgrade &&
                        Socket.priorWebsocketSuccess &&
                        this.transports.indexOf(
                            "websocket") != -1) {
                        transport = "websocket"
                    } else if (0 === this.transports
                        .length) {
                        var self = this;
                        setTimeout(function() {
                            self.emit(
                                "error",
                                "No transports available"
                            )
                        }, 0);
                        return
                    } else {
                        transport = this.transports[
                            0]
                    }
                    this.readyState = "opening";
                    try {
                        transport = this.createTransport(
                            transport)
                    } catch (e) {
                        this.transports.shift();
                        this.open();
                        return
                    }
                    transport.open();
                    this.setTransport(transport)
                };
                Socket.prototype.setTransport =
                    function(transport) {
                        debug("setting transport %s",
                            transport.name);
                        var self = this;
                        if (this.transport) {
                            debug(
                                "clearing existing transport %s",
                                this.transport.name
                            );
                            this.transport.removeAllListeners()
                        }
                        this.transport = transport;
                        transport.on("drain", function() {
                            self.onDrain()
                        }).on("packet", function(
                            packet) {
                            self.onPacket(
                                packet)
                        }).on("error", function(e) {
                            self.onError(e)
                        }).on("close", function() {
                            self.onClose(
                                "transport close"
                            )
                        })
                    };
                Socket.prototype.probe = function(name) {
                    debug('probing transport "%s"',
                        name);
                    var transport = this.createTransport(
                            name, {
                                probe: 1
                            }),
                        failed = false,
                        self = this;
                    Socket.priorWebsocketSuccess =
                        false;

                    function onTransportOpen() {
                        if (self.onlyBinaryUpgrades) {
                            var upgradeLosesBinary = !
                                this.supportsBinary &&
                                self.transport.supportsBinary;
                            failed = failed ||
                                upgradeLosesBinary
                        }
                        if (failed) return;
                        debug(
                            'probe transport "%s" opened',
                            name);
                        transport.send([{
                            type: "ping",
                            data: "probe"
                        }]);
                        transport.once("packet",
                            function(msg) {
                                if (failed)
                                    return;
                                if ("pong" ==
                                    msg.type &&
                                    "probe" ==
                                    msg.data) {
                                    debug(
                                        'probe transport "%s" pong',
                                        name
                                    );
                                    self.upgrading =
                                        true;
                                    self.emit(
                                        "upgrading",
                                        transport
                                    );
                                    if (!
                                        transport
                                    ) return;
                                    Socket.priorWebsocketSuccess =
                                        "websocket" ==
                                        transport
                                        .name;
                                    debug(
                                        'pausing current transport "%s"',
                                        self
                                        .transport
                                        .name
                                    );
                                    self.transport
                                        .pause(
                                            function() {
                                                if (
                                                    failed
                                                )
                                                    return
                                                ;
                                                if (
                                                    "closed" ==
                                                    self
                                                    .readyState
                                                )
                                                    return
                                                ;
                                                debug
                                                    (
                                                        "changing transport and sending upgrade packet"
                                                    );
                                                cleanup
                                                    ();
                                                self
                                                    .setTransport(
                                                        transport
                                                    );
                                                transport
                                                    .send(
                                                        [{
                                                            type: "upgrade"
                                                        }]
                                                    );
                                                self
                                                    .emit(
                                                        "upgrade",
                                                        transport
                                                    );
                                                transport
                                                    =
                                                    null;
                                                self
                                                    .upgrading =
                                                    false;
                                                self
                                                    .flush()
                                            })
                                } else {
                                    debug(
                                        'probe transport "%s" failed',
                                        name
                                    );
                                    var err =
                                        new Error(
                                            "probe error"
                                        );
                                    err.transport =
                                        transport
                                        .name;
                                    self.emit(
                                        "upgradeError",
                                        err
                                    )
                                }
                            })
                    }

                    function freezeTransport() {
                        if (failed) return;
                        failed = true;
                        cleanup();
                        transport.close();
                        transport = null
                    }

                    function onerror(err) {
                        var error = new Error(
                            "probe error: " +
                            err);
                        error.transport = transport
                            .name;
                        freezeTransport();
                        debug(
                            'probe transport "%s" failed because of error: %s',
                            name, err);
                        self.emit("upgradeError",
                            error)
                    }

                    function onTransportClose() {
                        onerror("transport closed")
                    }

                    function onclose() {
                        onerror("socket closed")
                    }

                    function onupgrade(to) {
                        if (transport && to.name !=
                            transport.name) {
                            debug(
                                '"%s" works - aborting "%s"',
                                to.name,
                                transport.name);
                            freezeTransport()
                        }
                    }

                    function cleanup() {
                        transport.removeListener(
                            "open",
                            onTransportOpen);
                        transport.removeListener(
                            "error", onerror);
                        transport.removeListener(
                            "close",
                            onTransportClose);
                        self.removeListener("close",
                            onclose);
                        self.removeListener(
                            "upgrading",
                            onupgrade)
                    }
                    transport.once("open",
                        onTransportOpen);
                    transport.once("error", onerror);
                    transport.once("close",
                        onTransportClose);
                    this.once("close", onclose);
                    this.once("upgrading",
                        onupgrade);
                    transport.open()
                };
                Socket.prototype.onOpen = function() {
                    debug("socket open");
                    this.readyState = "open";
                    Socket.priorWebsocketSuccess =
                        "websocket" == this.transport
                        .name;
                    this.emit("open");
                    this.flush();
                    if ("open" == this.readyState &&
                        this.upgrade && this.transport
                        .pause) {
                        debug(
                            "starting upgrade probes"
                        );
                        for (var i = 0, l = this.upgrades
                                .length; i < l; i++) {
                            this.probe(this.upgrades[
                                i])
                        }
                    }
                };
                Socket.prototype.onPacket = function(
                    packet) {
                    if ("opening" == this.readyState ||
                        "open" == this.readyState) {
                        debug(
                            'socket receive: type "%s", data "%s"',
                            packet.type, packet
                            .data);
                        this.emit("packet", packet);
                        this.emit("heartbeat");
                        switch (packet.type) {
                            case "open":
                                this.onHandshake(
                                    parsejson(
                                        packet.data
                                    ));
                                break;
                            case "pong":
                                this.setPing();
                                this.emit("pong");
                                break;
                            case "error":
                                var err = new Error(
                                    "server error"
                                );
                                err.code = packet.data;
                                this.onError(err);
                                break;
                            case "message":
                                this.emit("data",
                                    packet.data
                                );
                                this.emit("message",
                                    packet.data
                                );
                                break
                        }
                    } else {
                        debug(
                            'packet received with socket readyState "%s"',
                            this.readyState)
                    }
                };
                Socket.prototype.onHandshake = function(
                    data) {
                    this.emit("handshake", data);
                    this.id = data.sid;
                    this.transport.query.sid = data
                        .sid;
                    this.upgrades = this.filterUpgrades(
                        data.upgrades);
                    this.pingInterval = data.pingInterval;
                    this.pingTimeout = data.pingTimeout;
                    this.onOpen();
                    if ("closed" == this.readyState)
                        return;
                    this.setPing();
                    this.removeListener("heartbeat",
                        this.onHeartbeat);
                    this.on("heartbeat", this.onHeartbeat)
                };
                Socket.prototype.onHeartbeat = function(
                    timeout) {
                    clearTimeout(this.pingTimeoutTimer);
                    var self = this;
                    self.pingTimeoutTimer =
                        setTimeout(function() {
                                if ("closed" ==
                                    self.readyState
                                ) return;
                                self.onClose(
                                    "ping timeout"
                                )
                            }, timeout || self.pingInterval +
                            self.pingTimeout)
                };
                Socket.prototype.setPing = function() {
                    var self = this;
                    clearTimeout(self.pingIntervalTimer);
                    self.pingIntervalTimer =
                        setTimeout(function() {
                            debug(
                                "writing ping packet - expecting pong within %sms",
                                self.pingTimeout
                            );
                            self.ping();
                            self.onHeartbeat(
                                self.pingTimeout
                            )
                        }, self.pingInterval)
                };
                Socket.prototype.ping = function() {
                    var self = this;
                    this.sendPacket("ping",
                        function() {
                            self.emit("ping")
                        })
                };
                Socket.prototype.onDrain = function() {
                    this.writeBuffer.splice(0, this
                        .prevBufferLen);
                    this.prevBufferLen = 0;
                    if (0 === this.writeBuffer.length) {
                        this.emit("drain")
                    } else {
                        this.flush()
                    }
                };
                Socket.prototype.flush = function() {
                    if ("closed" != this.readyState &&
                        this.transport.writable &&
                        !this.upgrading && this.writeBuffer
                        .length) {
                        debug(
                            "flushing %d packets in socket",
                            this.writeBuffer.length
                        );
                        this.transport.send(this.writeBuffer);
                        this.prevBufferLen = this.writeBuffer
                            .length;
                        this.emit("flush")
                    }
                };
                Socket.prototype.write = Socket.prototype
                    .send = function(msg, options, fn) {
                        this.sendPacket("message", msg,
                            options, fn);
                        return this
                    };
                Socket.prototype.sendPacket = function(
                    type, data, options, fn) {
                    if ("function" == typeof data) {
                        fn = data;
                        data = undefined
                    }
                    if ("function" == typeof options) {
                        fn = options;
                        options = null
                    }
                    if ("closing" == this.readyState ||
                        "closed" == this.readyState
                    ) {
                        return
                    }
                    options = options || {};
                    options.compress = false !==
                        options.compress;
                    var packet = {
                        type: type,
                        data: data,
                        options: options
                    };
                    this.emit("packetCreate",
                        packet);
                    this.writeBuffer.push(packet);
                    if (fn) this.once("flush", fn);
                    this.flush()
                };
                Socket.prototype.close = function() {
                    if ("opening" == this.readyState ||
                        "open" == this.readyState) {
                        this.readyState = "closing";
                        var self = this;
                        if (this.writeBuffer.length) {
                            this.once("drain",
                                function() {
                                    if (this.upgrading) {
                                        waitForUpgrade
                                            ()
                                    } else {
                                        close()
                                    }
                                })
                        } else if (this.upgrading) {
                            waitForUpgrade()
                        } else {
                            close()
                        }
                    }

                    function close() {
                        self.onClose("forced close");
                        debug(
                            "socket closing - telling transport to close"
                        );
                        self.transport.close()
                    }

                    function cleanupAndClose() {
                        self.removeListener(
                            "upgrade",
                            cleanupAndClose);
                        self.removeListener(
                            "upgradeError",
                            cleanupAndClose);
                        close()
                    }

                    function waitForUpgrade() {
                        self.once("upgrade",
                            cleanupAndClose);
                        self.once("upgradeError",
                            cleanupAndClose)
                    }
                    return this
                };
                Socket.prototype.onError = function(err) {
                    debug("socket error %j", err);
                    Socket.priorWebsocketSuccess =
                        false;
                    this.emit("error", err);
                    this.onClose("transport error",
                        err)
                };
                Socket.prototype.onClose = function(
                    reason, desc) {
                    if ("opening" == this.readyState ||
                        "open" == this.readyState ||
                        "closing" == this.readyState
                    ) {
                        debug(
                            'socket close with reason: "%s"',
                            reason);
                        var self = this;
                        clearTimeout(this.pingIntervalTimer);
                        clearTimeout(this.pingTimeoutTimer);
                        this.transport.removeAllListeners(
                            "close");
                        this.transport.close();
                        this.transport.removeAllListeners();
                        this.readyState = "closed";
                        this.id = null;
                        this.emit("close", reason,
                            desc);
                        self.writeBuffer = [];
                        self.prevBufferLen = 0
                    }
                };
                Socket.prototype.filterUpgrades =
                    function(upgrades) {
                        var filteredUpgrades = [];
                        for (var i = 0, j = upgrades.length; i <
                            j; i++) {
                            if (~index(this.transports,
                                    upgrades[i]))
                                filteredUpgrades.push(
                                    upgrades[i])
                        }
                        return filteredUpgrades
                    }
            }).call(this, typeof self !== "undefined" ?
                self : typeof window !== "undefined" ?
                window : typeof global !== "undefined" ?
                global : {})
        }, {
            "./transport": 4,
            "./transports": 5,
            "component-emitter": 15,
            debug: 17,
            "engine.io-parser": 19,
            indexof: 23,
            parsejson: 26,
            parseqs: 27,
            parseuri: 28
        }],
        4: [function(_dereq_, module, exports) {
            var parser = _dereq_("engine.io-parser");
            var Emitter = _dereq_("component-emitter");
            module.exports = Transport;

            function Transport(opts) {
                this.path = opts.path;
                this.hostname = opts.hostname;
                this.port = opts.port;
                this.secure = opts.secure;
                this.query = opts.query;
                this.timestampParam = opts.timestampParam;
                this.timestampRequests = opts.timestampRequests;
                this.readyState = "";
                this.agent = opts.agent || false;
                this.socket = opts.socket;
                this.enablesXDR = opts.enablesXDR;
                this.pfx = opts.pfx;
                this.key = opts.key;
                this.passphrase = opts.passphrase;
                this.cert = opts.cert;
                this.ca = opts.ca;
                this.ciphers = opts.ciphers;
                this.rejectUnauthorized = opts.rejectUnauthorized;
                this.extraHeaders = opts.extraHeaders
            }
            Emitter(Transport.prototype);
            Transport.prototype.onError = function(msg,
                desc) {
                var err = new Error(msg);
                err.type = "TransportError";
                err.description = desc;
                this.emit("error", err);
                return this
            };
            Transport.prototype.open = function() {
                if ("closed" == this.readyState || "" ==
                    this.readyState) {
                    this.readyState = "opening";
                    this.doOpen()
                }
                return this
            };
            Transport.prototype.close = function() {
                if ("opening" == this.readyState ||
                    "open" == this.readyState) {
                    this.doClose();
                    this.onClose()
                }
                return this
            };
            Transport.prototype.send = function(packets) {
                if ("open" == this.readyState) {
                    this.write(packets)
                } else {
                    throw new Error(
                        "Transport not open")
                }
            };
            Transport.prototype.onOpen = function() {
                this.readyState = "open";
                this.writable = true;
                this.emit("open")
            };
            Transport.prototype.onData = function(data) {
                var packet = parser.decodePacket(data,
                    this.socket.binaryType);
                this.onPacket(packet)
            };
            Transport.prototype.onPacket = function(packet) {
                this.emit("packet", packet)
            };
            Transport.prototype.onClose = function() {
                this.readyState = "closed";
                this.emit("close")
            }
        }, {
            "component-emitter": 15,
            "engine.io-parser": 19
        }],
        5: [function(_dereq_, module, exports) {
            (function(global) {
                var XMLHttpRequest = _dereq_(
                    "xmlhttprequest-ssl");
                var XHR = _dereq_("./polling-xhr");
                var JSONP = _dereq_("./polling-jsonp");
                var websocket = _dereq_("./websocket");
                exports.polling = polling;
                exports.websocket = websocket;

                function polling(opts) {
                    var xhr;
                    var xd = false;
                    var xs = false;
                    var jsonp = false !== opts.jsonp;
                    if (global.location) {
                        var isSSL = "https:" ==
                            location.protocol;
                        var port = location.port;
                        if (!port) {
                            port = isSSL ? 443 : 80
                        }
                        xd = opts.hostname != location.hostname ||
                            port != opts.port;
                        xs = opts.secure != isSSL
                    }
                    opts.xdomain = xd;
                    opts.xscheme = xs;
                    xhr = new XMLHttpRequest(opts);
                    if ("open" in xhr && !opts.forceJSONP) {
                        return new XHR(opts)
                    } else {
                        if (!jsonp) throw new Error(
                            "JSONP disabled");
                        return new JSONP(opts)
                    }
                }
            }).call(this, typeof self !== "undefined" ?
                self : typeof window !== "undefined" ?
                window : typeof global !== "undefined" ?
                global : {})
        }, {
            "./polling-jsonp": 6,
            "./polling-xhr": 7,
            "./websocket": 9,
            "xmlhttprequest-ssl": 10
        }],
        6: [function(_dereq_, module, exports) {
            (function(global) {
                var Polling = _dereq_("./polling");
                var inherit = _dereq_(
                    "component-inherit");
                module.exports = JSONPPolling;
                var rNewline = /\n/g;
                var rEscapedNewline = /\\n/g;
                var callbacks;
                var index = 0;

                function empty() {}

                function JSONPPolling(opts) {
                    Polling.call(this, opts);
                    this.query = this.query || {};
                    if (!callbacks) {
                        if (!global.___eio) global.___eio = [];
                        callbacks = global.___eio
                    }
                    this.index = callbacks.length;
                    var self = this;
                    callbacks.push(function(msg) {
                        self.onData(msg)
                    });
                    this.query.j = this.index;
                    if (global.document && global.addEventListener) {
                        global.addEventListener(
                            "beforeunload",
                            function() {
                                if (self.script)
                                    self.script.onerror =
                                    empty
                            }, false)
                    }
                }
                inherit(JSONPPolling, Polling);
                JSONPPolling.prototype.supportsBinary =
                    false;
                JSONPPolling.prototype.doClose =
                    function() {
                        if (this.script) {
                            this.script.parentNode.removeChild(
                                this.script);
                            this.script = null
                        }
                        if (this.form) {
                            this.form.parentNode.removeChild(
                                this.form);
                            this.form = null;
                            this.iframe = null
                        }
                        Polling.prototype.doClose.call(
                            this)
                    };
                JSONPPolling.prototype.doPoll =
                    function() {
                        var self = this;
                        var script = document.createElement(
                            "script");
                        if (this.script) {
                            this.script.parentNode.removeChild(
                                this.script);
                            this.script = null
                        }
                        script.async = true;
                        script.src = this.uri();
                        script.onerror = function(e) {
                            self.onError(
                                "jsonp poll error",
                                e)
                        };
                        var insertAt = document.getElementsByTagName(
                            "script")[0];
                        if (insertAt) {
                            insertAt.parentNode.insertBefore(
                                script, insertAt)
                        } else {
                            (document.head || document.body)
                            .appendChild(script)
                        }
                        this.script = script;
                        var isUAgecko = "undefined" !=
                            typeof navigator &&
                            /gecko/i.test(navigator.userAgent);
                        if (isUAgecko) {
                            setTimeout(function() {
                                var iframe =
                                    document.createElement(
                                        "iframe"
                                    );
                                document.body.appendChild(
                                    iframe);
                                document.body.removeChild(
                                    iframe)
                            }, 100)
                        }
                    };
                JSONPPolling.prototype.doWrite =
                    function(data, fn) {
                        var self = this;
                        if (!this.form) {
                            var form = document.createElement(
                                "form");
                            var area = document.createElement(
                                "textarea");
                            var id = this.iframeId =
                                "eio_iframe_" + this.index;
                            var iframe;
                            form.className = "socketio";
                            form.style.position =
                                "absolute";
                            form.style.top = "-1000px";
                            form.style.left = "-1000px";
                            form.target = id;
                            form.method = "POST";
                            form.setAttribute(
                                "accept-charset",
                                "utf-8");
                            area.name = "d";
                            form.appendChild(area);
                            document.body.appendChild(
                                form);
                            this.form = form;
                            this.area = area
                        }
                        this.form.action = this.uri();

                        function complete() {
                            initIframe();
                            fn()
                        }

                        function initIframe() {
                            if (self.iframe) {
                                try {
                                    self.form.removeChild(
                                        self.iframe
                                    )
                                } catch (e) {
                                    self.onError(
                                        "jsonp polling iframe removal error",
                                        e)
                                }
                            }
                            try {
                                var html =
                                    '<iframe src="javascript:0" name="' +
                                    self.iframeId +
                                    '">';
                                iframe = document.createElement(
                                    html)
                            } catch (e) {
                                iframe = document.createElement(
                                    "iframe");
                                iframe.name = self.iframeId;
                                iframe.src =
                                    "javascript:0"
                            }
                            iframe.id = self.iframeId;
                            self.form.appendChild(
                                iframe);
                            self.iframe = iframe
                        }
                        initIframe();
                        data = data.replace(
                            rEscapedNewline, "\\\n"
                        );
                        this.area.value = data.replace(
                            rNewline, "\\n");
                        try {
                            this.form.submit()
                        } catch (e) {}
                        if (this.iframe.attachEvent) {
                            this.iframe.onreadystatechange =
                                function() {
                                    if (self.iframe.readyState ==
                                        "complete") {
                                        complete()
                                    }
                                }
                        } else {
                            this.iframe.onload =
                                complete
                        }
                    }
            }).call(this, typeof self !== "undefined" ?
                self : typeof window !== "undefined" ?
                window : typeof global !== "undefined" ?
                global : {})
        }, {
            "./polling": 8,
            "component-inherit": 16
        }],
        7: [function(_dereq_, module, exports) {
            (function(global) {
                var XMLHttpRequest = _dereq_(
                    "xmlhttprequest-ssl");
                var Polling = _dereq_("./polling");
                var Emitter = _dereq_(
                    "component-emitter");
                var inherit = _dereq_(
                    "component-inherit");
                var debug = _dereq_("debug")(
                    "engine.io-client:polling-xhr");
                module.exports = XHR;
                module.exports.Request = Request;

                function empty() {}

                function XHR(opts) {
                    Polling.call(this, opts);
                    if (global.location) {
                        var isSSL = "https:" ==
                            location.protocol;
                        var port = location.port;
                        if (!port) {
                            port = isSSL ? 443 : 80
                        }
                        this.xd = opts.hostname !=
                            global.location.hostname ||
                            port != opts.port;
                        this.xs = opts.secure != isSSL
                    } else {
                        this.extraHeaders = opts.extraHeaders
                    }
                }
                inherit(XHR, Polling);
                XHR.prototype.supportsBinary = true;
                XHR.prototype.request = function(opts) {
                    opts = opts || {};
                    opts.uri = this.uri();
                    opts.xd = this.xd;
                    opts.xs = this.xs;
                    opts.agent = this.agent ||
                        false;
                    opts.supportsBinary = this.supportsBinary;
                    opts.enablesXDR = this.enablesXDR;
                    opts.pfx = this.pfx;
                    opts.key = this.key;
                    opts.passphrase = this.passphrase;
                    opts.cert = this.cert;
                    opts.ca = this.ca;
                    opts.ciphers = this.ciphers;
                    opts.rejectUnauthorized = this.rejectUnauthorized;
                    opts.extraHeaders = this.extraHeaders;
                    return new Request(opts)
                };
                XHR.prototype.doWrite = function(data,
                    fn) {
                    var isBinary = typeof data !==
                        "string" && data !==
                        undefined;
                    var req = this.request({
                        method: "POST",
                        data: data,
                        isBinary: isBinary
                    });
                    var self = this;
                    req.on("success", fn);
                    req.on("error", function(err) {
                        self.onError(
                            "xhr post error",
                            err)
                    });
                    this.sendXhr = req
                };
                XHR.prototype.doPoll = function() {
                    debug("xhr poll");
                    var req = this.request();
                    var self = this;
                    req.on("data", function(data) {
                        self.onData(data)
                    });
                    req.on("error", function(err) {
                        self.onError(
                            "xhr poll error",
                            err)
                    });
                    this.pollXhr = req
                };

                function Request(opts) {
                    this.method = opts.method || "GET";
                    this.uri = opts.uri;
                    this.xd = !!opts.xd;
                    this.xs = !!opts.xs;
                    this.async = false !== opts.async;
                    this.data = undefined != opts.data ?
                        opts.data : null;
                    this.agent = opts.agent;
                    this.isBinary = opts.isBinary;
                    this.supportsBinary = opts.supportsBinary;
                    this.enablesXDR = opts.enablesXDR;
                    this.pfx = opts.pfx;
                    this.key = opts.key;
                    this.passphrase = opts.passphrase;
                    this.cert = opts.cert;
                    this.ca = opts.ca;
                    this.ciphers = opts.ciphers;
                    this.rejectUnauthorized = opts.rejectUnauthorized;
                    this.extraHeaders = opts.extraHeaders;
                    this.create()
                }
                Emitter(Request.prototype);
                Request.prototype.create = function() {
                    var opts = {
                        agent: this.agent,
                        xdomain: this.xd,
                        xscheme: this.xs,
                        enablesXDR: this.enablesXDR
                    };
                    opts.pfx = this.pfx;
                    opts.key = this.key;
                    opts.passphrase = this.passphrase;
                    opts.cert = this.cert;
                    opts.ca = this.ca;
                    opts.ciphers = this.ciphers;
                    opts.rejectUnauthorized = this.rejectUnauthorized;
                    var xhr = this.xhr = new XMLHttpRequest(
                        opts);
                    var self = this;
                    try {
                        debug("xhr open %s: %s",
                            this.method, this.uri
                        );
                        xhr.open(this.method, this.uri,
                            this.async);
                        try {
                            if (this.extraHeaders) {
                                xhr.setDisableHeaderCheck(
                                    true);
                                for (var i in this.extraHeaders) {
                                    if (this.extraHeaders
                                        .hasOwnProperty(
                                            i)) {
                                        xhr.setRequestHeader(
                                            i,
                                            this
                                            .extraHeaders[
                                                i
                                            ])
                                    }
                                }
                            }
                        } catch (e) {}
                        if (this.supportsBinary) {
                            xhr.responseType =
                                "arraybuffer"
                        }
                        if ("POST" == this.method) {
                            try {
                                if (this.isBinary) {
                                    xhr.setRequestHeader(
                                        "Content-type",
                                        "application/octet-stream"
                                    )
                                } else {
                                    xhr.setRequestHeader(
                                        "Content-type",
                                        "text/plain;charset=UTF-8"
                                    )
                                }
                            } catch (e) {}
                        }
                        if ("withCredentials" in
                            xhr) {
                            xhr.withCredentials =
                                true
                        }
                        if (this.hasXDR()) {
                            xhr.onload = function() {
                                self.onLoad()
                            };
                            xhr.onerror = function() {
                                self.onError(
                                    xhr.responseText
                                )
                            }
                        } else {
                            xhr.onreadystatechange =
                                function() {
                                    if (4 != xhr.readyState)
                                        return;
                                    if (200 == xhr.status ||
                                        1223 == xhr
                                        .status) {
                                        self.onLoad()
                                    } else {
                                        setTimeout(
                                            function() {
                                                self
                                                    .onError(
                                                        xhr
                                                        .status
                                                    )
                                            },
                                            0)
                                    }
                                }
                        }
                        debug("xhr data %s", this.data);
                        xhr.send(this.data)
                    } catch (e) {
                        setTimeout(function() {
                            self.onError(e)
                        }, 0);
                        return
                    }
                    if (global.document) {
                        this.index = Request.requestsCount++;
                        Request.requests[this.index] =
                            this
                    }
                };
                Request.prototype.onSuccess = function() {
                    this.emit("success");
                    this.cleanup()
                };
                Request.prototype.onData = function(
                    data) {
                    this.emit("data", data);
                    this.onSuccess()
                };
                Request.prototype.onError = function(
                    err) {
                    this.emit("error", err);
                    this.cleanup(true)
                };
                Request.prototype.cleanup = function(
                    fromError) {
                    if ("undefined" == typeof this.xhr ||
                        null === this.xhr) {
                        return
                    }
                    if (this.hasXDR()) {
                        this.xhr.onload = this.xhr.onerror =
                            empty
                    } else {
                        this.xhr.onreadystatechange =
                            empty
                    }
                    if (fromError) {
                        try {
                            this.xhr.abort()
                        } catch (e) {}
                    }
                    if (global.document) {
                        delete Request.requests[
                            this.index]
                    }
                    this.xhr = null
                };
                Request.prototype.onLoad = function() {
                    var data;
                    try {
                        var contentType;
                        try {
                            contentType = this.xhr.getResponseHeader(
                                    "Content-Type")
                                .split(";")[0]
                        } catch (e) {}
                        if (contentType ===
                            "application/octet-stream"
                        ) {
                            data = this.xhr.response
                        } else {
                            if (!this.supportsBinary) {
                                data = this.xhr.responseText
                            } else {
                                try {
                                    data = String.fromCharCode
                                        .apply(null,
                                            new Uint8Array(
                                                this
                                                .xhr
                                                .response
                                            ))
                                } catch (e) {
                                    var ui8Arr =
                                        new Uint8Array(
                                            this.xhr
                                            .response
                                        );
                                    var dataArray = [];
                                    for (var idx =
                                            0,
                                            length =
                                            ui8Arr.length; idx <
                                        length; idx++
                                    ) {
                                        dataArray.push(
                                            ui8Arr[
                                                idx
                                            ])
                                    }
                                    data = String.fromCharCode
                                        .apply(null,
                                            dataArray
                                        )
                                }
                            }
                        }
                    } catch (e) {
                        this.onError(e)
                    }
                    if (null != data) {
                        this.onData(data)
                    }
                };
                Request.prototype.hasXDR = function() {
                    return "undefined" !== typeof global
                        .XDomainRequest && !this.xs &&
                        this.enablesXDR
                };
                Request.prototype.abort = function() {
                    this.cleanup()
                };
                if (global.document) {
                    Request.requestsCount = 0;
                    Request.requests = {};
                    if (global.attachEvent) {
                        global.attachEvent("onunload",
                            unloadHandler)
                    } else if (global.addEventListener) {
                        global.addEventListener(
                            "beforeunload",
                            unloadHandler, false)
                    }
                }

                function unloadHandler() {
                    for (var i in Request.requests) {
                        if (Request.requests.hasOwnProperty(
                                i)) {
                            Request.requests[i].abort()
                        }
                    }
                }
            }).call(this, typeof self !== "undefined" ?
                self : typeof window !== "undefined" ?
                window : typeof global !== "undefined" ?
                global : {})
        }, {
            "./polling": 8,
            "component-emitter": 15,
            "component-inherit": 16,
            debug: 17,
            "xmlhttprequest-ssl": 10
        }],
        8: [function(_dereq_, module, exports) {
            var Transport = _dereq_("../transport");
            var parseqs = _dereq_("parseqs");
            var parser = _dereq_("engine.io-parser");
            var inherit = _dereq_("component-inherit");
            var yeast = _dereq_("yeast");
            var debug = _dereq_("debug")(
                "engine.io-client:polling");
            module.exports = Polling;
            var hasXHR2 = function() {
                var XMLHttpRequest = _dereq_(
                    "xmlhttprequest-ssl");
                var xhr = new XMLHttpRequest({
                    xdomain: false
                });
                return null != xhr.responseType
            }();

            function Polling(opts) {
                var forceBase64 = opts && opts.forceBase64;
                if (!hasXHR2 || forceBase64) {
                    this.supportsBinary = false
                }
                Transport.call(this, opts)
            }
            inherit(Polling, Transport);
            Polling.prototype.name = "polling";
            Polling.prototype.doOpen = function() {
                this.poll()
            };
            Polling.prototype.pause = function(onPause) {
                var pending = 0;
                var self = this;
                this.readyState = "pausing";

                function pause() {
                    debug("paused");
                    self.readyState = "paused";
                    onPause()
                }
                if (this.polling || !this.writable) {
                    var total = 0;
                    if (this.polling) {
                        debug(
                            "we are currently polling - waiting to pause"
                        );
                        total++;
                        this.once("pollComplete",
                            function() {
                                debug(
                                    "pre-pause polling complete"
                                );
                                --total || pause()
                            })
                    }
                    if (!this.writable) {
                        debug(
                            "we are currently writing - waiting to pause"
                        );
                        total++;
                        this.once("drain", function() {
                            debug(
                                "pre-pause writing complete"
                            );
                            --total || pause()
                        })
                    }
                } else {
                    pause()
                }
            };
            Polling.prototype.poll = function() {
                debug("polling");
                this.polling = true;
                this.doPoll();
                this.emit("poll")
            };
            Polling.prototype.onData = function(data) {
                var self = this;
                debug("polling got data %s", data);
                var callback = function(packet, index,
                    total) {
                    if ("opening" == self.readyState) {
                        self.onOpen()
                    }
                    if ("close" == packet.type) {
                        self.onClose();
                        return false
                    }
                    self.onPacket(packet)
                };
                parser.decodePayload(data, this.socket.binaryType,
                    callback);
                if ("closed" != this.readyState) {
                    this.polling = false;
                    this.emit("pollComplete");
                    if ("open" == this.readyState) {
                        this.poll()
                    } else {
                        debug(
                            'ignoring poll - transport state "%s"',
                            this.readyState)
                    }
                }
            };
            Polling.prototype.doClose = function() {
                var self = this;

                function close() {
                    debug("writing close packet");
                    self.write([{
                        type: "close"
                    }])
                }
                if ("open" == this.readyState) {
                    debug("transport open - closing");
                    close()
                } else {
                    debug(
                        "transport not open - deferring close"
                    );
                    this.once("open", close)
                }
            };
            Polling.prototype.write = function(packets) {
                var self = this;
                this.writable = false;
                var callbackfn = function() {
                    self.writable = true;
                    self.emit("drain")
                };
                var self = this;
                parser.encodePayload(packets, this.supportsBinary,
                    function(data) {
                        self.doWrite(data,
                            callbackfn)
                    })
            };
            Polling.prototype.uri = function() {
                var query = this.query || {};
                var schema = this.secure ? "https" :
                    "http";
                var port = "";
                if (false !== this.timestampRequests) {
                    query[this.timestampParam] = yeast()
                }
                if (!this.supportsBinary && !query.sid) {
                    query.b64 = 1
                }
                query = parseqs.encode(query);
                if (this.port && ("https" == schema &&
                        this.port != 443 || "http" ==
                        schema && this.port != 80)) {
                    port = ":" + this.port
                }
                if (query.length) {
                    query = "?" + query
                }
                var ipv6 = this.hostname.indexOf(":") !==
                    -1;
                return schema + "://" + (ipv6 ? "[" +
                    this.hostname + "]" : this.hostname
                ) + port + this.path + query
            }
        }, {
            "../transport": 4,
            "component-inherit": 16,
            debug: 17,
            "engine.io-parser": 19,
            parseqs: 27,
            "xmlhttprequest-ssl": 10,
            yeast: 30
        }],
        9: [function(_dereq_, module, exports) {
            (function(global) {
                var Transport = _dereq_("../transport");
                var parser = _dereq_("engine.io-parser");
                var parseqs = _dereq_("parseqs");
                var inherit = _dereq_(
                    "component-inherit");
                var yeast = _dereq_("yeast");
                var debug = _dereq_("debug")(
                    "engine.io-client:websocket");
                var BrowserWebSocket = global.WebSocket ||
                    global.MozWebSocket;
                var WebSocket = BrowserWebSocket;
                if (!WebSocket && typeof window ===
                    "undefined") {
                    try {
                        WebSocket = _dereq_("ws")
                    } catch (e) {}
                }
                module.exports = WS;

                function WS(opts) {
                    var forceBase64 = opts && opts.forceBase64;
                    if (forceBase64) {
                        this.supportsBinary = false
                    }
                    this.perMessageDeflate = opts.perMessageDeflate;
                    Transport.call(this, opts)
                }
                inherit(WS, Transport);
                WS.prototype.name = "websocket";
                WS.prototype.supportsBinary = true;
                WS.prototype.doOpen = function() {
                    if (!this.check()) {
                        return
                    }
                    var self = this;
                    var uri = this.uri();
                    var protocols = void 0;
                    var opts = {
                        agent: this.agent,
                        perMessageDeflate: this
                            .perMessageDeflate
                    };
                    opts.pfx = this.pfx;
                    opts.key = this.key;
                    opts.passphrase = this.passphrase;
                    opts.cert = this.cert;
                    opts.ca = this.ca;
                    opts.ciphers = this.ciphers;
                    opts.rejectUnauthorized = this.rejectUnauthorized;
                    if (this.extraHeaders) {
                        opts.headers = this.extraHeaders
                    }
                    this.ws = BrowserWebSocket ?
                        new WebSocket(uri) : new WebSocket(
                            uri, protocols, opts);
                    if (this.ws.binaryType ===
                        undefined) {
                        this.supportsBinary = false
                    }
                    if (this.ws.supports && this.ws
                        .supports.binary) {
                        this.supportsBinary = true;
                        this.ws.binaryType =
                            "buffer"
                    } else {
                        this.ws.binaryType =
                            "arraybuffer"
                    }
                    this.addEventListeners()
                };
                WS.prototype.addEventListeners =
                    function() {
                        var self = this;
                        this.ws.onopen = function() {
                            self.onOpen()
                        };
                        this.ws.onclose = function() {
                            self.onClose()
                        };
                        this.ws.onmessage = function(ev) {
                            self.onData(ev.data)
                        };
                        this.ws.onerror = function(e) {
                            self.onError(
                                "websocket error",
                                e)
                        }
                    };
                if ("undefined" != typeof navigator &&
                    /iPad|iPhone|iPod/i.test(navigator.userAgent)
                ) {
                    WS.prototype.onData = function(data) {
                        var self = this;
                        setTimeout(function() {
                            Transport.prototype
                                .onData.call(
                                    self,
                                    data)
                        }, 0)
                    }
                }
                WS.prototype.write = function(packets) {
                    var self = this;
                    this.writable = false;
                    var total = packets.length;
                    for (var i = 0, l = total; i <
                        l; i++) {
                        (function(packet) {
                            parser.encodePacket(
                                packet,
                                self.supportsBinary,
                                function(
                                    data) {
                                    if (!
                                        BrowserWebSocket
                                    ) {
                                        var
                                            opts = {};
                                        if (
                                            packet
                                            .options
                                        ) {
                                            opts
                                                .compress =
                                                packet
                                                .options
                                                .compress
                                        }
                                        if (
                                            self
                                            .perMessageDeflate
                                        ) {
                                            var
                                                len =
                                                "string" ==
                                                typeof data ?
                                                global
                                                .Buffer
                                                .byteLength(
                                                    data
                                                ) :
                                                data
                                                .length;
                                            if (
                                                len <
                                                self
                                                .perMessageDeflate
                                                .threshold
                                            ) {
                                                opts
                                                    .compress =
                                                    false
                                            }
                                        }
                                    }
                                    try {
                                        if (
                                            BrowserWebSocket
                                        ) {
                                            self
                                                .ws
                                                .send(
                                                    data
                                                )
                                        } else {
                                            self
                                                .ws
                                                .send(
                                                    data,
                                                    opts
                                                )
                                        }
                                    } catch (
                                        e) {
                                        debug
                                            (
                                                "websocket closed before onclose event"
                                            )
                                    }--
                                    total ||
                                        done()
                                })
                        })(packets[i])
                    }

                    function done() {
                        self.emit("flush");
                        setTimeout(function() {
                            self.writable =
                                true;
                            self.emit(
                                "drain"
                            )
                        }, 0)
                    }
                };
                WS.prototype.onClose = function() {
                    Transport.prototype.onClose.call(
                        this)
                };
                WS.prototype.doClose = function() {
                    if (typeof this.ws !==
                        "undefined") {
                        this.ws.close()
                    }
                };
                WS.prototype.uri = function() {
                    var query = this.query || {};
                    var schema = this.secure ?
                        "wss" : "ws";
                    var port = "";
                    if (this.port && ("wss" ==
                            schema && this.port !=
                            443 || "ws" == schema &&
                            this.port != 80)) {
                        port = ":" + this.port
                    }
                    if (this.timestampRequests) {
                        query[this.timestampParam] =
                            yeast()
                    }
                    if (!this.supportsBinary) {
                        query.b64 = 1
                    }
                    query = parseqs.encode(query);
                    if (query.length) {
                        query = "?" + query
                    }
                    var ipv6 = this.hostname.indexOf(
                        ":") !== -1;
                    return schema + "://" + (ipv6 ?
                            "[" + this.hostname +
                            "]" : this.hostname) +
                        port + this.path + query
                };
                WS.prototype.check = function() {
                    return !!WebSocket && !(
                        "__initialize" in
                        WebSocket && this.name ===
                        WS.prototype.name)
                }
            }).call(this, typeof self !== "undefined" ?
                self : typeof window !== "undefined" ?
                window : typeof global !== "undefined" ?
                global : {})
        }, {
            "../transport": 4,
            "component-inherit": 16,
            debug: 17,
            "engine.io-parser": 19,
            parseqs: 27,
            ws: undefined,
            yeast: 30
        }],
        10: [function(_dereq_, module, exports) {
            var hasCORS = _dereq_("has-cors");
            module.exports = function(opts) {
                var xdomain = opts.xdomain;
                var xscheme = opts.xscheme;
                var enablesXDR = opts.enablesXDR;
                try {
                    if ("undefined" != typeof XMLHttpRequest &&
                        (!xdomain || hasCORS)) {
                        return new XMLHttpRequest
                    }
                } catch (e) {}
                try {
                    if ("undefined" != typeof XDomainRequest &&
                        !xscheme && enablesXDR) {
                        return new XDomainRequest
                    }
                } catch (e) {}
                if (!xdomain) {
                    try {
                        return new ActiveXObject(
                            "Microsoft.XMLHTTP")
                    } catch (e) {}
                }
            }
        }, {
            "has-cors": 22
        }],
        11: [function(_dereq_, module, exports) {
            module.exports = after;

            function after(count, callback, err_cb) {
                var bail = false;
                err_cb = err_cb || noop;
                proxy.count = count;
                return count === 0 ? callback() : proxy;

                function proxy(err, result) {
                    if (proxy.count <= 0) {
                        throw new Error(
                            "after called too many times"
                        )
                    }--proxy.count;
                    if (err) {
                        bail = true;
                        callback(err);
                        callback = err_cb
                    } else if (proxy.count === 0 && !bail) {
                        callback(null, result)
                    }
                }
            }

            function noop() {}
        }, {}],
        12: [function(_dereq_, module, exports) {
            module.exports = function(arraybuffer, start,
                end) {
                var bytes = arraybuffer.byteLength;
                start = start || 0;
                end = end || bytes;
                if (arraybuffer.slice) {
                    return arraybuffer.slice(start, end)
                }
                if (start < 0) {
                    start += bytes
                }
                if (end < 0) {
                    end += bytes
                }
                if (end > bytes) {
                    end = bytes
                }
                if (start >= bytes || start >= end ||
                    bytes === 0) {
                    return new ArrayBuffer(0)
                }
                var abv = new Uint8Array(arraybuffer);
                var result = new Uint8Array(end - start);
                for (var i = start, ii = 0; i < end; i++,
                    ii++) {
                    result[ii] = abv[i]
                }
                return result.buffer
            }
        }, {}],
        13: [function(_dereq_, module, exports) {
            (function(chars) {
                "use strict";
                exports.encode = function(arraybuffer) {
                    var bytes = new Uint8Array(
                            arraybuffer),
                        i, len = bytes.length,
                        base64 = "";
                    for (i = 0; i < len; i += 3) {
                        base64 += chars[bytes[i] >>
                            2];
                        base64 += chars[(bytes[i] &
                            3) << 4 | bytes[
                            i + 1] >> 4];
                        base64 += chars[(bytes[i +
                                1] & 15) << 2 |
                            bytes[i + 2] >> 6];
                        base64 += chars[bytes[i + 2] &
                            63]
                    }
                    if (len % 3 === 2) {
                        base64 = base64.substring(0,
                                base64.length - 1) +
                            "="
                    } else if (len % 3 === 1) {
                        base64 = base64.substring(0,
                                base64.length - 2) +
                            "=="
                    }
                    return base64
                };
                exports.decode = function(base64) {
                    var bufferLength = base64.length *
                        .75,
                        len = base64.length,
                        i, p = 0,
                        encoded1, encoded2,
                        encoded3, encoded4;
                    if (base64[base64.length - 1] ===
                        "=") {
                        bufferLength--;
                        if (base64[base64.length -
                                2] === "=") {
                            bufferLength--
                        }
                    }
                    var arraybuffer = new ArrayBuffer(
                            bufferLength),
                        bytes = new Uint8Array(
                            arraybuffer);
                    for (i = 0; i < len; i += 4) {
                        encoded1 = chars.indexOf(
                            base64[i]);
                        encoded2 = chars.indexOf(
                            base64[i + 1]);
                        encoded3 = chars.indexOf(
                            base64[i + 2]);
                        encoded4 = chars.indexOf(
                            base64[i + 3]);
                        bytes[p++] = encoded1 << 2 |
                            encoded2 >> 4;
                        bytes[p++] = (encoded2 & 15) <<
                            4 | encoded3 >> 2;
                        bytes[p++] = (encoded3 & 3) <<
                            6 | encoded4 & 63
                    }
                    return arraybuffer
                }
            })(
                "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"
            )
        }, {}],
        14: [function(_dereq_, module, exports) {
            (function(global) {
                var BlobBuilder = global.BlobBuilder ||
                    global.WebKitBlobBuilder || global.MSBlobBuilder ||
                    global.MozBlobBuilder;
                var blobSupported = function() {
                    try {
                        var a = new Blob(["hi"]);
                        return a.size === 2
                    } catch (e) {
                        return false
                    }
                }();
                var blobSupportsArrayBufferView =
                    blobSupported && function() {
                        try {
                            var b = new Blob([new Uint8Array(
                                [1, 2])]);
                            return b.size === 2
                        } catch (e) {
                            return false
                        }
                    }();
                var blobBuilderSupported = BlobBuilder &&
                    BlobBuilder.prototype.append &&
                    BlobBuilder.prototype.getBlob;

                function mapArrayBufferViews(ary) {
                    for (var i = 0; i < ary.length; i++) {
                        var chunk = ary[i];
                        if (chunk.buffer instanceof ArrayBuffer) {
                            var buf = chunk.buffer;
                            if (chunk.byteLength !==
                                buf.byteLength) {
                                var copy = new Uint8Array(
                                    chunk.byteLength
                                );
                                copy.set(new Uint8Array(
                                    buf, chunk.byteOffset,
                                    chunk.byteLength
                                ));
                                buf = copy.buffer
                            }
                            ary[i] = buf
                        }
                    }
                }

                function BlobBuilderConstructor(ary,
                    options) {
                    options = options || {};
                    var bb = new BlobBuilder;
                    mapArrayBufferViews(ary);
                    for (var i = 0; i < ary.length; i++) {
                        bb.append(ary[i])
                    }
                    return options.type ? bb.getBlob(
                        options.type) : bb.getBlob()
                }

                function BlobConstructor(ary, options) {
                    mapArrayBufferViews(ary);
                    return new Blob(ary, options || {})
                }
                module.exports = function() {
                    if (blobSupported) {
                        return
                            blobSupportsArrayBufferView ?
                            global.Blob :
                            BlobConstructor
                    } else if (blobBuilderSupported) {
                        return
                            BlobBuilderConstructor
                    } else {
                        return undefined
                    }
                }()
            }).call(this, typeof self !== "undefined" ?
                self : typeof window !== "undefined" ?
                window : typeof global !== "undefined" ?
                global : {})
        }, {}],
        15: [function(_dereq_, module, exports) {
            module.exports = Emitter;

            function Emitter(obj) {
                if (obj) return mixin(obj)
            }

            function mixin(obj) {
                for (var key in Emitter.prototype) {
                    obj[key] = Emitter.prototype[key]
                }
                return obj
            }
            Emitter.prototype.on = Emitter.prototype.addEventListener =
                function(event, fn) {
                    this._callbacks = this._callbacks || {};
                    (this._callbacks[event] = this._callbacks[
                        event] || []).push(fn);
                    return this
                };
            Emitter.prototype.once = function(event, fn) {
                var self = this;
                this._callbacks = this._callbacks || {};

                function on() {
                    self.off(event, on);
                    fn.apply(this, arguments)
                }
                on.fn = fn;
                this.on(event, on);
                return this
            };
            Emitter.prototype.off = Emitter.prototype.removeListener =
                Emitter.prototype.removeAllListeners =
                Emitter.prototype.removeEventListener =
                function(event, fn) {
                    this._callbacks = this._callbacks || {};
                    if (0 == arguments.length) {
                        this._callbacks = {};
                        return this
                    }
                    var callbacks = this._callbacks[event];
                    if (!callbacks) return this;
                    if (1 == arguments.length) {
                        delete this._callbacks[event];
                        return this
                    }
                    var cb;
                    for (var i = 0; i < callbacks.length; i++) {
                        cb = callbacks[i];
                        if (cb === fn || cb.fn === fn) {
                            callbacks.splice(i, 1);
                            break
                        }
                    }
                    return this
                };
            Emitter.prototype.emit = function(event) {
                this._callbacks = this._callbacks || {};
                var args = [].slice.call(arguments, 1),
                    callbacks = this._callbacks[event];
                if (callbacks) {
                    callbacks = callbacks.slice(0);
                    for (var i = 0, len = callbacks.length; i <
                        len; ++i) {
                        callbacks[i].apply(this, args)
                    }
                }
                return this
            };
            Emitter.prototype.listeners = function(event) {
                this._callbacks = this._callbacks || {};
                return this._callbacks[event] || []
            };
            Emitter.prototype.hasListeners = function(event) {
                return !!this.listeners(event).length
            }
        }, {}],
        16: [function(_dereq_, module, exports) {
            module.exports = function(a, b) {
                var fn = function() {};
                fn.prototype = b.prototype;
                a.prototype = new fn;
                a.prototype.constructor = a
            }
        }, {}],
        17: [function(_dereq_, module, exports) {
            exports = module.exports = _dereq_("./debug");
            exports.log = log;
            exports.formatArgs = formatArgs;
            exports.save = save;
            exports.load = load;
            exports.useColors = useColors;
            exports.storage = "undefined" != typeof chrome &&
                "undefined" != typeof chrome.storage ?
                chrome.storage.local : localstorage();
            exports.colors = ["lightseagreen",
                "forestgreen", "goldenrod",
                "dodgerblue", "darkorchid", "crimson"
            ];

            function useColors() {
                return "WebkitAppearance" in document.documentElement
                    .style || window.console && (console.firebug ||
                        console.exception && console.table) ||
                    navigator.userAgent.toLowerCase().match(
                        /firefox\/(\d+)/) && parseInt(
                        RegExp.$1, 10) >= 31
            }
            exports.formatters.j = function(v) {
                return JSON.stringify(v)
            };

            function formatArgs() {
                var args = arguments;
                var useColors = this.useColors;
                args[0] = (useColors ? "%c" : "") + this.namespace +
                    (useColors ? " %c" : " ") + args[0] + (
                        useColors ? "%c " : " ") + "+" +
                    exports.humanize(this.diff);
                if (!useColors) return args;
                var c = "color: " + this.color;
                args = [args[0], c, "color: inherit"].concat(
                    Array.prototype.slice.call(args, 1)
                );
                var index = 0;
                var lastC = 0;
                args[0].replace(/%[a-z%]/g, function(match) {
                    if ("%%" === match) return;
                    index++;
                    if ("%c" === match) {
                        lastC = index
                    }
                });
                args.splice(lastC, 0, c);
                return args
            }

            function log() {
                return "object" === typeof console &&
                    console.log && Function.prototype.apply
                    .call(console.log, console, arguments)
            }

            function save(namespaces) {
                try {
                    if (null == namespaces) {
                        exports.storage.removeItem("debug")
                    } else {
                        exports.storage.debug = namespaces
                    }
                } catch (e) {}
            }

            function load() {
                var r;
                try {
                    r = exports.storage.debug
                } catch (e) {}
                return r
            }
            exports.enable(load());

            function localstorage() {
                try {
                    return window.localStorage
                } catch (e) {}
            }
        }, {
            "./debug": 18
        }],
        18: [function(_dereq_, module, exports) {
            exports = module.exports = debug;
            exports.coerce = coerce;
            exports.disable = disable;
            exports.enable = enable;
            exports.enabled = enabled;
            exports.humanize = _dereq_("ms");
            exports.names = [];
            exports.skips = [];
            exports.formatters = {};
            var prevColor = 0;
            var prevTime;

            function selectColor() {
                return exports.colors[prevColor++ % exports
                    .colors.length]
            }

            function debug(namespace) {
                function disabled() {}
                disabled.enabled = false;

                function enabled() {
                    var self = enabled;
                    var curr = +new Date;
                    var ms = curr - (prevTime || curr);
                    self.diff = ms;
                    self.prev = prevTime;
                    self.curr = curr;
                    prevTime = curr;
                    if (null == self.useColors) self.useColors =
                        exports.useColors();
                    if (null == self.color && self.useColors)
                        self.color = selectColor();
                    var args = Array.prototype.slice.call(
                        arguments);
                    args[0] = exports.coerce(args[0]);
                    if ("string" !== typeof args[0]) {
                        args = ["%o"].concat(args)
                    }
                    var index = 0;
                    args[0] = args[0].replace(/%([a-z%])/g,
                        function(match, format) {
                            if (match === "%%") return
                                match;
                            index++;
                            var formatter = exports.formatters[
                                format];
                            if ("function" === typeof formatter) {
                                var val = args[index];
                                match = formatter.call(
                                    self, val);
                                args.splice(index, 1);
                                index--
                            }
                            return match
                        });
                    if ("function" === typeof exports.formatArgs) {
                        args = exports.formatArgs.apply(
                            self, args)
                    }
                    var logFn = enabled.log || exports.log ||
                        console.log.bind(console);
                    logFn.apply(self, args)
                }
                enabled.enabled = true;
                var fn = exports.enabled(namespace) ?
                    enabled : disabled;
                fn.namespace = namespace;
                return fn
            }

            function enable(namespaces) {
                exports.save(namespaces);
                var split = (namespaces || "").split(
                    /[\s,]+/);
                var len = split.length;
                for (var i = 0; i < len; i++) {
                    if (!split[i]) continue;
                    namespaces = split[i].replace(/\*/g,
                        ".*?");
                    if (namespaces[0] === "-") {
                        exports.skips.push(new RegExp("^" +
                            namespaces.substr(1) +
                            "$"))
                    } else {
                        exports.names.push(new RegExp("^" +
                            namespaces + "$"))
                    }
                }
            }

            function disable() {
                exports.enable("")
            }

            function enabled(name) {
                var i, len;
                for (i = 0, len = exports.skips.length; i <
                    len; i++) {
                    if (exports.skips[i].test(name)) {
                        return false
                    }
                }
                for (i = 0, len = exports.names.length; i <
                    len; i++) {
                    if (exports.names[i].test(name)) {
                        return true
                    }
                }
                return false
            }

            function coerce(val) {
                if (val instanceof Error) return val.stack ||
                    val.message;
                return val
            }
        }, {
            ms: 25
        }],
        19: [function(_dereq_, module, exports) {
            (function(global) {
                var keys = _dereq_("./keys");
                var hasBinary = _dereq_("has-binary");
                var sliceBuffer = _dereq_(
                    "arraybuffer.slice");
                var base64encoder = _dereq_(
                    "base64-arraybuffer");
                var after = _dereq_("after");
                var utf8 = _dereq_("utf8");
                var isAndroid = navigator.userAgent.match(
                    /Android/i);
                var isPhantomJS = /PhantomJS/i.test(
                    navigator.userAgent);
                var dontSendBlobs = isAndroid ||
                    isPhantomJS;
                exports.protocol = 3;
                var packets = exports.packets = {
                    open: 0,
                    close: 1,
                    ping: 2,
                    pong: 3,
                    message: 4,
                    upgrade: 5,
                    noop: 6
                };
                var packetslist = keys(packets);
                var err = {
                    type: "error",
                    data: "parser error"
                };
                var Blob = _dereq_("blob");
                exports.encodePacket = function(packet,
                    supportsBinary, utf8encode,
                    callback) {
                    if ("function" == typeof supportsBinary) {
                        callback = supportsBinary;
                        supportsBinary = false
                    }
                    if ("function" == typeof utf8encode) {
                        callback = utf8encode;
                        utf8encode = null
                    }
                    var data = packet.data ===
                        undefined ? undefined :
                        packet.data.buffer ||
                        packet.data;
                    if (global.ArrayBuffer && data instanceof ArrayBuffer) {
                        return encodeArrayBuffer(
                            packet,
                            supportsBinary,
                            callback)
                    } else if (Blob && data instanceof global
                        .Blob) {
                        return encodeBlob(packet,
                            supportsBinary,
                            callback)
                    }
                    if (data && data.base64) {
                        return encodeBase64Object(
                            packet, callback)
                    }
                    var encoded = packets[packet.type];
                    if (undefined !== packet.data) {
                        encoded += utf8encode ?
                            utf8.encode(String(
                                packet.data)) :
                            String(packet.data)
                    }
                    return callback("" + encoded)
                };

                function encodeBase64Object(packet,
                    callback) {
                    var message = "b" + exports.packets[
                        packet.type] + packet.data.data;
                    return callback(message)
                }

                function encodeArrayBuffer(packet,
                    supportsBinary, callback) {
                    if (!supportsBinary) {
                        return exports.encodeBase64Packet(
                            packet, callback)
                    }
                    var data = packet.data;
                    var contentArray = new Uint8Array(
                        data);
                    var resultBuffer = new Uint8Array(1 +
                        data.byteLength);
                    resultBuffer[0] = packets[packet.type];
                    for (var i = 0; i < contentArray.length; i++) {
                        resultBuffer[i + 1] =
                            contentArray[i]
                    }
                    return callback(resultBuffer.buffer)
                }

                function encodeBlobAsArrayBuffer(packet,
                    supportsBinary, callback) {
                    if (!supportsBinary) {
                        return exports.encodeBase64Packet(
                            packet, callback)
                    }
                    var fr = new FileReader;
                    fr.onload = function() {
                        packet.data = fr.result;
                        exports.encodePacket(packet,
                            supportsBinary,
                            true, callback)
                    };
                    return fr.readAsArrayBuffer(packet.data)
                }

                function encodeBlob(packet,
                    supportsBinary, callback) {
                    if (!supportsBinary) {
                        return exports.encodeBase64Packet(
                            packet, callback)
                    }
                    if (dontSendBlobs) {
                        return encodeBlobAsArrayBuffer(
                            packet, supportsBinary,
                            callback)
                    }
                    var length = new Uint8Array(1);
                    length[0] = packets[packet.type];
                    var blob = new Blob([length.buffer,
                        packet.data
                    ]);
                    return callback(blob)
                }
                exports.encodeBase64Packet = function(
                    packet, callback) {
                    var message = "b" + exports.packets[
                        packet.type];
                    if (Blob && packet.data instanceof global
                        .Blob) {
                        var fr = new FileReader;
                        fr.onload = function() {
                            var b64 = fr.result
                                .split(",")[1];
                            callback(message +
                                b64)
                        };
                        return fr.readAsDataURL(
                            packet.data)
                    }
                    var b64data;
                    try {
                        b64data = String.fromCharCode
                            .apply(null, new Uint8Array(
                                packet.data))
                    } catch (e) {
                        var typed = new Uint8Array(
                            packet.data);
                        var basic = new Array(typed
                            .length);
                        for (var i = 0; i < typed.length; i++) {
                            basic[i] = typed[i]
                        }
                        b64data = String.fromCharCode
                            .apply(null, basic)
                    }
                    message += global.btoa(b64data);
                    return callback(message)
                };
                exports.decodePacket = function(data,
                    binaryType, utf8decode) {
                    if (typeof data == "string" ||
                        data === undefined) {
                        if (data.charAt(0) == "b") {
                            return exports.decodeBase64Packet(
                                data.substr(1),
                                binaryType)
                        }
                        if (utf8decode) {
                            try {
                                data = utf8.decode(
                                    data)
                            } catch (e) {
                                return err
                            }
                        }
                        var type = data.charAt(0);
                        if (Number(type) != type ||
                            !packetslist[type]) {
                            return err
                        }
                        if (data.length > 1) {
                            return {
                                type: packetslist[
                                    type],
                                data: data.substring(
                                    1)
                            }
                        } else {
                            return {
                                type: packetslist[
                                    type]
                            }
                        }
                    }
                    var asArray = new Uint8Array(
                        data);
                    var type = asArray[0];
                    var rest = sliceBuffer(data, 1);
                    if (Blob && binaryType ===
                        "blob") {
                        rest = new Blob([rest])
                    }
                    return {
                        type: packetslist[type],
                        data: rest
                    }
                };
                exports.decodeBase64Packet = function(
                    msg, binaryType) {
                    var type = packetslist[msg.charAt(
                        0)];
                    if (!global.ArrayBuffer) {
                        return {
                            type: type,
                            data: {
                                base64: true,
                                data: msg.substr(1)
                            }
                        }
                    }
                    var data = base64encoder.decode(
                        msg.substr(1));
                    if (binaryType === "blob" &&
                        Blob) {
                        data = new Blob([data])
                    }
                    return {
                        type: type,
                        data: data
                    }
                };
                exports.encodePayload = function(
                    packets, supportsBinary,
                    callback) {
                    if (typeof supportsBinary ==
                        "function") {
                        callback = supportsBinary;
                        supportsBinary = null
                    }
                    var isBinary = hasBinary(
                        packets);
                    if (supportsBinary && isBinary) {
                        if (Blob && !dontSendBlobs) {
                            return exports.encodePayloadAsBlob(
                                packets,
                                callback)
                        }
                        return exports.encodePayloadAsArrayBuffer(
                            packets, callback)
                    }
                    if (!packets.length) {
                        return callback("0:")
                    }

                    function setLengthHeader(
                        message) {
                        return message.length + ":" +
                            message
                    }

                    function encodeOne(packet,
                        doneCallback) {
                        exports.encodePacket(packet, !
                            isBinary ? false :
                            supportsBinary,
                            true,
                            function(message) {
                                doneCallback(
                                    null,
                                    setLengthHeader(
                                        message
                                    ))
                            })
                    }
                    map(packets, encodeOne,
                        function(err, results) {
                            return callback(
                                results.join(
                                    ""))
                        })
                };

                function map(ary, each, done) {
                    var result = new Array(ary.length);
                    var next = after(ary.length, done);
                    var eachWithIndex = function(i, el,
                        cb) {
                        each(el, function(error,
                            msg) {
                            result[i] = msg;
                            cb(error,
                                result)
                        })
                    };
                    for (var i = 0; i < ary.length; i++) {
                        eachWithIndex(i, ary[i], next)
                    }
                }
                exports.decodePayload = function(data,
                    binaryType, callback) {
                    if (typeof data != "string") {
                        return exports.decodePayloadAsBinary(
                            data, binaryType,
                            callback)
                    }
                    if (typeof binaryType ===
                        "function") {
                        callback = binaryType;
                        binaryType = null
                    }
                    var packet;
                    if (data == "") {
                        return callback(err, 0, 1)
                    }
                    var length = "",
                        n, msg;
                    for (var i = 0, l = data.length; i <
                        l; i++) {
                        var chr = data.charAt(i);
                        if (":" != chr) {
                            length += chr
                        } else {
                            if ("" == length ||
                                length != (n =
                                    Number(length))
                            ) {
                                return callback(err,
                                    0, 1)
                            }
                            msg = data.substr(i + 1,
                                n);
                            if (length != msg.length) {
                                return callback(err,
                                    0, 1)
                            }
                            if (msg.length) {
                                packet = exports.decodePacket(
                                    msg,
                                    binaryType,
                                    true);
                                if (err.type ==
                                    packet.type &&
                                    err.data ==
                                    packet.data) {
                                    return callback(
                                        err, 0,
                                        1)
                                }
                                var ret = callback(
                                    packet, i +
                                    n, l);
                                if (false === ret)
                                    return
                            }
                            i += n;
                            length = ""
                        }
                    }
                    if (length != "") {
                        return callback(err, 0, 1)
                    }
                };
                exports.encodePayloadAsArrayBuffer =
                    function(packets, callback) {
                        if (!packets.length) {
                            return callback(new ArrayBuffer(
                                0))
                        }

                        function encodeOne(packet,
                            doneCallback) {
                            exports.encodePacket(packet,
                                true, true,
                                function(data) {
                                    return
                                        doneCallback(
                                            null,
                                            data)
                                })
                        }
                        map(packets, encodeOne,
                            function(err,
                                encodedPackets) {
                                var totalLength =
                                    encodedPackets.reduce(
                                        function(
                                            acc, p) {
                                            var len;
                                            if (
                                                typeof p ===
                                                "string"
                                            ) {
                                                len
                                                    =
                                                    p
                                                    .length
                                            } else {
                                                len
                                                    =
                                                    p
                                                    .byteLength
                                            }
                                            return
                                                acc +
                                                len
                                                .toString()
                                                .length +
                                                len +
                                                2
                                        }, 0);
                                var resultArray =
                                    new Uint8Array(
                                        totalLength
                                    );
                                var bufferIndex = 0;
                                encodedPackets.forEach(
                                    function(p) {
                                        var
                                            isString =
                                            typeof p ===
                                            "string";
                                        var ab =
                                            p;
                                        if (
                                            isString
                                        ) {
                                            var
                                                view =
                                                new Uint8Array(
                                                    p
                                                    .length
                                                );
                                            for (
                                                var
                                                    i =
                                                    0; i <
                                                p
                                                .length; i++
                                            ) {
                                                view
                                                    [
                                                        i
                                                    ] =
                                                    p
                                                    .charCodeAt(
                                                        i
                                                    )
                                            }
                                            ab =
                                                view
                                                .buffer
                                        }
                                        if (
                                            isString
                                        ) {
                                            resultArray
                                                [
                                                    bufferIndex++
                                                ] =
                                                0
                                        } else {
                                            resultArray
                                                [
                                                    bufferIndex++
                                                ] =
                                                1
                                        }
                                        var
                                            lenStr =
                                            ab.byteLength
                                            .toString();
                                        for (
                                            var
                                                i =
                                                0; i <
                                            lenStr
                                            .length; i++
                                        ) {
                                            resultArray
                                                [
                                                    bufferIndex++
                                                ] =
                                                parseInt(
                                                    lenStr[
                                                        i
                                                    ]
                                                )
                                        }
                                        resultArray
                                            [
                                                bufferIndex++
                                            ] =
                                            255;
                                        var view =
                                            new Uint8Array(
                                                ab
                                            );
                                        for (
                                            var
                                                i =
                                                0; i <
                                            view
                                            .length; i++
                                        ) {
                                            resultArray
                                                [
                                                    bufferIndex++
                                                ] =
                                                view[
                                                    i
                                                ]
                                        }
                                    });
                                return callback(
                                    resultArray
                                    .buffer)
                            })
                    };
                exports.encodePayloadAsBlob = function(
                    packets, callback) {
                    function encodeOne(packet,
                        doneCallback) {
                        exports.encodePacket(packet,
                            true, true,
                            function(encoded) {
                                var
                                    binaryIdentifier =
                                    new Uint8Array(
                                        1);
                                binaryIdentifier
                                    [0] = 1;
                                if (typeof encoded ===
                                    "string") {
                                    var view =
                                        new Uint8Array(
                                            encoded
                                            .length
                                        );
                                    for (var i =
                                            0; i <
                                        encoded
                                        .length; i++
                                    ) {
                                        view[i] =
                                            encoded
                                            .charCodeAt(
                                                i
                                            )
                                    }
                                    encoded =
                                        view.buffer;
                                    binaryIdentifier
                                        [0] = 0
                                }
                                var len =
                                    encoded instanceof ArrayBuffer ?
                                    encoded.byteLength :
                                    encoded.size;
                                var lenStr =
                                    len.toString();
                                var lengthAry =
                                    new Uint8Array(
                                        lenStr.length +
                                        1);
                                for (var i = 0; i <
                                    lenStr.length; i++
                                ) {
                                    lengthAry[i] =
                                        parseInt(
                                            lenStr[
                                                i
                                            ])
                                }
                                lengthAry[
                                    lenStr.length
                                ] = 255;
                                if (Blob) {
                                    var blob =
                                        new Blob(
                                            [
                                                binaryIdentifier
                                                .buffer,
                                                lengthAry
                                                .buffer,
                                                encoded
                                            ]);
                                    doneCallback
                                        (null,
                                            blob
                                        )
                                }
                            })
                    }
                    map(packets, encodeOne,
                        function(err, results) {
                            return callback(new Blob(
                                results
                            ))
                        })
                };
                exports.decodePayloadAsBinary =
                    function(data, binaryType, callback) {
                        if (typeof binaryType ===
                            "function") {
                            callback = binaryType;
                            binaryType = null
                        }
                        var bufferTail = data;
                        var buffers = [];
                        var numberTooLong = false;
                        while (bufferTail.byteLength >
                            0) {
                            var tailArray = new Uint8Array(
                                bufferTail);
                            var isString = tailArray[0] ===
                                0;
                            var msgLength = "";
                            for (var i = 1;; i++) {
                                if (tailArray[i] == 255)
                                    break;
                                if (msgLength.length >
                                    310) {
                                    numberTooLong =
                                        true;
                                    break
                                }
                                msgLength += tailArray[
                                    i]
                            }
                            if (numberTooLong) return
                                callback(err, 0, 1);
                            bufferTail = sliceBuffer(
                                bufferTail, 2 +
                                msgLength.length);
                            msgLength = parseInt(
                                msgLength);
                            var msg = sliceBuffer(
                                bufferTail, 0,
                                msgLength);
                            if (isString) {
                                try {
                                    msg = String.fromCharCode
                                        .apply(null,
                                            new Uint8Array(
                                                msg))
                                } catch (e) {
                                    var typed = new Uint8Array(
                                        msg);
                                    msg = "";
                                    for (var i = 0; i <
                                        typed.length; i++
                                    ) {
                                        msg += String.fromCharCode(
                                            typed[i]
                                        )
                                    }
                                }
                            }
                            buffers.push(msg);
                            bufferTail = sliceBuffer(
                                bufferTail,
                                msgLength)
                        }
                        var total = buffers.length;
                        buffers.forEach(function(buffer,
                            i) {
                            callback(exports.decodePacket(
                                    buffer,
                                    binaryType,
                                    true),
                                i, total)
                        })
                    }
            }).call(this, typeof self !== "undefined" ?
                self : typeof window !== "undefined" ?
                window : typeof global !== "undefined" ?
                global : {})
        }, {
            "./keys": 20,
            after: 11,
            "arraybuffer.slice": 12,
            "base64-arraybuffer": 13,
            blob: 14,
            "has-binary": 21,
            utf8: 29
        }],
        20: [function(_dereq_, module, exports) {
            module.exports = Object.keys || function keys(
                obj) {
                var arr = [];
                var has = Object.prototype.hasOwnProperty;
                for (var i in obj) {
                    if (has.call(obj, i)) {
                        arr.push(i)
                    }
                }
                return arr
            }
        }, {}],
        21: [function(_dereq_, module, exports) {
            (function(global) {
                var isArray = _dereq_("isarray");
                module.exports = hasBinary;

                function hasBinary(data) {
                    function _hasBinary(obj) {
                        if (!obj) return false;
                        if (global.Buffer && global.Buffer
                            .isBuffer(obj) || global.ArrayBuffer &&
                            obj instanceof ArrayBuffer ||
                            global.Blob && obj instanceof Blob ||
                            global.File && obj instanceof File
                        ) {
                            return true
                        }
                        if (isArray(obj)) {
                            for (var i = 0; i < obj.length; i++) {
                                if (_hasBinary(obj[i])) {
                                    return true
                                }
                            }
                        } else if (obj && "object" ==
                            typeof obj) {
                            if (obj.toJSON) {
                                obj = obj.toJSON()
                            }
                            for (var key in obj) {
                                if (Object.prototype.hasOwnProperty
                                    .call(obj, key) &&
                                    _hasBinary(obj[key])
                                ) {
                                    return true
                                }
                            }
                        }
                        return false
                    }
                    return _hasBinary(data)
                }
            }).call(this, typeof self !== "undefined" ?
                self : typeof window !== "undefined" ?
                window : typeof global !== "undefined" ?
                global : {})
        }, {
            isarray: 24
        }],
        22: [function(_dereq_, module, exports) {
            try {
                module.exports = typeof XMLHttpRequest !==
                    "undefined" && "withCredentials" in new XMLHttpRequest
            } catch (err) {
                module.exports = false
            }
        }, {}],
        23: [function(_dereq_, module, exports) {
            var indexOf = [].indexOf;
            module.exports = function(arr, obj) {
                if (indexOf) return arr.indexOf(obj);
                for (var i = 0; i < arr.length; ++i) {
                    if (arr[i] === obj) return i
                }
                return -1
            }
        }, {}],
        24: [function(_dereq_, module, exports) {
            module.exports = Array.isArray || function(arr) {
                return Object.prototype.toString.call(
                    arr) == "[object Array]"
            }
        }, {}],
        25: [function(_dereq_, module, exports) {
            var s = 1e3;
            var m = s * 60;
            var h = m * 60;
            var d = h * 24;
            var y = d * 365.25;
            module.exports = function(val, options) {
                options = options || {};
                if ("string" == typeof val) return parse(
                    val);
                return options.long ? long(val) : short(
                    val)
            };

            function parse(str) {
                str = "" + str;
                if (str.length > 1e4) return;
                var match =
                    /^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i
                    .exec(str);
                if (!match) return;
                var n = parseFloat(match[1]);
                var type = (match[2] || "ms").toLowerCase();
                switch (type) {
                    case "years":
                    case "year":
                    case "yrs":
                    case "yr":
                    case "y":
                        return n * y;
                    case "days":
                    case "day":
                    case "d":
                        return n * d;
                    case "hours":
                    case "hour":
                    case "hrs":
                    case "hr":
                    case "h":
                        return n * h;
                    case "minutes":
                    case "minute":
                    case "mins":
                    case "min":
                    case "m":
                        return n * m;
                    case "seconds":
                    case "second":
                    case "secs":
                    case "sec":
                    case "s":
                        return n * s;
                    case "milliseconds":
                    case "millisecond":
                    case "msecs":
                    case "msec":
                    case "ms":
                        return n
                }
            }

            function short(ms) {
                if (ms >= d) return Math.round(ms / d) +
                    "d";
                if (ms >= h) return Math.round(ms / h) +
                    "h";
                if (ms >= m) return Math.round(ms / m) +
                    "m";
                if (ms >= s) return Math.round(ms / s) +
                    "s";
                return ms + "ms"
            }

            function long(ms) {
                return plural(ms, d, "day") || plural(ms, h,
                        "hour") || plural(ms, m, "minute") ||
                    plural(ms, s, "second") || ms + " ms"
            }

            function plural(ms, n, name) {
                if (ms < n) return;
                if (ms < n * 1.5) return Math.floor(ms / n) +
                    " " + name;
                return Math.ceil(ms / n) + " " + name + "s"
            }
        }, {}],
        26: [function(_dereq_, module, exports) {
            (function(global) {
                var rvalidchars = /^[\],:{}\s]*$/;
                var rvalidescape =
                    /\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g;
                var rvalidtokens =
                    /"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g;
                var rvalidbraces =
                    /(?:^|:|,)(?:\s*\[)+/g;
                var rtrimLeft = /^\s+/;
                var rtrimRight = /\s+$/;
                module.exports = function parsejson(
                    data) {
                    if ("string" != typeof data ||
                        !data) {
                        return null
                    }
                    data = data.replace(rtrimLeft,
                        "").replace(rtrimRight,
                        "");
                    if (global.JSON && JSON.parse) {
                        return JSON.parse(data)
                    }
                    if (rvalidchars.test(data.replace(
                            rvalidescape, "@").replace(
                            rvalidtokens, "]").replace(
                            rvalidbraces, ""))) {
                        return new Function(
                            "return " + data)()
                    }
                }
            }).call(this, typeof self !== "undefined" ?
                self : typeof window !== "undefined" ?
                window : typeof global !== "undefined" ?
                global : {})
        }, {}],
        27: [function(_dereq_, module, exports) {
            exports.encode = function(obj) {
                var str = "";
                for (var i in obj) {
                    if (obj.hasOwnProperty(i)) {
                        if (str.length) str += "&";
                        str += encodeURIComponent(i) +
                            "=" + encodeURIComponent(
                                obj[i])
                    }
                }
                return str
            };
            exports.decode = function(qs) {
                var qry = {};
                var pairs = qs.split("&");
                for (var i = 0, l = pairs.length; i < l; i++) {
                    var pair = pairs[i].split("=");
                    qry[decodeURIComponent(pair[0])] =
                        decodeURIComponent(pair[1])
                }
                return qry
            }
        }, {}],
        28: [function(_dereq_, module, exports) {
            var re =
                /^(?:(?![^:@]+:[^:@\/]*@)(http|https|ws|wss):\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/;
            var parts = ["source", "protocol", "authority",
                "userInfo", "user", "password", "host",
                "port", "relative", "path", "directory",
                "file", "query", "anchor"
            ];
            module.exports = function parseuri(str) {
                var src = str,
                    b = str.indexOf("["),
                    e = str.indexOf("]");
                if (b != -1 && e != -1) {
                    str = str.substring(0, b) + str.substring(
                            b, e).replace(/:/g, ";") +
                        str.substring(e, str.length)
                }
                var m = re.exec(str || ""),
                    uri = {},
                    i = 14;
                while (i--) {
                    uri[parts[i]] = m[i] || ""
                }
                if (b != -1 && e != -1) {
                    uri.source = src;
                    uri.host = uri.host.substring(1,
                        uri.host.length - 1).replace(
                        /;/g, ":");
                    uri.authority = uri.authority.replace(
                        "[", "").replace("]", "").replace(
                        /;/g, ":");
                    uri.ipv6uri = true
                }
                return uri
            }
        }, {}],
        29: [function(_dereq_, module, exports) {
            (function(global) {
                (function(root) {
                    var freeExports = typeof exports ==
                        "object" && exports;
                    var freeModule = typeof module ==
                        "object" && module &&
                        module.exports ==
                        freeExports && module;
                    var freeGlobal = typeof global ==
                        "object" && global;
                    if (freeGlobal.global ===
                        freeGlobal || freeGlobal.window ===
                        freeGlobal) {
                        root = freeGlobal
                    }
                    var stringFromCharCode = String
                        .fromCharCode;

                    function ucs2decode(string) {
                        var output = [];
                        var counter = 0;
                        var length = string.length;
                        var value;
                        var extra;
                        while (counter < length) {
                            value = string.charCodeAt(
                                counter++);
                            if (value >= 55296 &&
                                value <= 56319 &&
                                counter < length) {
                                extra = string.charCodeAt(
                                    counter++);
                                if ((extra & 64512) ==
                                    56320) {
                                    output.push(((
                                                value &
                                                1023
                                            ) <<
                                            10) +
                                        (extra &
                                            1023
                                        ) +
                                        65536)
                                } else {
                                    output.push(
                                        value);
                                    counter--
                                }
                            } else {
                                output.push(value)
                            }
                        }
                        return output
                    }

                    function ucs2encode(array) {
                        var length = array.length;
                        var index = -1;
                        var value;
                        var output = "";
                        while (++index < length) {
                            value = array[index];
                            if (value > 65535) {
                                value -= 65536;
                                output +=
                                    stringFromCharCode(
                                        value >>>
                                        10 & 1023 |
                                        55296);
                                value = 56320 |
                                    value & 1023
                            }
                            output +=
                                stringFromCharCode(
                                    value)
                        }
                        return output
                    }

                    function checkScalarValue(
                        codePoint) {
                        if (codePoint >= 55296 &&
                            codePoint <= 57343) {
                            throw Error(
                                "Lone surrogate U+" +
                                codePoint.toString(
                                    16).toUpperCase() +
                                " is not a scalar value"
                            )
                        }
                    }

                    function createByte(codePoint,
                        shift) {
                        return stringFromCharCode(
                            codePoint >> shift &
                            63 | 128)
                    }

                    function encodeCodePoint(
                        codePoint) {
                        if ((codePoint & 4294967168) ==
                            0) {
                            return
                                stringFromCharCode(
                                    codePoint)
                        }
                        var symbol = "";
                        if ((codePoint & 4294965248) ==
                            0) {
                            symbol =
                                stringFromCharCode(
                                    codePoint >> 6 &
                                    31 | 192)
                        } else if ((codePoint &
                                4294901760) == 0) {
                            checkScalarValue(
                                codePoint);
                            symbol =
                                stringFromCharCode(
                                    codePoint >> 12 &
                                    15 | 224);
                            symbol += createByte(
                                codePoint, 6)
                        } else if ((codePoint &
                                4292870144) == 0) {
                            symbol =
                                stringFromCharCode(
                                    codePoint >> 18 &
                                    7 | 240);
                            symbol += createByte(
                                codePoint, 12);
                            symbol += createByte(
                                codePoint, 6)
                        }
                        symbol +=
                            stringFromCharCode(
                                codePoint & 63 |
                                128);
                        return symbol
                    }

                    function utf8encode(string) {
                        var codePoints = ucs2decode(
                            string);
                        var length = codePoints.length;
                        var index = -1;
                        var codePoint;
                        var byteString = "";
                        while (++index < length) {
                            codePoint = codePoints[
                                index];
                            byteString +=
                                encodeCodePoint(
                                    codePoint)
                        }
                        return byteString
                    }

                    function readContinuationByte() {
                        if (byteIndex >= byteCount) {
                            throw Error(
                                "Invalid byte index"
                            )
                        }
                        var continuationByte =
                            byteArray[byteIndex] &
                            255;
                        byteIndex++;
                        if ((continuationByte & 192) ==
                            128) {
                            return continuationByte &
                                63
                        }
                        throw Error(
                            "Invalid continuation byte"
                        )
                    }

                    function decodeSymbol() {
                        var byte1;
                        var byte2;
                        var byte3;
                        var byte4;
                        var codePoint;
                        if (byteIndex > byteCount) {
                            throw Error(
                                "Invalid byte index"
                            )
                        }
                        if (byteIndex == byteCount) {
                            return false
                        }
                        byte1 = byteArray[byteIndex] &
                            255;
                        byteIndex++;
                        if ((byte1 & 128) == 0) {
                            return byte1
                        }
                        if ((byte1 & 224) == 192) {
                            var byte2 =
                                readContinuationByte();
                            codePoint = (byte1 & 31) <<
                                6 | byte2;
                            if (codePoint >= 128) {
                                return codePoint
                            } else {
                                throw Error(
                                    "Invalid continuation byte"
                                )
                            }
                        }
                        if ((byte1 & 240) == 224) {
                            byte2 =
                                readContinuationByte();
                            byte3 =
                                readContinuationByte();
                            codePoint = (byte1 & 15) <<
                                12 | byte2 << 6 |
                                byte3;
                            if (codePoint >= 2048) {
                                checkScalarValue(
                                    codePoint);
                                return codePoint
                            } else {
                                throw Error(
                                    "Invalid continuation byte"
                                )
                            }
                        }
                        if ((byte1 & 248) == 240) {
                            byte2 =
                                readContinuationByte();
                            byte3 =
                                readContinuationByte();
                            byte4 =
                                readContinuationByte();
                            codePoint = (byte1 & 15) <<
                                18 | byte2 << 12 |
                                byte3 << 6 | byte4;
                            if (codePoint >= 65536 &&
                                codePoint <=
                                1114111) {
                                return codePoint
                            }
                        }
                        throw Error(
                            "Invalid UTF-8 detected"
                        )
                    }
                    var byteArray;
                    var byteCount;
                    var byteIndex;

                    function utf8decode(byteString) {
                        byteArray = ucs2decode(
                            byteString);
                        byteCount = byteArray.length;
                        byteIndex = 0;
                        var codePoints = [];
                        var tmp;
                        while ((tmp = decodeSymbol()) !==
                            false) {
                            codePoints.push(tmp)
                        }
                        return ucs2encode(
                            codePoints)
                    }
                    var utf8 = {
                        version: "2.0.0",
                        encode: utf8encode,
                        decode: utf8decode
                    };
                    if (typeof define == "function" &&
                        typeof define.amd ==
                        "object" && define.amd) {
                        define(function() {
                            return utf8
                        })
                    } else if (freeExports && !
                        freeExports.nodeType) {
                        if (freeModule) {
                            freeModule.exports =
                                utf8
                        } else {
                            var object = {};
                            var hasOwnProperty =
                                object.hasOwnProperty;
                            for (var key in utf8) {
                                hasOwnProperty.call(
                                        utf8, key) &&
                                    (freeExports[
                                            key] =
                                        utf8[key])
                            }
                        }
                    } else {
                        root.utf8 = utf8
                    }
                })(this)
            }).call(this, typeof self !== "undefined" ?
                self : typeof window !== "undefined" ?
                window : typeof global !== "undefined" ?
                global : {})
        }, {}],
        30: [function(_dereq_, module, exports) {
            "use strict";
            var alphabet =
                "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_"
                .split(""),
                length = 64,
                map = {},
                seed = 0,
                i = 0,
                prev;

            function encode(num) {
                var encoded = "";
                do {
                    encoded = alphabet[num % length] +
                        encoded;
                    num = Math.floor(num / length)
                } while (num > 0);
                return encoded
            }

            function decode(str) {
                var decoded = 0;
                for (i = 0; i < str.length; i++) {
                    decoded = decoded * length + map[str.charAt(
                        i)]
                }
                return decoded
            }

            function yeast() {
                var now = encode(+new Date);
                if (now !== prev) return seed = 0, prev =
                    now;
                return now + "." + encode(seed++)
            }
            for (; i < length; i++) map[alphabet[i]] = i;
            yeast.encode = encode;
            yeast.decode = decode;
            module.exports = yeast
        }, {}],
        31: [function(_dereq_, module, exports) {
            var url = _dereq_("./url");
            var parser = _dereq_("socket.io-parser");
            var Manager = _dereq_("./manager");
            var debug = _dereq_("debug")("socket.io-client");
            module.exports = exports = lookup;
            var cache = exports.managers = {};

            function lookup(uri, opts) {
                if (typeof uri == "object") {
                    opts = uri;
                    uri = undefined
                }
                opts = opts || {};
                var parsed = url(uri);
                var source = parsed.source;
                var id = parsed.id;
                var path = parsed.path;
                var sameNamespace = cache[id] && path in
                    cache[id].nsps;
                var newConnection = opts.forceNew || opts[
                        "force new connection"] || false ===
                    opts.multiplex || sameNamespace;
                var io;
                if (newConnection) {
                    debug("ignoring socket cache for %s",
                        source);
                    io = Manager(source, opts)
                } else {
                    if (!cache[id]) {
                        debug("new io instance for %s",
                            source);
                        cache[id] = Manager(source, opts)
                    }
                    io = cache[id]
                }
                return io.socket(parsed.path)
            }
            exports.protocol = parser.protocol;
            exports.connect = lookup;
            exports.Manager = _dereq_("./manager");
            exports.Socket = _dereq_("./socket")
        }, {
            "./manager": 32,
            "./socket": 34,
            "./url": 35,
            debug: 39,
            "socket.io-parser": 47
        }],
        32: [function(_dereq_, module, exports) {
            var eio = _dereq_("engine.io-client");
            var Socket = _dereq_("./socket");
            var Emitter = _dereq_("component-emitter");
            var parser = _dereq_("socket.io-parser");
            var on = _dereq_("./on");
            var bind = _dereq_("component-bind");
            var debug = _dereq_("debug")(
                "socket.io-client:manager");
            var indexOf = _dereq_("indexof");
            var Backoff = _dereq_("backo2");
            var has = Object.prototype.hasOwnProperty;
            module.exports = Manager;

            function Manager(uri, opts) {
                if (!(this instanceof Manager)) return new Manager(
                    uri, opts);
                if (uri && "object" == typeof uri) {
                    opts = uri;
                    uri = undefined
                }
                opts = opts || {};
                opts.path = opts.path || "/socket.io";
                this.nsps = {};
                this.subs = [];
                this.opts = opts;
                this.reconnection(opts.reconnection !==
                    false);
                this.reconnectionAttempts(opts.reconnectionAttempts ||
                    Infinity);
                this.reconnectionDelay(opts.reconnectionDelay ||
                    1e3);
                this.reconnectionDelayMax(opts.reconnectionDelayMax ||
                    5e3);
                this.randomizationFactor(opts.randomizationFactor ||
                    .5);
                this.backoff = new Backoff({
                    min: this.reconnectionDelay(),
                    max: this.reconnectionDelayMax(),
                    jitter: this.randomizationFactor()
                });
                this.timeout(null == opts.timeout ? 2e4 :
                    opts.timeout);
                this.readyState = "closed";
                this.uri = uri;
                this.connecting = [];
                this.lastPing = null;
                this.encoding = false;
                this.packetBuffer = [];
                this.encoder = new parser.Encoder;
                this.decoder = new parser.Decoder;
                this.autoConnect = opts.autoConnect !==
                    false;
                if (this.autoConnect) this.open()
            }
            Manager.prototype.emitAll = function() {
                this.emit.apply(this, arguments);
                for (var nsp in this.nsps) {
                    if (has.call(this.nsps, nsp)) {
                        this.nsps[nsp].emit.apply(this.nsps[
                            nsp], arguments)
                    }
                }
            };
            Manager.prototype.updateSocketIds = function() {
                for (var nsp in this.nsps) {
                    if (has.call(this.nsps, nsp)) {
                        this.nsps[nsp].id = this.engine
                            .id
                    }
                }
            };
            Emitter(Manager.prototype);
            Manager.prototype.reconnection = function(v) {
                if (!arguments.length) return this._reconnection;
                this._reconnection = !!v;
                return this
            };
            Manager.prototype.reconnectionAttempts =
                function(v) {
                    if (!arguments.length) return this._reconnectionAttempts;
                    this._reconnectionAttempts = v;
                    return this
                };
            Manager.prototype.reconnectionDelay = function(
                v) {
                if (!arguments.length) return this._reconnectionDelay;
                this._reconnectionDelay = v;
                this.backoff && this.backoff.setMin(v);
                return this
            };
            Manager.prototype.randomizationFactor =
                function(v) {
                    if (!arguments.length) return this._randomizationFactor;
                    this._randomizationFactor = v;
                    this.backoff && this.backoff.setJitter(
                        v);
                    return this
                };
            Manager.prototype.reconnectionDelayMax =
                function(v) {
                    if (!arguments.length) return this._reconnectionDelayMax;
                    this._reconnectionDelayMax = v;
                    this.backoff && this.backoff.setMax(v);
                    return this
                };
            Manager.prototype.timeout = function(v) {
                if (!arguments.length) return this._timeout;
                this._timeout = v;
                return this
            };
            Manager.prototype.maybeReconnectOnOpen =
                function() {
                    if (!this.reconnecting && this._reconnection &&
                        this.backoff.attempts === 0) {
                        this.reconnect()
                    }
                };
            Manager.prototype.open = Manager.prototype.connect =
                function(fn) {
                    debug("readyState %s", this.readyState);
                    if (~this.readyState.indexOf("open"))
                        return this;
                    debug("opening %s", this.uri);
                    this.engine = eio(this.uri, this.opts);
                    var socket = this.engine;
                    var self = this;
                    this.readyState = "opening";
                    this.skipReconnect = false;
                    var openSub = on(socket, "open",
                        function() {
                            self.onopen();
                            fn && fn()
                        });
                    var errorSub = on(socket, "error",
                        function(data) {
                            debug("connect_error");
                            self.cleanup();
                            self.readyState = "closed";
                            self.emitAll(
                                "connect_error",
                                data);
                            if (fn) {
                                var err = new Error(
                                    "Connection error"
                                );
                                err.data = data;
                                fn(err)
                            } else {
                                self.maybeReconnectOnOpen()
                            }
                        });
                    if (false !== this._timeout) {
                        var timeout = this._timeout;
                        debug(
                            "connect attempt will timeout after %d",
                            timeout);
                        var timer = setTimeout(function() {
                            debug(
                                "connect attempt timed out after %d",
                                timeout);
                            openSub.destroy();
                            socket.close();
                            socket.emit("error",
                                "timeout");
                            self.emitAll(
                                "connect_timeout",
                                timeout)
                        }, timeout);
                        this.subs.push({
                            destroy: function() {
                                clearTimeout(
                                    timer)
                            }
                        })
                    }
                    this.subs.push(openSub);
                    this.subs.push(errorSub);
                    return this
                };
            Manager.prototype.onopen = function() {
                debug("open");
                this.cleanup();
                this.readyState = "open";
                this.emit("open");
                var socket = this.engine;
                this.subs.push(on(socket, "data", bind(
                    this, "ondata")));
                this.subs.push(on(socket, "ping", bind(
                    this, "onping")));
                this.subs.push(on(socket, "pong", bind(
                    this, "onpong")));
                this.subs.push(on(socket, "error", bind(
                    this, "onerror")));
                this.subs.push(on(socket, "close", bind(
                    this, "onclose")));
                this.subs.push(on(this.decoder,
                    "decoded", bind(this,
                        "ondecoded")))
            };
            Manager.prototype.onping = function() {
                this.lastPing = new Date;
                this.emitAll("ping")
            };
            Manager.prototype.onpong = function() {
                this.emitAll("pong", new Date - this.lastPing)
            };
            Manager.prototype.ondata = function(data) {
                this.decoder.add(data)
            };
            Manager.prototype.ondecoded = function(packet) {
                this.emit("packet", packet)
            };
            Manager.prototype.onerror = function(err) {
                debug("error", err);
                this.emitAll("error", err)
            };
            Manager.prototype.socket = function(nsp) {
                var socket = this.nsps[nsp];
                if (!socket) {
                    socket = new Socket(this, nsp);
                    this.nsps[nsp] = socket;
                    var self = this;
                    socket.on("connecting",
                        onConnecting);
                    socket.on("connect", function() {
                        socket.id = self.engine
                            .id
                    });
                    if (this.autoConnect) {
                        onConnecting()
                    }
                }

                function onConnecting() {
                    if (!~indexOf(self.connecting,
                            socket)) {
                        self.connecting.push(socket)
                    }
                }
                return socket
            };
            Manager.prototype.destroy = function(socket) {
                var index = indexOf(this.connecting,
                    socket);
                if (~index) this.connecting.splice(
                    index, 1);
                if (this.connecting.length) return;
                this.close()
            };
            Manager.prototype.packet = function(packet) {
                debug("writing packet %j", packet);
                var self = this;
                if (!self.encoding) {
                    self.encoding = true;
                    this.encoder.encode(packet,
                        function(encodedPackets) {
                            for (var i = 0; i <
                                encodedPackets.length; i++
                            ) {
                                self.engine.write(
                                    encodedPackets[
                                        i],
                                    packet.options
                                )
                            }
                            self.encoding = false;
                            self.processPacketQueue()
                        })
                } else {
                    self.packetBuffer.push(packet)
                }
            };
            Manager.prototype.processPacketQueue = function() {
                if (this.packetBuffer.length > 0 && !
                    this.encoding) {
                    var pack = this.packetBuffer.shift();
                    this.packet(pack)
                }
            };
            Manager.prototype.cleanup = function() {
                debug("cleanup");
                var sub;
                while (sub = this.subs.shift()) sub.destroy();
                this.packetBuffer = [];
                this.encoding = false;
                this.lastPing = null;
                this.decoder.destroy()
            };
            Manager.prototype.close = Manager.prototype.disconnect =
                function() {
                    debug("disconnect");
                    this.skipReconnect = true;
                    this.reconnecting = false;
                    if ("opening" == this.readyState) {
                        this.cleanup()
                    }
                    this.backoff.reset();
                    this.readyState = "closed";
                    if (this.engine) this.engine.close()
                };
            Manager.prototype.onclose = function(reason) {
                debug("onclose");
                this.cleanup();
                this.backoff.reset();
                this.readyState = "closed";
                this.emit("close", reason);
                if (this._reconnection && !this.skipReconnect) {
                    this.reconnect()
                }
            };
            Manager.prototype.reconnect = function() {
                if (this.reconnecting || this.skipReconnect)
                    return this;
                var self = this;
                if (this.backoff.attempts >= this._reconnectionAttempts) {
                    debug("reconnect failed");
                    this.backoff.reset();
                    this.emitAll("reconnect_failed");
                    this.reconnecting = false
                } else {
                    var delay = this.backoff.duration();
                    debug(
                        "will wait %dms before reconnect attempt",
                        delay);
                    this.reconnecting = true;
                    var timer = setTimeout(function() {
                        if (self.skipReconnect)
                            return;
                        debug(
                            "attempting reconnect"
                        );
                        self.emitAll(
                            "reconnect_attempt",
                            self.backoff.attempts
                        );
                        self.emitAll(
                            "reconnecting",
                            self.backoff.attempts
                        );
                        if (self.skipReconnect)
                            return;
                        self.open(function(err) {
                            if (err) {
                                debug(
                                    "reconnect attempt error"
                                );
                                self.reconnecting =
                                    false;
                                self.reconnect();
                                self.emitAll(
                                    "reconnect_error",
                                    err
                                    .data
                                )
                            } else {
                                debug(
                                    "reconnect success"
                                );
                                self.onreconnect()
                            }
                        })
                    }, delay);
                    this.subs.push({
                        destroy: function() {
                            clearTimeout(
                                timer)
                        }
                    })
                }
            };
            Manager.prototype.onreconnect = function() {
                var attempt = this.backoff.attempts;
                this.reconnecting = false;
                this.backoff.reset();
                this.updateSocketIds();
                this.emitAll("reconnect", attempt)
            }
        }, {
            "./on": 33,
            "./socket": 34,
            backo2: 36,
            "component-bind": 37,
            "component-emitter": 38,
            debug: 39,
            "engine.io-client": 1,
            indexof: 42,
            "socket.io-parser": 47
        }],
        33: [function(_dereq_, module, exports) {
            module.exports = on;

            function on(obj, ev, fn) {
                obj.on(ev, fn);
                return {
                    destroy: function() {
                        obj.removeListener(ev, fn)
                    }
                }
            }
        }, {}],
        34: [function(_dereq_, module, exports) {
            var parser = _dereq_("socket.io-parser");
            var Emitter = _dereq_("component-emitter");
            var toArray = _dereq_("to-array");
            var on = _dereq_("./on");
            var bind = _dereq_("component-bind");
            var debug = _dereq_("debug")(
                "socket.io-client:socket");
            var hasBin = _dereq_("has-binary");
            module.exports = exports = Socket;
            var events = {
                connect: 1,
                connect_error: 1,
                connect_timeout: 1,
                connecting: 1,
                disconnect: 1,
                error: 1,
                reconnect: 1,
                reconnect_attempt: 1,
                reconnect_failed: 1,
                reconnect_error: 1,
                reconnecting: 1,
                ping: 1,
                pong: 1
            };
            var emit = Emitter.prototype.emit;

            function Socket(io, nsp) {
                this.io = io;
                this.nsp = nsp;
                this.json = this;
                this.ids = 0;
                this.acks = {};
                this.receiveBuffer = [];
                this.sendBuffer = [];
                this.connected = false;
                this.disconnected = true;
                if (this.io.autoConnect) this.open()
            }
            Emitter(Socket.prototype);
            Socket.prototype.subEvents = function() {
                if (this.subs) return;
                var io = this.io;
                this.subs = [on(io, "open", bind(this,
                    "onopen")), on(io, "packet",
                    bind(this, "onpacket")), on(
                    io, "close", bind(this,
                        "onclose"))]
            };
            Socket.prototype.open = Socket.prototype.connect =
                function() {
                    if (this.connected) return this;
                    this.subEvents();
                    this.io.open();
                    if ("open" == this.io.readyState) this.onopen();
                    this.emit("connecting");
                    return this
                };
            Socket.prototype.send = function() {
                var args = toArray(arguments);
                args.unshift("message");
                this.emit.apply(this, args);
                return this
            };
            Socket.prototype.emit = function(ev) {
                if (events.hasOwnProperty(ev)) {
                    emit.apply(this, arguments);
                    return this
                }
                var args = toArray(arguments);
                var parserType = parser.EVENT;
                if (hasBin(args)) {
                    parserType = parser.BINARY_EVENT
                }
                var packet = {
                    type: parserType,
                    data: args
                };
                packet.options = {};
                packet.options.compress = !this.flags ||
                    false !== this.flags.compress;
                if ("function" == typeof args[args.length -
                        1]) {
                    debug(
                        "emitting packet with ack id %d",
                        this.ids);
                    this.acks[this.ids] = args.pop();
                    packet.id = this.ids++
                }
                if (this.connected) {
                    this.packet(packet)
                } else {
                    this.sendBuffer.push(packet)
                }
                delete this.flags;
                return this
            };
            Socket.prototype.packet = function(packet) {
                packet.nsp = this.nsp;
                this.io.packet(packet)
            };
            Socket.prototype.onopen = function() {
                debug("transport is open - connecting");
                if ("/" != this.nsp) {
                    this.packet({
                        type: parser.CONNECT
                    })
                }
            };
            Socket.prototype.onclose = function(reason) {
                debug("close (%s)", reason);
                this.connected = false;
                this.disconnected = true;
                delete this.id;
                this.emit("disconnect", reason)
            };
            Socket.prototype.onpacket = function(packet) {
                if (packet.nsp != this.nsp) return;
                switch (packet.type) {
                    case parser.CONNECT:
                        this.onconnect();
                        break;
                    case parser.EVENT:
                        this.onevent(packet);
                        break;
                    case parser.BINARY_EVENT:
                        this.onevent(packet);
                        break;
                    case parser.ACK:
                        this.onack(packet);
                        break;
                    case parser.BINARY_ACK:
                        this.onack(packet);
                        break;
                    case parser.DISCONNECT:
                        this.ondisconnect();
                        break;
                    case parser.ERROR:
                        this.emit("error", packet.data);
                        break
                }
            };
            Socket.prototype.onevent = function(packet) {
                var args = packet.data || [];
                debug("emitting event %j", args);
                if (null != packet.id) {
                    debug(
                        "attaching ack callback to event"
                    );
                    args.push(this.ack(packet.id))
                }
                if (this.connected) {
                    emit.apply(this, args)
                } else {
                    this.receiveBuffer.push(args)
                }
            };
            Socket.prototype.ack = function(id) {
                var self = this;
                var sent = false;
                return function() {
                    if (sent) return;
                    sent = true;
                    var args = toArray(arguments);
                    debug("sending ack %j", args);
                    var type = hasBin(args) ?
                        parser.BINARY_ACK : parser.ACK;
                    self.packet({
                        type: type,
                        id: id,
                        data: args
                    })
                }
            };
            Socket.prototype.onack = function(packet) {
                var ack = this.acks[packet.id];
                if ("function" == typeof ack) {
                    debug("calling ack %s with %j",
                        packet.id, packet.data);
                    ack.apply(this, packet.data);
                    delete this.acks[packet.id]
                } else {
                    debug("bad ack %s", packet.id)
                }
            };
            Socket.prototype.onconnect = function() {
                this.connected = true;
                this.disconnected = false;
                this.emit("connect");
                this.emitBuffered()
            };
            Socket.prototype.emitBuffered = function() {
                var i;
                for (i = 0; i < this.receiveBuffer.length; i++) {
                    emit.apply(this, this.receiveBuffer[
                        i])
                }
                this.receiveBuffer = [];
                for (i = 0; i < this.sendBuffer.length; i++) {
                    this.packet(this.sendBuffer[i])
                }
                this.sendBuffer = []
            };
            Socket.prototype.ondisconnect = function() {
                debug("server disconnect (%s)", this.nsp);
                this.destroy();
                this.onclose("io server disconnect")
            };
            Socket.prototype.destroy = function() {
                if (this.subs) {
                    for (var i = 0; i < this.subs.length; i++) {
                        this.subs[i].destroy()
                    }
                    this.subs = null
                }
                this.io.destroy(this)
            };
            Socket.prototype.close = Socket.prototype.disconnect =
                function() {
                    if (this.connected) {
                        debug("performing disconnect (%s)",
                            this.nsp);
                        this.packet({
                            type: parser.DISCONNECT
                        })
                    }
                    this.destroy();
                    if (this.connected) {
                        this.onclose("io client disconnect")
                    }
                    return this
                };
            Socket.prototype.compress = function(compress) {
                this.flags = this.flags || {};
                this.flags.compress = compress;
                return this
            }
        }, {
            "./on": 33,
            "component-bind": 37,
            "component-emitter": 38,
            debug: 39,
            "has-binary": 41,
            "socket.io-parser": 47,
            "to-array": 51
        }],
        35: [function(_dereq_, module, exports) {
            (function(global) {
                var parseuri = _dereq_("parseuri");
                var debug = _dereq_("debug")(
                    "socket.io-client:url");
                module.exports = url;

                function url(uri, loc) {
                    var obj = uri;
                    var loc = loc || global.location;
                    if (null == uri) uri = loc.protocol +
                        "//" + loc.host;
                    if ("string" == typeof uri) {
                        if ("/" == uri.charAt(0)) {
                            if ("/" == uri.charAt(1)) {
                                uri = loc.protocol +
                                    uri
                            } else {
                                uri = loc.host + uri
                            }
                        }
                        if (!/^(https?|wss?):\/\//.test(
                                uri)) {
                            debug(
                                "protocol-less url %s",
                                uri);
                            if ("undefined" != typeof loc) {
                                uri = loc.protocol +
                                    "//" + uri
                            } else {
                                uri = "https://" + uri
                            }
                        }
                        debug("parse %s", uri);
                        obj = parseuri(uri)
                    }
                    if (!obj.port) {
                        if (/^(http|ws)$/.test(obj.protocol)) {
                            obj.port = "80"
                        } else if (/^(http|ws)s$/.test(
                                obj.protocol)) {
                            obj.port = "443"
                        }
                    }
                    obj.path = obj.path || "/";
                    var ipv6 = obj.host.indexOf(":") !==
                        -1;
                    var host = ipv6 ? "[" + obj.host +
                        "]" : obj.host;
                    obj.id = obj.protocol + "://" +
                        host + ":" + obj.port;
                    obj.href = obj.protocol + "://" +
                        host + (loc && loc.port == obj.port ?
                            "" : ":" + obj.port);
                    return obj
                }
            }).call(this, typeof self !== "undefined" ?
                self : typeof window !== "undefined" ?
                window : typeof global !== "undefined" ?
                global : {})
        }, {
            debug: 39,
            parseuri: 45
        }],
        36: [function(_dereq_, module, exports) {
            module.exports = Backoff;

            function Backoff(opts) {
                opts = opts || {};
                this.ms = opts.min || 100;
                this.max = opts.max || 1e4;
                this.factor = opts.factor || 2;
                this.jitter = opts.jitter > 0 && opts.jitter <=
                    1 ? opts.jitter : 0;
                this.attempts = 0
            }
            Backoff.prototype.duration = function() {
                var ms = this.ms * Math.pow(this.factor,
                    this.attempts++);
                if (this.jitter) {
                    var rand = Math.random();
                    var deviation = Math.floor(rand *
                        this.jitter * ms);
                    ms = (Math.floor(rand * 10) & 1) ==
                        0 ? ms - deviation : ms +
                        deviation
                }
                return Math.min(ms, this.max) | 0
            };
            Backoff.prototype.reset = function() {
                this.attempts = 0
            };
            Backoff.prototype.setMin = function(min) {
                this.ms = min
            };
            Backoff.prototype.setMax = function(max) {
                this.max = max
            };
            Backoff.prototype.setJitter = function(jitter) {
                this.jitter = jitter
            }
        }, {}],
        37: [function(_dereq_, module, exports) {
            var slice = [].slice;
            module.exports = function(obj, fn) {
                if ("string" == typeof fn) fn = obj[fn];
                if ("function" != typeof fn) throw new Error(
                    "bind() requires a function");
                var args = slice.call(arguments, 2);
                return function() {
                    return fn.apply(obj, args.concat(
                        slice.call(
                            arguments)))
                }
            }
        }, {}],
        38: [function(_dereq_, module, exports) {
            module.exports = Emitter;

            function Emitter(obj) {
                if (obj) return mixin(obj)
            }

            function mixin(obj) {
                for (var key in Emitter.prototype) {
                    obj[key] = Emitter.prototype[key]
                }
                return obj
            }
            Emitter.prototype.on = Emitter.prototype.addEventListener =
                function(event, fn) {
                    this._callbacks = this._callbacks || {};
                    (this._callbacks["$" + event] = this._callbacks[
                        "$" + event] || []).push(fn);
                    return this
                };
            Emitter.prototype.once = function(event, fn) {
                function on() {
                    this.off(event, on);
                    fn.apply(this, arguments)
                }
                on.fn = fn;
                this.on(event, on);
                return this
            };
            Emitter.prototype.off = Emitter.prototype.removeListener =
                Emitter.prototype.removeAllListeners =
                Emitter.prototype.removeEventListener =
                function(event, fn) {
                    this._callbacks = this._callbacks || {};
                    if (0 == arguments.length) {
                        this._callbacks = {};
                        return this
                    }
                    var callbacks = this._callbacks["$" +
                        event];
                    if (!callbacks) return this;
                    if (1 == arguments.length) {
                        delete this._callbacks["$" + event];
                        return this
                    }
                    var cb;
                    for (var i = 0; i < callbacks.length; i++) {
                        cb = callbacks[i];
                        if (cb === fn || cb.fn === fn) {
                            callbacks.splice(i, 1);
                            break
                        }
                    }
                    return this
                };
            Emitter.prototype.emit = function(event) {
                this._callbacks = this._callbacks || {};
                var args = [].slice.call(arguments, 1),
                    callbacks = this._callbacks["$" +
                        event];
                if (callbacks) {
                    callbacks = callbacks.slice(0);
                    for (var i = 0, len = callbacks.length; i <
                        len; ++i) {
                        callbacks[i].apply(this, args)
                    }
                }
                return this
            };
            Emitter.prototype.listeners = function(event) {
                this._callbacks = this._callbacks || {};
                return this._callbacks["$" + event] || []
            };
            Emitter.prototype.hasListeners = function(event) {
                return !!this.listeners(event).length
            }
        }, {}],
        39: [function(_dereq_, module, exports) {
            arguments[4][17][0].apply(exports, arguments)
        }, {
            "./debug": 40,
            dup: 17
        }],
        40: [function(_dereq_, module, exports) {
            arguments[4][18][0].apply(exports, arguments)
        }, {
            dup: 18,
            ms: 44
        }],
        41: [function(_dereq_, module, exports) {
            (function(global) {
                var isArray = _dereq_("isarray");
                module.exports = hasBinary;

                function hasBinary(data) {
                    function _hasBinary(obj) {
                        if (!obj) return false;
                        if (global.Buffer && global.Buffer
                            .isBuffer && global.Buffer.isBuffer(
                                obj) || global.ArrayBuffer &&
                            obj instanceof ArrayBuffer ||
                            global.Blob && obj instanceof Blob ||
                            global.File && obj instanceof File
                        ) {
                            return true
                        }
                        if (isArray(obj)) {
                            for (var i = 0; i < obj.length; i++) {
                                if (_hasBinary(obj[i])) {
                                    return true
                                }
                            }
                        } else if (obj && "object" ==
                            typeof obj) {
                            if (obj.toJSON &&
                                "function" == typeof obj
                                .toJSON) {
                                obj = obj.toJSON()
                            }
                            for (var key in obj) {
                                if (Object.prototype.hasOwnProperty
                                    .call(obj, key) &&
                                    _hasBinary(obj[key])
                                ) {
                                    return true
                                }
                            }
                        }
                        return false
                    }
                    return _hasBinary(data)
                }
            }).call(this, typeof self !== "undefined" ?
                self : typeof window !== "undefined" ?
                window : typeof global !== "undefined" ?
                global : {})
        }, {
            isarray: 43
        }],
        42: [function(_dereq_, module, exports) {
            arguments[4][23][0].apply(exports, arguments)
        }, {
            dup: 23
        }],
        43: [function(_dereq_, module, exports) {
            arguments[4][24][0].apply(exports, arguments)
        }, {
            dup: 24
        }],
        44: [function(_dereq_, module, exports) {
            arguments[4][25][0].apply(exports, arguments)
        }, {
            dup: 25
        }],
        45: [function(_dereq_, module, exports) {
            arguments[4][28][0].apply(exports, arguments)
        }, {
            dup: 28
        }],
        46: [function(_dereq_, module, exports) {
            (function(global) {
                var isArray = _dereq_("isarray");
                var isBuf = _dereq_("./is-buffer");
                exports.deconstructPacket = function(
                    packet) {
                    var buffers = [];
                    var packetData = packet.data;

                    function _deconstructPacket(
                        data) {
                        if (!data) return data;
                        if (isBuf(data)) {
                            var placeholder = {
                                _placeholder: true,
                                num: buffers.length
                            };
                            buffers.push(data);
                            return placeholder
                        } else if (isArray(data)) {
                            var newData = new Array(
                                data.length);
                            for (var i = 0; i <
                                data.length; i++) {
                                newData[i] =
                                    _deconstructPacket(
                                        data[i])
                            }
                            return newData
                        } else if ("object" ==
                            typeof data && !(data instanceof Date)
                        ) {
                            var newData = {};
                            for (var key in data) {
                                newData[key] =
                                    _deconstructPacket(
                                        data[key])
                            }
                            return newData
                        }
                        return data
                    }
                    var pack = packet;
                    pack.data = _deconstructPacket(
                        packetData);
                    pack.attachments = buffers.length;
                    return {
                        packet: pack,
                        buffers: buffers
                    }
                };
                exports.reconstructPacket = function(
                    packet, buffers) {
                    var curPlaceHolder = 0;

                    function _reconstructPacket(
                        data) {
                        if (data && data._placeholder) {
                            var buf = buffers[data.num];
                            return buf
                        } else if (isArray(data)) {
                            for (var i = 0; i <
                                data.length; i++) {
                                data[i] =
                                    _reconstructPacket(
                                        data[i])
                            }
                            return data
                        } else if (data && "object" ==
                            typeof data) {
                            for (var key in data) {
                                data[key] =
                                    _reconstructPacket(
                                        data[key])
                            }
                            return data
                        }
                        return data
                    }
                    packet.data =
                        _reconstructPacket(packet.data);
                    packet.attachments = undefined;
                    return packet
                };
                exports.removeBlobs = function(data,
                    callback) {
                    function _removeBlobs(obj,
                        curKey, containingObject) {
                        if (!obj) return obj;
                        if (global.Blob && obj instanceof Blob ||
                            global.File && obj instanceof File
                        ) {
                            pendingBlobs++;
                            var fileReader = new FileReader;
                            fileReader.onload =
                                function() {
                                    if (
                                        containingObject
                                    ) {
                                        containingObject
                                            [curKey] =
                                            this.result
                                    } else {
                                        bloblessData
                                            = this.result
                                    }
                                    if (!--
                                        pendingBlobs
                                    ) {
                                        callback(
                                            bloblessData
                                        )
                                    }
                                };
                            fileReader.readAsArrayBuffer(
                                obj)
                        } else if (isArray(obj)) {
                            for (var i = 0; i < obj
                                .length; i++) {
                                _removeBlobs(obj[i],
                                    i, obj)
                            }
                        } else if (obj && "object" ==
                            typeof obj && !isBuf(
                                obj)) {
                            for (var key in obj) {
                                _removeBlobs(obj[
                                        key],
                                    key, obj)
                            }
                        }
                    }
                    var pendingBlobs = 0;
                    var bloblessData = data;
                    _removeBlobs(bloblessData);
                    if (!pendingBlobs) {
                        callback(bloblessData)
                    }
                }
            }).call(this, typeof self !== "undefined" ?
                self : typeof window !== "undefined" ?
                window : typeof global !== "undefined" ?
                global : {})
        }, {
            "./is-buffer": 48,
            isarray: 43
        }],
        47: [function(_dereq_, module, exports) {
            var debug = _dereq_("debug")("socket.io-parser");
            var json = _dereq_("json3");
            var isArray = _dereq_("isarray");
            var Emitter = _dereq_("component-emitter");
            var binary = _dereq_("./binary");
            var isBuf = _dereq_("./is-buffer");
            exports.protocol = 4;
            exports.types = ["CONNECT", "DISCONNECT",
                "EVENT", "BINARY_EVENT", "ACK",
                "BINARY_ACK", "ERROR"
            ];
            exports.CONNECT = 0;
            exports.DISCONNECT = 1;
            exports.EVENT = 2;
            exports.ACK = 3;
            exports.ERROR = 4;
            exports.BINARY_EVENT = 5;
            exports.BINARY_ACK = 6;
            exports.Encoder = Encoder;
            exports.Decoder = Decoder;

            function Encoder() {}
            Encoder.prototype.encode = function(obj,
                callback) {
                debug("encoding packet %j", obj);
                if (exports.BINARY_EVENT == obj.type ||
                    exports.BINARY_ACK == obj.type) {
                    encodeAsBinary(obj, callback)
                } else {
                    var encoding = encodeAsString(obj);
                    callback([encoding])
                }
            };

            function encodeAsString(obj) {
                var str = "";
                var nsp = false;
                str += obj.type;
                if (exports.BINARY_EVENT == obj.type ||
                    exports.BINARY_ACK == obj.type) {
                    str += obj.attachments;
                    str += "-"
                }
                if (obj.nsp && "/" != obj.nsp) {
                    nsp = true;
                    str += obj.nsp
                }
                if (null != obj.id) {
                    if (nsp) {
                        str += ",";
                        nsp = false
                    }
                    str += obj.id
                }
                if (null != obj.data) {
                    if (nsp) str += ",";
                    str += json.stringify(obj.data)
                }
                debug("encoded %j as %s", obj, str);
                return str
            }

            function encodeAsBinary(obj, callback) {
                function writeEncoding(bloblessData) {
                    var deconstruction = binary.deconstructPacket(
                        bloblessData);
                    var pack = encodeAsString(
                        deconstruction.packet);
                    var buffers = deconstruction.buffers;
                    buffers.unshift(pack);
                    callback(buffers)
                }
                binary.removeBlobs(obj, writeEncoding)
            }

            function Decoder() {
                this.reconstructor = null
            }
            Emitter(Decoder.prototype);
            Decoder.prototype.add = function(obj) {
                var packet;
                if ("string" == typeof obj) {
                    packet = decodeString(obj);
                    if (exports.BINARY_EVENT == packet.type ||
                        exports.BINARY_ACK == packet.type
                    ) {
                        this.reconstructor = new BinaryReconstructor(
                            packet);
                        if (this.reconstructor.reconPack
                            .attachments === 0) {
                            this.emit("decoded", packet)
                        }
                    } else {
                        this.emit("decoded", packet)
                    }
                } else if (isBuf(obj) || obj.base64) {
                    if (!this.reconstructor) {
                        throw new Error(
                            "got binary data when not reconstructing a packet"
                        )
                    } else {
                        packet = this.reconstructor.takeBinaryData(
                            obj);
                        if (packet) {
                            this.reconstructor = null;
                            this.emit("decoded", packet)
                        }
                    }
                } else {
                    throw new Error("Unknown type: " +
                        obj)
                }
            };

            function decodeString(str) {
                var p = {};
                var i = 0;
                p.type = Number(str.charAt(0));
                if (null == exports.types[p.type]) return
                    error();
                if (exports.BINARY_EVENT == p.type ||
                    exports.BINARY_ACK == p.type) {
                    var buf = "";
                    while (str.charAt(++i) != "-") {
                        buf += str.charAt(i);
                        if (i == str.length) break
                    }
                    if (buf != Number(buf) || str.charAt(i) !=
                        "-") {
                        throw new Error(
                            "Illegal attachments")
                    }
                    p.attachments = Number(buf)
                }
                if ("/" == str.charAt(i + 1)) {
                    p.nsp = "";
                    while (++i) {
                        var c = str.charAt(i);
                        if ("," == c) break;
                        p.nsp += c;
                        if (i == str.length) break
                    }
                } else {
                    p.nsp = "/"
                }
                var next = str.charAt(i + 1);
                if ("" !== next && Number(next) == next) {
                    p.id = "";
                    while (++i) {
                        var c = str.charAt(i);
                        if (null == c || Number(c) != c) {
                            --i;
                            break
                        }
                        p.id += str.charAt(i);
                        if (i == str.length) break
                    }
                    p.id = Number(p.id)
                }
                if (str.charAt(++i)) {
                    try {
                        p.data = json.parse(str.substr(i))
                    } catch (e) {
                        return error()
                    }
                }
                debug("decoded %s as %j", str, p);
                return p
            }
            Decoder.prototype.destroy = function() {
                if (this.reconstructor) {
                    this.reconstructor.finishedReconstruction()
                }
            };

            function BinaryReconstructor(packet) {
                this.reconPack = packet;
                this.buffers = []
            }
            BinaryReconstructor.prototype.takeBinaryData =
                function(binData) {
                    this.buffers.push(binData);
                    if (this.buffers.length == this.reconPack
                        .attachments) {
                        var packet = binary.reconstructPacket(
                            this.reconPack, this.buffers
                        );
                        this.finishedReconstruction();
                        return packet
                    }
                    return null
                };
            BinaryReconstructor.prototype.finishedReconstruction =
                function() {
                    this.reconPack = null;
                    this.buffers = []
                };

            function error(data) {
                return {
                    type: exports.ERROR,
                    data: "parser error"
                }
            }
        }, {
            "./binary": 46,
            "./is-buffer": 48,
            "component-emitter": 49,
            debug: 39,
            isarray: 43,
            json3: 50
        }],
        48: [function(_dereq_, module, exports) {
            (function(global) {
                module.exports = isBuf;

                function isBuf(obj) {
                    return global.Buffer && global.Buffer
                        .isBuffer(obj) || global.ArrayBuffer &&
                        obj instanceof ArrayBuffer
                }
            }).call(this, typeof self !== "undefined" ?
                self : typeof window !== "undefined" ?
                window : typeof global !== "undefined" ?
                global : {})
        }, {}],
        49: [function(_dereq_, module, exports) {
            arguments[4][15][0].apply(exports, arguments)
        }, {
            dup: 15
        }],
        50: [function(_dereq_, module, exports) {
            (function(global) {
                (function() {
                    var isLoader = typeof define ===
                        "function" && define.amd;
                    var objectTypes = {
                        "function": true,
                        object: true
                    };
                    var freeExports = objectTypes[
                            typeof exports] &&
                        exports && !exports.nodeType &&
                        exports;
                    var root = objectTypes[typeof window] &&
                        window || this,
                        freeGlobal = freeExports &&
                        objectTypes[typeof module] &&
                        module && !module.nodeType &&
                        typeof global == "object" &&
                        global;
                    if (freeGlobal && (freeGlobal[
                                "global"] ===
                            freeGlobal ||
                            freeGlobal["window"] ===
                            freeGlobal ||
                            freeGlobal["self"] ===
                            freeGlobal)) {
                        root = freeGlobal
                    }

                    function runInContext(context,
                        exports) {
                        context || (context = root[
                            "Object"]());
                        exports || (exports = root[
                            "Object"]());
                        var Number = context[
                                "Number"] || root[
                                "Number"],
                            String = context[
                                "String"] || root[
                                "String"],
                            Object = context[
                                "Object"] || root[
                                "Object"],
                            Date = context["Date"] ||
                            root["Date"],
                            SyntaxError = context[
                                "SyntaxError"] ||
                            root["SyntaxError"],
                            TypeError = context[
                                "TypeError"] ||
                            root["TypeError"],
                            Math = context["Math"] ||
                            root["Math"],
                            nativeJSON = context[
                                "JSON"] || root[
                                "JSON"];
                        if (typeof nativeJSON ==
                            "object" && nativeJSON) {
                            exports.stringify =
                                nativeJSON.stringify;
                            exports.parse =
                                nativeJSON.parse
                        }
                        var objectProto = Object.prototype,
                            getClass = objectProto.toString,
                            isProperty, forEach,
                            undef;
                        var isExtended = new Date(-
                            0xc782b5b800cec);
                        try {
                            isExtended = isExtended
                                .getUTCFullYear() ==
                                -109252 &&
                                isExtended.getUTCMonth() ===
                                0 && isExtended.getUTCDate() ===
                                1 && isExtended.getUTCHours() ==
                                10 && isExtended.getUTCMinutes() ==
                                37 && isExtended.getUTCSeconds() ==
                                6 && isExtended.getUTCMilliseconds() ==
                                708
                        } catch (exception) {}

                        function has(name) {
                            if (has[name] !== undef) {
                                return has[name]
                            }
                            var isSupported;
                            if (name ==
                                "bug-string-char-index"
                            ) {
                                isSupported = "a" [
                                    0
                                ] != "a"
                            } else if (name ==
                                "json") {
                                isSupported = has(
                                    "json-stringify"
                                ) && has(
                                    "json-parse"
                                )
                            } else {
                                var value,
                                    serialized =
                                    '{"a":[1,true,false,null,"\\u0000\\b\\n\\f\\r\\t"]}';
                                if (name ==
                                    "json-stringify"
                                ) {
                                    var stringify =
                                        exports.stringify,
                                        stringifySupported =
                                        typeof stringify ==
                                        "function" &&
                                        isExtended;
                                    if (
                                        stringifySupported
                                    ) {
                                        (value =
                                            function() {
                                                return
                                                    1
                                            }).toJSON
                                            = value;
                                        try {
                                            stringifySupported
                                                =
                                                stringify(
                                                    0
                                                ) ===
                                                "0" &&
                                                stringify(
                                                    new Number
                                                ) ===
                                                "0" &&
                                                stringify(
                                                    new String
                                                ) ==
                                                '""' &&
                                                stringify(
                                                    getClass
                                                ) ===
                                                undef &&
                                                stringify(
                                                    undef
                                                ) ===
                                                undef &&
                                                stringify() ===
                                                undef &&
                                                stringify(
                                                    value
                                                ) ===
                                                "1" &&
                                                stringify(
                                                    [
                                                        value
                                                    ]
                                                ) ==
                                                "[1]" &&
                                                stringify(
                                                    [
                                                        undef
                                                    ]
                                                ) ==
                                                "[null]" &&
                                                stringify(
                                                    null
                                                ) ==
                                                "null" &&
                                                stringify(
                                                    [
                                                        undef,
                                                        getClass,
                                                        null
                                                    ]
                                                ) ==
                                                "[null,null,null]" &&
                                                stringify({
                                                    a: [
                                                        value,
                                                        true,
                                                        false,
                                                        null,
                                                        "\x00\b\n\f\r "
                                                    ]
                                                }) ==
                                                serialized &&
                                                stringify(
                                                    null,
                                                    value
                                                ) ===
                                                "1" &&
                                                stringify(
                                                    [
                                                        1,
                                                        2
                                                    ],
                                                    null,
                                                    1
                                                ) ==
                                                "[\n 1,\n 2\n]" &&
                                                stringify(
                                                    new Date(-
                                                        864e13
                                                    )
                                                ) ==
                                                '"-271821-04-20T00:00:00.000Z"' &&
                                                stringify(
                                                    new Date(
                                                        864e13
                                                    )
                                                ) ==
                                                '"+275760-09-13T00:00:00.000Z"' &&
                                                stringify(
                                                    new Date(-
                                                        621987552e5
                                                    )
                                                ) ==
                                                '"-000001-01-01T00:00:00.000Z"' &&
                                                stringify(
                                                    new Date(-
                                                        1
                                                    )
                                                ) ==
                                                '"1969-12-31T23:59:59.999Z"'
                                        } catch (
                                            exception
                                        ) {
                                            stringifySupported
                                                =
                                                false
                                        }
                                    }
                                    isSupported =
                                        stringifySupported
                                }
                                if (name ==
                                    "json-parse") {
                                    var parse =
                                        exports.parse;
                                    if (typeof parse ==
                                        "function") {
                                        try {
                                            if (
                                                parse(
                                                    "0"
                                                ) ===
                                                0 &&
                                                !
                                                parse(
                                                    false
                                                )) {
                                                value
                                                    =
                                                    parse(
                                                        serialized
                                                    );
                                                var
                                                    parseSupported =
                                                    value[
                                                        "a"
                                                    ]
                                                    .length ==
                                                    5 &&
                                                    value[
                                                        "a"
                                                    ]
                                                    [
                                                        0
                                                    ] ===
                                                    1;
                                                if (
                                                    parseSupported
                                                ) {
                                                    try {
                                                        parseSupported
                                                            = !
                                                            parse(
                                                                '" "'
                                                            )
                                                    } catch (
                                                        exception
                                                    ) {}
                                                    if (
                                                        parseSupported
                                                    ) {
                                                        try {
                                                            parseSupported
                                                                =
                                                                parse(
                                                                    "01"
                                                                ) !==
                                                                1
                                                        } catch (
                                                            exception
                                                        ) {}
                                                    }
                                                    if (
                                                        parseSupported
                                                    ) {
                                                        try {
                                                            parseSupported
                                                                =
                                                                parse(
                                                                    "1."
                                                                ) !==
                                                                1
                                                        } catch (
                                                            exception
                                                        ) {}
                                                    }
                                                }
                                            }
                                        } catch (
                                            exception
                                        ) {
                                            parseSupported
                                                =
                                                false
                                        }
                                    }
                                    isSupported =
                                        parseSupported
                                }
                            }
                            return has[name] = !!
                                isSupported
                        }
                        if (!has("json")) {
                            var functionClass =
                                "[object Function]",
                                dateClass =
                                "[object Date]",
                                numberClass =
                                "[object Number]",
                                stringClass =
                                "[object String]",
                                arrayClass =
                                "[object Array]",
                                booleanClass =
                                "[object Boolean]";
                            var charIndexBuggy =
                                has(
                                    "bug-string-char-index"
                                );
                            if (!isExtended) {
                                var floor = Math.floor;
                                var Months = [0, 31,
                                    59, 90, 120,
                                    151, 181,
                                    212, 243,
                                    273, 304,
                                    334
                                ];
                                var getDay =
                                    function(year,
                                        month) {
                                        return
                                            Months[
                                                month
                                            ] + 365 *
                                            (year -
                                                1970
                                            ) +
                                            floor((
                                                    year -
                                                    1969 +
                                                    (
                                                        month = +
                                                        (
                                                            month >
                                                            1
                                                        )
                                                    )
                                                ) /
                                                4) -
                                            floor((
                                                    year -
                                                    1901 +
                                                    month
                                                ) /
                                                100
                                            ) +
                                            floor((
                                                    year -
                                                    1601 +
                                                    month
                                                ) /
                                                400
                                            )
                                    }
                            }
                            if (!(isProperty =
                                    objectProto.hasOwnProperty
                                )) {
                                isProperty =
                                    function(
                                        property) {
                                        var members = {},
                                            constructor;
                                        if ((
                                                members
                                                .__proto__ =
                                                null,
                                                members
                                                .__proto__ = {
                                                    toString: 1
                                                },
                                                members
                                            ).toString !=
                                            getClass
                                        ) {
                                            isProperty
                                                =
                                                function(
                                                    property
                                                ) {
                                                    var
                                                        original =
                                                        this
                                                        .__proto__,
                                                        result =
                                                        property in
                                                        (
                                                            this
                                                            .__proto__ =
                                                            null,
                                                            this
                                                        );
                                                    this
                                                        .__proto__ =
                                                        original;
                                                    return
                                                        result
                                                }
                                        } else {
                                            constructor
                                                =
                                                members
                                                .constructor;
                                            isProperty
                                                =
                                                function(
                                                    property
                                                ) {
                                                    var
                                                        parent =
                                                        (
                                                            this
                                                            .constructor ||
                                                            constructor
                                                        )
                                                        .prototype;
                                                    return
                                                        property in
                                                        this &&
                                                        !
                                                        (
                                                            property in
                                                            parent &&
                                                            this[
                                                                property
                                                            ] ===
                                                            parent[
                                                                property
                                                            ]
                                                        )
                                                }
                                        }
                                        members =
                                            null;
                                        return
                                            isProperty
                                            .call(
                                                this,
                                                property
                                            )
                                    }
                            }
                            forEach = function(
                                object,
                                callback) {
                                var size = 0,
                                    Properties,
                                    members,
                                    property;
                                (Properties =
                                    function() {
                                        this.valueOf =
                                            0
                                    }).prototype
                                    .valueOf =
                                    0;
                                members = new Properties;
                                for (property in
                                    members) {
                                    if (
                                        isProperty
                                        .call(
                                            members,
                                            property
                                        )) {
                                        size++
                                    }
                                }
                                Properties =
                                    members =
                                    null;
                                if (!size) {
                                    members = [
                                        "valueOf",
                                        "toString",
                                        "toLocaleString",
                                        "propertyIsEnumerable",
                                        "isPrototypeOf",
                                        "hasOwnProperty",
                                        "constructor"
                                    ];
                                    forEach =
                                        function(
                                            object,
                                            callback
                                        ) {
                                            var
                                                isFunction =
                                                getClass
                                                .call(
                                                    object
                                                ) ==
                                                functionClass,
                                                property,
                                                length;
                                            var
                                                hasProperty = !
                                                isFunction &&
                                                typeof object
                                                .constructor !=
                                                "function" &&
                                                objectTypes[
                                                    typeof object
                                                    .hasOwnProperty
                                                ] &&
                                                object
                                                .hasOwnProperty ||
                                                isProperty;
                                            for (
                                                property in
                                                object
                                            ) {
                                                if (!
                                                    (
                                                        isFunction &&
                                                        property ==
                                                        "prototype"
                                                    ) &&
                                                    hasProperty
                                                    .call(
                                                        object,
                                                        property
                                                    )
                                                ) {
                                                    callback
                                                        (
                                                            property
                                                        )
                                                }
                                            }
                                            for (
                                                length =
                                                members
                                                .length; property =
                                                members[--
                                                    length
                                                ]; hasProperty
                                                .call(
                                                    object,
                                                    property
                                                ) &&
                                                callback(
                                                    property
                                                )
                                            );
                                        }
                                } else if (size ==
                                    2) {
                                    forEach =
                                        function(
                                            object,
                                            callback
                                        ) {
                                            var
                                                members = {},
                                                isFunction =
                                                getClass
                                                .call(
                                                    object
                                                ) ==
                                                functionClass,
                                                property;
                                            for (
                                                property in
                                                object
                                            ) {
                                                if (!
                                                    (
                                                        isFunction &&
                                                        property ==
                                                        "prototype"
                                                    ) &&
                                                    !
                                                    isProperty
                                                    .call(
                                                        members,
                                                        property
                                                    ) &&
                                                    (
                                                        members[
                                                            property
                                                        ] =
                                                        1
                                                    ) &&
                                                    isProperty
                                                    .call(
                                                        object,
                                                        property
                                                    )
                                                ) {
                                                    callback
                                                        (
                                                            property
                                                        )
                                                }
                                            }
                                        }
                                } else {
                                    forEach =
                                        function(
                                            object,
                                            callback
                                        ) {
                                            var
                                                isFunction =
                                                getClass
                                                .call(
                                                    object
                                                ) ==
                                                functionClass,
                                                property,
                                                isConstructor;
                                            for (
                                                property in
                                                object
                                            ) {
                                                if (!
                                                    (
                                                        isFunction &&
                                                        property ==
                                                        "prototype"
                                                    ) &&
                                                    isProperty
                                                    .call(
                                                        object,
                                                        property
                                                    ) &&
                                                    !
                                                    (
                                                        isConstructor =
                                                        property ===
                                                        "constructor"
                                                    )
                                                ) {
                                                    callback
                                                        (
                                                            property
                                                        )
                                                }
                                            }
                                            if (
                                                isConstructor ||
                                                isProperty
                                                .call(
                                                    object,
                                                    property =
                                                    "constructor"
                                                )
                                            ) {
                                                callback
                                                    (
                                                        property
                                                    )
                                            }
                                        }
                                }
                                return forEach(
                                    object,
                                    callback
                                )
                            };
                            if (!has(
                                    "json-stringify"
                                )) {
                                var Escapes = {
                                    92: "\\\\",
                                    34: '\\"',
                                    8: "\\b",
                                    12: "\\f",
                                    10: "\\n",
                                    13: "\\r",
                                    9: "\\t"
                                };
                                var leadingZeroes =
                                    "000000";
                                var toPaddedString =
                                    function(width,
                                        value) {
                                        return (
                                            leadingZeroes +
                                            (
                                                value ||
                                                0
                                            )).slice(-
                                            width
                                        )
                                    };
                                var unicodePrefix =
                                    "\\u00";
                                var quote =
                                    function(value) {
                                        var result =
                                            '"',
                                            index =
                                            0,
                                            length =
                                            value.length,
                                            useCharIndex = !
                                            charIndexBuggy ||
                                            length >
                                            10;
                                        var symbols =
                                            useCharIndex &&
                                            (
                                                charIndexBuggy ?
                                                value
                                                .split(
                                                    ""
                                                ) :
                                                value
                                            );
                                        for (; index <
                                            length; index++
                                        ) {
                                            var
                                                charCode =
                                                value
                                                .charCodeAt(
                                                    index
                                                );
                                            switch (
                                                charCode
                                            ) {
                                                case 8:
                                                case 9:
                                                case 10:
                                                case 12:
                                                case 13:
                                                case 34:
                                                case 92:
                                                    result
                                                        +=
                                                        Escapes[
                                                            charCode
                                                        ];
                                                    break;
                                                default:
                                                    if (
                                                        charCode <
                                                        32
                                                    ) {
                                                        result
                                                            +=
                                                            unicodePrefix +
                                                            toPaddedString(
                                                                2,
                                                                charCode
                                                                .toString(
                                                                    16
                                                                )
                                                            );
                                                        break
                                                    }
                                                    result
                                                        +=
                                                        useCharIndex ?
                                                        symbols[
                                                            index
                                                        ] :
                                                        value
                                                        .charAt(
                                                            index
                                                        )
                                            }
                                        }
                                        return
                                            result +
                                            '"'
                                    };
                                var serialize =
                                    function(
                                        property,
                                        object,
                                        callback,
                                        properties,
                                        whitespace,
                                        indentation,
                                        stack) {
                                        var value,
                                            className,
                                            year,
                                            month,
                                            date,
                                            time,
                                            hours,
                                            minutes,
                                            seconds,
                                            milliseconds,
                                            results,
                                            element,
                                            index,
                                            length,
                                            prefix,
                                            result;
                                        try {
                                            value =
                                                object[
                                                    property
                                                ]
                                        } catch (
                                            exception
                                        ) {}
                                        if (typeof value ==
                                            "object" &&
                                            value) {
                                            className
                                                =
                                                getClass
                                                .call(
                                                    value
                                                );
                                            if (
                                                className ==
                                                dateClass &&
                                                !
                                                isProperty
                                                .call(
                                                    value,
                                                    "toJSON"
                                                )) {
                                                if (
                                                    value >
                                                    -
                                                    1 /
                                                    0 &&
                                                    value <
                                                    1 /
                                                    0
                                                ) {
                                                    if (
                                                        getDay
                                                    ) {
                                                        date
                                                            =
                                                            floor(
                                                                value /
                                                                864e5
                                                            );
                                                        for (
                                                            year =
                                                            floor(
                                                                date /
                                                                365.2425
                                                            ) +
                                                            1970 -
                                                            1; getDay(
                                                                year +
                                                                1,
                                                                0
                                                            ) <=
                                                            date; year++
                                                        )
                                                        ;
                                                        for (
                                                            month =
                                                            floor(
                                                                (
                                                                    date -
                                                                    getDay(
                                                                        year,
                                                                        0
                                                                    )
                                                                ) /
                                                                30.42
                                                            ); getDay(
                                                                year,
                                                                month +
                                                                1
                                                            ) <=
                                                            date; month++
                                                        )
                                                        ;
                                                        date
                                                            =
                                                            1 +
                                                            date -
                                                            getDay(
                                                                year,
                                                                month
                                                            );
                                                        time
                                                            =
                                                            (
                                                                value %
                                                                864e5 +
                                                                864e5
                                                            ) %
                                                            864e5;
                                                        hours
                                                            =
                                                            floor(
                                                                time /
                                                                36e5
                                                            ) %
                                                            24;
                                                        minutes
                                                            =
                                                            floor(
                                                                time /
                                                                6e4
                                                            ) %
                                                            60;
                                                        seconds
                                                            =
                                                            floor(
                                                                time /
                                                                1e3
                                                            ) %
                                                            60;
                                                        milliseconds
                                                            =
                                                            time %
                                                            1e3
                                                    } else {
                                                        year
                                                            =
                                                            value
                                                            .getUTCFullYear();
                                                        month
                                                            =
                                                            value
                                                            .getUTCMonth();
                                                        date
                                                            =
                                                            value
                                                            .getUTCDate();
                                                        hours
                                                            =
                                                            value
                                                            .getUTCHours();
                                                        minutes
                                                            =
                                                            value
                                                            .getUTCMinutes();
                                                        seconds
                                                            =
                                                            value
                                                            .getUTCSeconds();
                                                        milliseconds
                                                            =
                                                            value
                                                            .getUTCMilliseconds()
                                                    }
                                                    value
                                                        =
                                                        (
                                                            year <=
                                                            0 ||
                                                            year >=
                                                            1e4 ?
                                                            (
                                                                year <
                                                                0 ?
                                                                "-" :
                                                                "+"
                                                            ) +
                                                            toPaddedString(
                                                                6,
                                                                year <
                                                                0 ?
                                                                -
                                                                year :
                                                                year
                                                            ) :
                                                            toPaddedString(
                                                                4,
                                                                year
                                                            )
                                                        ) +
                                                        "-" +
                                                        toPaddedString(
                                                            2,
                                                            month +
                                                            1
                                                        ) +
                                                        "-" +
                                                        toPaddedString(
                                                            2,
                                                            date
                                                        ) +
                                                        "T" +
                                                        toPaddedString(
                                                            2,
                                                            hours
                                                        ) +
                                                        ":" +
                                                        toPaddedString(
                                                            2,
                                                            minutes
                                                        ) +
                                                        ":" +
                                                        toPaddedString(
                                                            2,
                                                            seconds
                                                        ) +
                                                        "." +
                                                        toPaddedString(
                                                            3,
                                                            milliseconds
                                                        ) +
                                                        "Z"
                                                } else {
                                                    value
                                                        =
                                                        null
                                                }
                                            } else if (
                                                typeof value
                                                .toJSON ==
                                                "function" &&
                                                (
                                                    className !=
                                                    numberClass &&
                                                    className !=
                                                    stringClass &&
                                                    className !=
                                                    arrayClass ||
                                                    isProperty
                                                    .call(
                                                        value,
                                                        "toJSON"
                                                    )
                                                )) {
                                                value
                                                    =
                                                    value
                                                    .toJSON(
                                                        property
                                                    )
                                            }
                                        }
                                        if (
                                            callback
                                        ) {
                                            value =
                                                callback
                                                .call(
                                                    object,
                                                    property,
                                                    value
                                                )
                                        }
                                        if (value ===
                                            null) {
                                            return
                                                "null"
                                        }
                                        className =
                                            getClass
                                            .call(
                                                value
                                            );
                                        if (
                                            className ==
                                            booleanClass
                                        ) {
                                            return
                                                "" +
                                                value
                                        } else if (
                                            className ==
                                            numberClass
                                        ) {
                                            return
                                                value >
                                                -1 /
                                                0 &&
                                                value <
                                                1 /
                                                0 ?
                                                "" +
                                                value :
                                                "null"
                                        } else if (
                                            className ==
                                            stringClass
                                        ) {
                                            return
                                                quote(
                                                    "" +
                                                    value
                                                )
                                        }
                                        if (typeof value ==
                                            "object"
                                        ) {
                                            for (
                                                length =
                                                stack
                                                .length; length--;
                                            ) {
                                                if (
                                                    stack[
                                                        length
                                                    ] ===
                                                    value
                                                ) {
                                                    throw TypeError
                                                        ()
                                                }
                                            }
                                            stack.push(
                                                value
                                            );
                                            results
                                                = [];
                                            prefix =
                                                indentation;
                                            indentation
                                                +=
                                                whitespace;
                                            if (
                                                className ==
                                                arrayClass
                                            ) {
                                                for (
                                                    index =
                                                    0,
                                                    length =
                                                    value
                                                    .length; index <
                                                    length; index++
                                                ) {
                                                    element
                                                        =
                                                        serialize(
                                                            index,
                                                            value,
                                                            callback,
                                                            properties,
                                                            whitespace,
                                                            indentation,
                                                            stack
                                                        );
                                                    results
                                                        .push(
                                                            element ===
                                                            undef ?
                                                            "null" :
                                                            element
                                                        )
                                                }
                                                result
                                                    =
                                                    results
                                                    .length ?
                                                    whitespace ?
                                                    "[\n" +
                                                    indentation +
                                                    results
                                                    .join(
                                                        ",\n" +
                                                        indentation
                                                    ) +
                                                    "\n" +
                                                    prefix +
                                                    "]" :
                                                    "[" +
                                                    results
                                                    .join(
                                                        ","
                                                    ) +
                                                    "]" :
                                                    "[]"
                                            } else {
                                                forEach
                                                    (
                                                        properties ||
                                                        value,
                                                        function(
                                                            property
                                                        ) {
                                                            var
                                                                element =
                                                                serialize(
                                                                    property,
                                                                    value,
                                                                    callback,
                                                                    properties,
                                                                    whitespace,
                                                                    indentation,
                                                                    stack
                                                                );
                                                            if (
                                                                element !==
                                                                undef
                                                            ) {
                                                                results
                                                                    .push(
                                                                        quote(
                                                                            property
                                                                        ) +
                                                                        ":" +
                                                                        (
                                                                            whitespace ?
                                                                            " " :
                                                                            ""
                                                                        ) +
                                                                        element
                                                                    )
                                                            }
                                                        }
                                                    );
                                                result
                                                    =
                                                    results
                                                    .length ?
                                                    whitespace ?
                                                    "{\n" +
                                                    indentation +
                                                    results
                                                    .join(
                                                        ",\n" +
                                                        indentation
                                                    ) +
                                                    "\n" +
                                                    prefix +
                                                    "}" :
                                                    "{" +
                                                    results
                                                    .join(
                                                        ","
                                                    ) +
                                                    "}" :
                                                    "{}"
                                            }
                                            stack.pop();
                                            return
                                                result
                                        }
                                    };
                                exports.stringify =
                                    function(source,
                                        filter,
                                        width) {
                                        var
                                            whitespace,
                                            callback,
                                            properties,
                                            className;
                                        if (
                                            objectTypes[
                                                typeof filter
                                            ] &&
                                            filter) {
                                            if ((
                                                    className =
                                                    getClass
                                                    .call(
                                                        filter
                                                    )
                                                ) ==
                                                functionClass
                                            ) {
                                                callback
                                                    =
                                                    filter
                                            } else if (
                                                className ==
                                                arrayClass
                                            ) {
                                                properties
                                                    = {};
                                                for (
                                                    var
                                                        index =
                                                        0,
                                                        length =
                                                        filter
                                                        .length,
                                                        value; index <
                                                    length; value =
                                                    filter[
                                                        index++
                                                    ], (
                                                        className =
                                                        getClass
                                                        .call(
                                                            value
                                                        ),
                                                        className ==
                                                        stringClass ||
                                                        className ==
                                                        numberClass
                                                    ) &&
                                                    (
                                                        properties[
                                                            value
                                                        ] =
                                                        1
                                                    )
                                                );
                                            }
                                        }
                                        if (width) {
                                            if ((
                                                    className =
                                                    getClass
                                                    .call(
                                                        width
                                                    )
                                                ) ==
                                                numberClass
                                            ) {
                                                if (
                                                    (
                                                        width -=
                                                        width %
                                                        1
                                                    ) >
                                                    0
                                                ) {
                                                    for (
                                                        whitespace =
                                                        "",
                                                        width >
                                                        10 &&
                                                        (
                                                            width =
                                                            10
                                                        ); whitespace
                                                        .length <
                                                        width; whitespace +=
                                                        " "
                                                    )
                                                    ;
                                                }
                                            } else if (
                                                className ==
                                                stringClass
                                            ) {
                                                whitespace
                                                    =
                                                    width
                                                    .length <=
                                                    10 ?
                                                    width :
                                                    width
                                                    .slice(
                                                        0,
                                                        10
                                                    )
                                            }
                                        }
                                        return
                                            serialize(
                                                "", (
                                                    value = {},
                                                    value[
                                                        ""
                                                    ] =
                                                    source,
                                                    value
                                                ),
                                                callback,
                                                properties,
                                                whitespace,
                                                "", []
                                            )
                                    }
                            }
                            if (!has("json-parse")) {
                                var fromCharCode =
                                    String.fromCharCode;
                                var Unescapes = {
                                    92: "\\",
                                    34: '"',
                                    47: "/",
                                    98: "\b",
                                    116: " ",
                                    110: "\n",
                                    102: "\f",
                                    114: "\r"
                                };
                                var Index, Source;
                                var abort =
                                    function() {
                                        Index =
                                            Source =
                                            null;
                                        throw SyntaxError
                                            ()
                                    };
                                var lex = function() {
                                    var source =
                                        Source,
                                        length =
                                        source.length,
                                        value,
                                        begin,
                                        position,
                                        isSigned,
                                        charCode;
                                    while (
                                        Index <
                                        length) {
                                        charCode
                                            =
                                            source
                                            .charCodeAt(
                                                Index
                                            );
                                        switch (
                                            charCode
                                        ) {
                                            case 9:
                                            case 10:
                                            case 13:
                                            case 32:
                                                Index++;
                                                break;
                                            case 123:
                                            case 125:
                                            case 91:
                                            case 93:
                                            case 58:
                                            case 44:
                                                value
                                                    =
                                                    charIndexBuggy ?
                                                    source
                                                    .charAt(
                                                        Index
                                                    ) :
                                                    source[
                                                        Index
                                                    ];
                                                Index++;
                                                return
                                                    value;
                                            case 34:
                                                for (
                                                    value =
                                                    "@",
                                                    Index++; Index <
                                                    length;
                                                ) {
                                                    charCode
                                                        =
                                                        source
                                                        .charCodeAt(
                                                            Index
                                                        );
                                                    if (
                                                        charCode <
                                                        32
                                                    ) {
                                                        abort
                                                            ()
                                                    } else if (
                                                        charCode ==
                                                        92
                                                    ) {
                                                        charCode
                                                            =
                                                            source
                                                            .charCodeAt(++
                                                                Index
                                                            );
                                                        switch (
                                                            charCode
                                                        ) {
                                                            case 92:
                                                            case 34:
                                                            case 47:
                                                            case 98:
                                                            case 116:
                                                            case 110:
                                                            case 102:
                                                            case 114:
                                                                value
                                                                    +=
                                                                    Unescapes[
                                                                        charCode
                                                                    ];
                                                                Index++;
                                                                break;
                                                            case 117:
                                                                begin
                                                                    = ++
                                                                    Index;
                                                                for (
                                                                    position =
                                                                    Index +
                                                                    4; Index <
                                                                    position; Index++
                                                                ) {
                                                                    charCode
                                                                        =
                                                                        source
                                                                        .charCodeAt(
                                                                            Index
                                                                        );
                                                                    if (!
                                                                        (
                                                                            charCode >=
                                                                            48 &&
                                                                            charCode <=
                                                                            57 ||
                                                                            charCode >=
                                                                            97 &&
                                                                            charCode <=
                                                                            102 ||
                                                                            charCode >=
                                                                            65 &&
                                                                            charCode <=
                                                                            70
                                                                        )
                                                                    ) {
                                                                        abort
                                                                            ()
                                                                    }
                                                                }
                                                                value
                                                                    +=
                                                                    fromCharCode(
                                                                        "0x" +
                                                                        source
                                                                        .slice(
                                                                            begin,
                                                                            Index
                                                                        )
                                                                    );
                                                                break;
                                                            default:
                                                                abort
                                                                    ()
                                                        }
                                                    } else {
                                                        if (
                                                            charCode ==
                                                            34
                                                        ) {
                                                            break
                                                        }
                                                        charCode
                                                            =
                                                            source
                                                            .charCodeAt(
                                                                Index
                                                            );
                                                        begin
                                                            =
                                                            Index;
                                                        while (
                                                            charCode >=
                                                            32 &&
                                                            charCode !=
                                                            92 &&
                                                            charCode !=
                                                            34
                                                        ) {
                                                            charCode
                                                                =
                                                                source
                                                                .charCodeAt(++
                                                                    Index
                                                                )
                                                        }
                                                        value
                                                            +=
                                                            source
                                                            .slice(
                                                                begin,
                                                                Index
                                                            )
                                                    }
                                                }
                                                if (
                                                    source
                                                    .charCodeAt(
                                                        Index
                                                    ) ==
                                                    34
                                                ) {
                                                    Index++;
                                                    return
                                                        value
                                                }
                                                abort
                                                    ();
                                            default:
                                                begin
                                                    =
                                                    Index;
                                                if (
                                                    charCode ==
                                                    45
                                                ) {
                                                    isSigned
                                                        =
                                                        true;
                                                    charCode
                                                        =
                                                        source
                                                        .charCodeAt(++
                                                            Index
                                                        )
                                                }
                                                if (
                                                    charCode >=
                                                    48 &&
                                                    charCode <=
                                                    57
                                                ) {
                                                    if (
                                                        charCode ==
                                                        48 &&
                                                        (
                                                            charCode =
                                                            source
                                                            .charCodeAt(
                                                                Index +
                                                                1
                                                            ),
                                                            charCode >=
                                                            48 &&
                                                            charCode <=
                                                            57
                                                        )
                                                    ) {
                                                        abort
                                                            ()
                                                    }
                                                    isSigned
                                                        =
                                                        false;
                                                    for (; Index <
                                                        length &&
                                                        (
                                                            charCode =
                                                            source
                                                            .charCodeAt(
                                                                Index
                                                            ),
                                                            charCode >=
                                                            48 &&
                                                            charCode <=
                                                            57
                                                        ); Index++
                                                    )
                                                    ;
                                                    if (
                                                        source
                                                        .charCodeAt(
                                                            Index
                                                        ) ==
                                                        46
                                                    ) {
                                                        position
                                                            = ++
                                                            Index;
                                                        for (; position <
                                                            length &&
                                                            (
                                                                charCode =
                                                                source
                                                                .charCodeAt(
                                                                    position
                                                                ),
                                                                charCode >=
                                                                48 &&
                                                                charCode <=
                                                                57
                                                            ); position++
                                                        )
                                                        ;
                                                        if (
                                                            position ==
                                                            Index
                                                        ) {
                                                            abort
                                                                ()
                                                        }
                                                        Index
                                                            =
                                                            position
                                                    }
                                                    charCode
                                                        =
                                                        source
                                                        .charCodeAt(
                                                            Index
                                                        );
                                                    if (
                                                        charCode ==
                                                        101 ||
                                                        charCode ==
                                                        69
                                                    ) {
                                                        charCode
                                                            =
                                                            source
                                                            .charCodeAt(++
                                                                Index
                                                            );
                                                        if (
                                                            charCode ==
                                                            43 ||
                                                            charCode ==
                                                            45
                                                        ) {
                                                            Index++
                                                        }
                                                        for (
                                                            position =
                                                            Index; position <
                                                            length &&
                                                            (
                                                                charCode =
                                                                source
                                                                .charCodeAt(
                                                                    position
                                                                ),
                                                                charCode >=
                                                                48 &&
                                                                charCode <=
                                                                57
                                                            ); position++
                                                        )
                                                        ;
                                                        if (
                                                            position ==
                                                            Index
                                                        ) {
                                                            abort
                                                                ()
                                                        }
                                                        Index
                                                            =
                                                            position
                                                    }
                                                    return
                                                        +
                                                        source
                                                        .slice(
                                                            begin,
                                                            Index
                                                        )
                                                }
                                                if (
                                                    isSigned
                                                ) {
                                                    abort
                                                        ()
                                                }
                                                if (
                                                    source
                                                    .slice(
                                                        Index,
                                                        Index +
                                                        4
                                                    ) ==
                                                    "true"
                                                ) {
                                                    Index
                                                        +=
                                                        4;
                                                    return
                                                        true
                                                } else if (
                                                    source
                                                    .slice(
                                                        Index,
                                                        Index +
                                                        5
                                                    ) ==
                                                    "false"
                                                ) {
                                                    Index
                                                        +=
                                                        5;
                                                    return
                                                        false
                                                } else if (
                                                    source
                                                    .slice(
                                                        Index,
                                                        Index +
                                                        4
                                                    ) ==
                                                    "null"
                                                ) {
                                                    Index
                                                        +=
                                                        4;
                                                    return
                                                        null
                                                }
                                                abort
                                                    ()
                                        }
                                    }
                                    return "$"
                                };
                                var get = function(
                                    value) {
                                    var results,
                                        hasMembers;
                                    if (value ==
                                        "$") {
                                        abort()
                                    }
                                    if (typeof value ==
                                        "string"
                                    ) {
                                        if ((
                                                charIndexBuggy ?
                                                value
                                                .charAt(
                                                    0
                                                ) :
                                                value[
                                                    0
                                                ]
                                            ) ==
                                            "@"
                                        ) {
                                            return
                                                value
                                                .slice(
                                                    1
                                                )
                                        }
                                        if (
                                            value ==
                                            "["
                                        ) {
                                            results
                                                = [];
                                            for (;; hasMembers ||
                                                (
                                                    hasMembers =
                                                    true
                                                )
                                            ) {
                                                value
                                                    =
                                                    lex();
                                                if (
                                                    value ==
                                                    "]"
                                                ) {
                                                    break
                                                }
                                                if (
                                                    hasMembers
                                                ) {
                                                    if (
                                                        value ==
                                                        ","
                                                    ) {
                                                        value
                                                            =
                                                            lex();
                                                        if (
                                                            value ==
                                                            "]"
                                                        ) {
                                                            abort
                                                                ()
                                                        }
                                                    } else {
                                                        abort
                                                            ()
                                                    }
                                                }
                                                if (
                                                    value ==
                                                    ","
                                                ) {
                                                    abort
                                                        ()
                                                }
                                                results
                                                    .push(
                                                        get(
                                                            value
                                                        )
                                                    )
                                            }
                                            return
                                                results
                                        } else if (
                                            value ==
                                            "{"
                                        ) {
                                            results
                                                = {};
                                            for (;; hasMembers ||
                                                (
                                                    hasMembers =
                                                    true
                                                )
                                            ) {
                                                value
                                                    =
                                                    lex();
                                                if (
                                                    value ==
                                                    "}"
                                                ) {
                                                    break
                                                }
                                                if (
                                                    hasMembers
                                                ) {
                                                    if (
                                                        value ==
                                                        ","
                                                    ) {
                                                        value
                                                            =
                                                            lex();
                                                        if (
                                                            value ==
                                                            "}"
                                                        ) {
                                                            abort
                                                                ()
                                                        }
                                                    } else {
                                                        abort
                                                            ()
                                                    }
                                                }
                                                if (
                                                    value ==
                                                    "," ||
                                                    typeof value !=
                                                    "string" ||
                                                    (
                                                        charIndexBuggy ?
                                                        value
                                                        .charAt(
                                                            0
                                                        ) :
                                                        value[
                                                            0
                                                        ]
                                                    ) !=
                                                    "@" ||
                                                    lex() !=
                                                    ":"
                                                ) {
                                                    abort
                                                        ()
                                                }
                                                results
                                                    [
                                                        value
                                                        .slice(
                                                            1
                                                        )
                                                    ] =
                                                    get(
                                                        lex()
                                                    )
                                            }
                                            return
                                                results
                                        }
                                        abort()
                                    }
                                    return value
                                };
                                var update =
                                    function(source,
                                        property,
                                        callback) {
                                        var element =
                                            walk(
                                                source,
                                                property,
                                                callback
                                            );
                                        if (element ===
                                            undef) {
                                            delete source
                                                [
                                                    property
                                                ]
                                        } else {
                                            source[
                                                    property
                                                ] =
                                                element
                                        }
                                    };
                                var walk = function(
                                    source,
                                    property,
                                    callback) {
                                    var value =
                                        source[
                                            property
                                        ],
                                        length;
                                    if (typeof value ==
                                        "object" &&
                                        value) {
                                        if (
                                            getClass
                                            .call(
                                                value
                                            ) ==
                                            arrayClass
                                        ) {
                                            for (
                                                length =
                                                value
                                                .length; length--;
                                            ) {
                                                update
                                                    (
                                                        value,
                                                        length,
                                                        callback
                                                    )
                                            }
                                        } else {
                                            forEach
                                                (
                                                    value,
                                                    function(
                                                        property
                                                    ) {
                                                        update
                                                            (
                                                                value,
                                                                property,
                                                                callback
                                                            )
                                                    }
                                                )
                                        }
                                    }
                                    return
                                        callback
                                        .call(
                                            source,
                                            property,
                                            value
                                        )
                                };
                                exports.parse =
                                    function(source,
                                        callback) {
                                        var result,
                                            value;
                                        Index = 0;
                                        Source = "" +
                                            source;
                                        result =
                                            get(lex());
                                        if (lex() !=
                                            "$") {
                                            abort()
                                        }
                                        Index =
                                            Source =
                                            null;
                                        return
                                            callback &&
                                            getClass
                                            .call(
                                                callback
                                            ) ==
                                            functionClass ?
                                            walk((
                                                    value = {},
                                                    value[
                                                        ""
                                                    ] =
                                                    result,
                                                    value
                                                ),
                                                "",
                                                callback
                                            ) :
                                            result
                                    }
                            }
                        }
                        exports["runInContext"] =
                            runInContext;
                        return exports
                    }
                    if (freeExports && !isLoader) {
                        runInContext(root,
                            freeExports)
                    } else {
                        var nativeJSON = root.JSON,
                            previousJSON = root[
                                "JSON3"],
                            isRestored = false;
                        var JSON3 = runInContext(
                            root, root["JSON3"] = {
                                noConflict: function() {
                                    if (!
                                        isRestored
                                    ) {
                                        isRestored
                                            =
                                            true;
                                        root
                                            .JSON =
                                            nativeJSON;
                                        root
                                            [
                                                "JSON3"
                                            ] =
                                            previousJSON;
                                        nativeJSON
                                            =
                                            previousJSON =
                                            null
                                    }
                                    return
                                        JSON3
                                }
                            });
                        root.JSON = {
                            parse: JSON3.parse,
                            stringify: JSON3.stringify
                        }
                    }
                    if (isLoader) {
                        define(function() {
                            return JSON3
                        })
                    }
                }).call(this)
            }).call(this, typeof self !== "undefined" ?
                self : typeof window !== "undefined" ?
                window : typeof global !== "undefined" ?
                global : {})
        }, {}],
        51: [function(_dereq_, module, exports) {
            module.exports = toArray;

            function toArray(list, index) {
                var array = [];
                index = index || 0;
                for (var i = index || 0; i < list.length; i++) {
                    array[i - index] = list[i]
                }
                return array
            }
        }, {}]
    }, {}, [31])(31)
});;;;
! function(e, n) {
    var o = e();
    e.fn.dropdownHover = function(t) {
        return "ontouchstart" in document ? this : (o = o.add(this.parent()),
            this.each(function() {
                function r() {
                    n.clearTimeout(a), n.clearTimeout(i), i = n.setTimeout(
                        function() {
                            o.find(":focus").blur(), f.instantlyCloseOthers ===
                                !0 && o.removeClass("open"), n.clearTimeout(
                                    i), d.attr("aria-expanded",
                                    "true"), s.addClass("open"),
                                d.trigger(l)
                        }, f.hoverDelay)
                }
                var a, i, d = e(this),
                    s = d.parent(),
                    u = {
                        delay: 500,
                        hoverDelay: 0,
                        instantlyCloseOthers: !0
                    },
                    h = {
                        delay: e(this).data("delay"),
                        hoverDelay: e(this).data("hover-delay"),
                        instantlyCloseOthers: e(this).data(
                            "close-others")
                    },
                    l = "show.bs.dropdown",
                    c = "hide.bs.dropdown",
                    f = e.extend(!0, {}, u, t, h);
                s.hover(function(e) {
                    return s.hasClass("open") || d.is(e.target) ?
                        void r(e) : !0
                }, function() {
                    n.clearTimeout(i), a = n.setTimeout(
                        function() {
                            d.attr("aria-expanded",
                                "false"), s.removeClass(
                                "open"), d.trigger(
                                c)
                        }, f.delay)
                }), d.hover(function(e) {
                    return s.hasClass("open") || s.is(e.target) ?
                        void r(e) : !0
                }), s.find(".dropdown-submenu").each(function() {
                    var o, t = e(this);
                    t.hover(function() {
                        n.clearTimeout(o), t.children(
                                ".dropdown-menu").show(),
                            t.siblings().children(
                                ".dropdown-menu").hide()
                    }, function() {
                        var e = t.children(
                            ".dropdown-menu");
                        o = n.setTimeout(function() {
                            e.hide()
                        }, f.delay)
                    })
                })
            }))
    }, e(document).ready(function() {
        e('[data-hover="dropdown"]').dropdownHover()
    })
}(jQuery, window);;;;
var CCC = CCC || {};
CCC.STATIC = CCC.STATIC || {};
CCC.STATIC.TYPE = {
    'TRADE': '0',
    'FEEDNEWS': '1',
    'CURRENT': '2',
    'LOADCOMPLATE': '3',
    'COINPAIRS': '4',
    'CURRENTAGG': '5',
    'TOPLIST': '6',
    'TOPLISTCHANGE': '7',
    'ORDERBOOK': '8',
    'FULLORDERBOOK': '9',
    'ACTIVATION': '10',
    'TRADECATCHUP': '100',
    'NEWSCATCHUP': '101',
    'TRADECATCHUPCOMPLETE': '300',
    'NEWSCATCHUPCOMPLETE': '301'
};
CCC.STATIC.CURRENCY = CCC.STATIC.CURRENCY || {};
CCC.STATIC.CURRENCY.SYMBOL = {
    'BTC': 'Ƀ',
    'LTC': 'Ł',
    'DAO': 'Ð',
    'USD': '$',
    'CNY': '¥',
    'EUR': '€',
    'GBP': '£',
    'JPY': '¥',
    'PLN': 'zł',
    'RUB': '₽',
    'ETH': 'Ξ',
    'GOLD': 'Gold g',
    'INR': '₹',
    'BRL': 'R$',
    'KRW': '₩',
    'RUR': '₽'
};
CCC.STATIC.CURRENCY.getSymbol = function(symbol) {
    return CCC.STATIC.CURRENCY.SYMBOL[symbol] || symbol;
};
CCC.STATIC.UTIL = {
    chartColors: {
        Green: {
            Title: "Green",
            Hex: "#5cb85c"
        },
        Red: {
            Title: "Red",
            Hex: "#A11B0A"
        },
        Blue: {
            Title: "Blue",
            Hex: "#006098"
        },
        Black: {
            Title: "Black",
            Hex: "#000000"
        },
        Orange: {
            Title: "Orange",
            Hex: "#F89017"
        },
        DarkGreen: {
            Title: "Dark Green",
            Hex: "#398439"
        },
        LighRed: {
            Title: "Light Red",
            Hex: "#D44E3D"
        },
        DarkBlue: {
            Title: "Dark Blue",
            Hex: "#002387"
        },
        Yellow: {
            Title: "Yellow",
            Hex: "#FFF700"
        },
        White: {
            Title: "White",
            Hex: "#FFFFFF"
        }
    },
    exchangeNameMapping: {
        'CCCAGG': 'CryptoCompare Index',
        'BTCChina': 'BTCC',
        'Coinbase': 'GDAX'
    },
    isMobile: function(userAgent) {
        if (
            /(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|ipad|iris|kindle|Android|Silk|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i
            .test(userAgent) ||
            /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i
            .test(userAgent.substr(0, 4)))
            return true;
        return false;
    },
    convertToMB: function(bytes) {
        return (parseInt(bytes, 10) / 1024 / 1024).toFixed(2) + ' MB';
    },
    getNameForExchange: function(exchangeName) {
        if (this.exchangeNameMapping.hasOwnProperty(exchangeName)) {
            return this.exchangeNameMapping[exchangeName];
        }
        return exchangeName;
    },
    noExponents: function(value) {
        var data = String(value).split(/[eE]/);
        if (data.length == 1) return data[0];
        var z = '',
            sign = value < 0 ? '-' : '',
            str = data[0].replace('.', ''),
            mag = Number(data[1]) + 1;
        if (mag < 0) {
            z = sign + '0.';
            while (mag++) z += '0';
            return z + str.replace(/^\-/, '');
        }
        mag -= str.length;
        while (mag--) z += '0';
        return str + z;
    },
    reduceFloatVal: function(value) {
        value = parseFloat(value);
        var absValue = Math.abs(value);
        if (absValue > 1) {
            value = Math.round(value * 100) / 100;
            return value;
        }
        if (absValue >= 0.00001000) {
            return parseFloat(value.toPrecision(4));
        }
        if (absValue >= 0.00000100) {
            return parseFloat(value.toPrecision(3));
        }
        if (absValue >= 0.00000010) {
            return parseFloat(value.toPrecision(2));
        }
        return parseFloat(value.toPrecision(1));
    },
    reduceReal: function(value) {
        value = parseFloat(value);
        return parseFloat(value.toFixed(8));
    },
    convertCurrentKeyToAll: function(key) {
        var valuesArray = key.split("~");
        valuesArray[0] = CCC.STATIC.TYPE.CURRENTAGG;
        valuesArray[1] = 'CCCAGG';
        return valuesArray.join('~');
    },
    convertCurrentKeyToTrade: function(key) {
        var valuesArray = key.split("~");
        valuesArray[0] = CCC.STATIC.TYPE.TRADE;
        return valuesArray.join('~');
    },
    convertValueToDisplay: function(symbol, value,
        filterNumberFunctionAngularJS, type, fullNumbers) {
        var prefix = '';
        var valueSign = 1;
        value = parseFloat(value);
        var valueAbs = Math.abs(value);
        var decimalsOnBigNumbers = 2;
        var decimalsOnNormalNumbers = 2;
        var decimalsOnSmallNumbers = 4;
        if (fullNumbers === true) {
            decimalsOnBigNumbers = 2;
            decimalsOnNormalNumbers = 0;
            decimalsOnSmallNumbers = 4;
        }
        if (type == "8decimals") {
            decimalsOnBigNumbers = 4;
            decimalsOnNormalNumbers = 8;
            decimalsOnSmallNumbers = 8;
            if (value < 0.0001 && value >= 0.00001) {
                decimalsOnSmallNumbers = 4;
            }
            if (value < 0.001 && value >= 0.0001) {
                decimalsOnSmallNumbers = 5;
            }
            if (value < 0.01 && value >= 0.001) {
                decimalsOnSmallNumbers = 6;
            }
            if (value < 0.1 && value >= 0.01) {
                decimalsOnSmallNumbers = 7;
            }
        }
        if (symbol != '') {
            prefix = symbol + ' ';
        }
        if (value < 0) {
            valueSign = -1;
        }
        if (value == 0) {
            return prefix + '0';
        }
        if (value < 0.00001000 && value >= 0.00000100 &&
            decimalsOnSmallNumbers > 3) {
            decimalsOnSmallNumbers = 3;
        }
        if (value < 0.00000100 && value >= 0.00000010 &&
            decimalsOnSmallNumbers > 2) {
            decimalsOnSmallNumbers = 2;
        }
        if (value < 0.00000010 && decimalsOnSmallNumbers > 1) {
            decimalsOnSmallNumbers = 1;
        }
        if (type == "short" || type == "8decimals") {
            if (valueAbs > 1000000000) {
                valueAbs = valueAbs / 1000000000;
                return prefix + filterNumberFunctionAngularJS(valueSign *
                    valueAbs, decimalsOnBigNumbers) + ' B';
            }
            if (valueAbs > 1000000) {
                valueAbs = valueAbs / 1000000;
                return prefix + filterNumberFunctionAngularJS(valueSign *
                    valueAbs, decimalsOnBigNumbers) + ' M';
            }
            if (valueAbs > 10000) {
                valueAbs = valueAbs / 1000;
                return prefix + filterNumberFunctionAngularJS(valueSign *
                    valueAbs, decimalsOnBigNumbers) + ' K';
            }
            if (type == "8decimals" && valueAbs >= 100) {
                return prefix + filterNumberFunctionAngularJS(valueSign *
                    valueAbs, decimalsOnBigNumbers);
            }
            if (valueAbs >= 1) {
                return prefix + filterNumberFunctionAngularJS(valueSign *
                    valueAbs, decimalsOnNormalNumbers);
            }
            return prefix + (valueSign * valueAbs).toPrecision(
                decimalsOnSmallNumbers);
        } else {
            if (valueAbs >= 1) {
                return prefix + filterNumberFunctionAngularJS(valueSign *
                    valueAbs, decimalsOnNormalNumbers);
            }
            return prefix + this.noExponents((valueSign * valueAbs).toPrecision(
                decimalsOnSmallNumbers));
        }
    }
};
CCC.TRADE = CCC.TRADE || {};
CCC.TRADE.FLAGS = {
    'SELL': 0x1,
    'BUY': 0x2,
    'UNKNOWN': 0x4
}
CCC.TRADE.FIELDS = {
    'T': 0x0,
    'M': 0x0,
    'FSYM': 0x0,
    'TSYM': 0x0,
    'F': 0x0,
    'ID': 0x1,
    'TS': 0x2,
    'Q': 0x4,
    'P': 0x8,
    'TOTAL': 0x10
};
CCC.TRADE.DISPLAY = CCC.TRADE.DISPLAY || {};
CCC.TRADE.DISPLAY.FIELDS = {
    'T': {
        "Show": false
    },
    'M': {
        "Show": true,
        'Filter': 'Market'
    },
    'FSYM': {
        "Show": true,
        'Filter': 'CurrencySymbol'
    },
    'TSYM': {
        "Show": true,
        'Filter': 'CurrencySymbol'
    },
    'F': {
        "Show": true,
        'Filter': 'TradeFlag'
    },
    'ID': {
        "Show": true,
        'Filter': 'Text'
    },
    'TS': {
        'Show': true,
        'Filter': 'Date',
        'Format': 'yyyy MMMM dd HH:mm:ss'
    },
    'Q': {
        'Show': true,
        'Filter': 'Number',
        'Symbol': 'FSYM'
    },
    'P': {
        'Show': true,
        'Filter': 'Number',
        'Symbol': 'TSYM'
    },
    'TOTAL': {
        'Show': true,
        'Filter': 'Number',
        'Symbol': 'TSYM'
    }
};
CCC.TRADE.pack = function(tradeObject) {
    var mask = 0;
    var packedTrade = '';
    for (var field in tradeObject) {
        packedTrade += '~' + tradeObject[field];
        mask |= this.FIELDS[field];
    }
    return packedTrade.substr(1) + '~' + mask.toString(16);
};
CCC.TRADE.unpack = function(tradeString) {
    var valuesArray = tradeString.split("~");
    var valuesArrayLenght = valuesArray.length;
    var mask = valuesArray[valuesArrayLenght - 1];
    var maskInt = parseInt(mask, 16);
    var unpackedTrade = {};
    var currentField = 0;
    for (var property in this.FIELDS) {
        if (this.FIELDS[property] === 0) {
            unpackedTrade[property] = valuesArray[currentField];
            currentField++;
        } else if (maskInt & this.FIELDS[property]) {
            unpackedTrade[property] = valuesArray[currentField];
            currentField++;
        }
    }
    return unpackedTrade;
}
CCC.TRADE.getKey = function(tradeObject) {
    return tradeObject['T'] + '~' + tradeObject['M'] + '~' + tradeObject[
        'FSYM'] + '~' + tradeObject['TSYM'];
};
CCC.CURRENT = CCC.CURRENT || {};
CCC.CURRENT.FLAGS = {
    'PRICEUP': 0x1,
    'PRICEDOWN': 0x2,
    'PRICEUNCHANGED': 0x4,
    'BIDUP': 0x8,
    'BIDDOWN': 0x10,
    'BIDUNCHANGED': 0x20,
    'OFFERUP': 0x40,
    'OFFERDOWN': 0x80,
    'OFFERUNCHANGED': 0x100,
    'AVGUP': 0x200,
    'AVGDOWN': 0x400,
    'AVGUNCHANGED': 0x800
};
CCC.CURRENT.FIELDS = {
    'TYPE': 0x0,
    'MARKET': 0x0,
    'FROMSYMBOL': 0x0,
    'TOSYMBOL': 0x0,
    'FLAGS': 0x0,
    'PRICE': 0x1,
    'BID': 0x2,
    'OFFER': 0x4,
    'LASTUPDATE': 0x8,
    'AVG': 0x10,
    'LASTVOLUME': 0x20,
    'LASTVOLUMETO': 0x40,
    'LASTTRADEID': 0x80,
    'VOLUMEHOUR': 0x100,
    'VOLUMEHOURTO': 0x200,
    'VOLUME24HOUR': 0x400,
    'VOLUME24HOURTO': 0x800,
    'OPENHOUR': 0x1000,
    'HIGHHOUR': 0x2000,
    'LOWHOUR': 0x4000,
    'OPEN24HOUR': 0x8000,
    'HIGH24HOUR': 0x10000,
    'LOW24HOUR': 0x20000,
    'LASTMARKET': 0x40000
};
CCC.CURRENT.DISPLAY = CCC.CURRENT.DISPLAY || {};
CCC.CURRENT.DISPLAY.FLAGSLINK = {
    'PRICEUP': ['PRICEDOWN', 'PRICEUNCHANGED'],
    'PRICEDOWN': ['PRICEUP', 'PRICEUNCHANGED'],
    'PRICEUNCHANGED': ['PRICEUP', 'PRICEDOWN'],
    'BIDUP': ['BIDDOWN', 'BIDUNCHANGED'],
    'BIDDOWN': ['BIDUP', 'BIDUNCHANGED'],
    'BIDUNCHANGED': ['BIDUP', 'BIDDOWN'],
    'OFFERUP': ['OFFERDOWN', 'OFFERUNCHANGED'],
    'OFFERDOWN': ['OFFERUP', 'OFFERUNCHANGED'],
    'OFFERUNCHANGED': ['OFFERUP', 'OFFERDOWN'],
    'AVGUP': ['AVGDOWN', 'AVGUNCHANGED'],
    'AVGDOWN': ['AVGUP', 'AVGUNCHANGED'],
    'AVGUNCHANGED': ['AVGUP', 'AVGDOWN']
};
CCC.CURRENT.DISPLAY.FIELDS = {
    'TYPE': {
        'Show': false,
        'Default': '5'
    },
    'MARKET': {
        'Show': true,
        'Filter': 'Market',
        'Default': 'N/A'
    },
    'FROMSYMBOL': {
        'Show': false,
        'Default': 'BTC'
    },
    'TOSYMBOL': {
        'Show': false,
        'Default': 'BTC'
    },
    'FLAGS': {
        'Show': false,
        'Default': 0
    },
    'PRICE': {
        'Show': true,
        'Filter': 'Number',
        'Symbol': 'TOSYMBOL',
        'Default': 1,
        'SortNumberAsWell': false
    },
    'BID': {
        'Show': true,
        'Filter': 'Number',
        'Symbol': 'TOSYMBOL',
        'Default': 1,
        'SortNumberAsWell': false
    },
    'OFFER': {
        'Show': true,
        'Filter': 'Number',
        'Symbol': 'TOSYMBOL',
        'Default': 1,
        'SortNumberAsWell': false
    },
    'LASTUPDATE': {
        'Show': true,
        'Filter': 'Date',
        'Format': 'yyyy MMMM dd HH:mm:ss',
        'Default': Math.floor((new Date()).getTime() / 1000)
    },
    'AVG': {
        'Show': true,
        ' Filter': 'Number',
        'Symbol': 'TOSYMBOL',
        'Default': 1,
        'SortNumberAsWell': false
    },
    'LASTVOLUME': {
        'Show': true,
        'Filter': 'Number',
        'Symbol': 'FROMSYMBOL',
        'Default': 0,
        'SortNumberAsWell': false
    },
    'LASTVOLUMETO': {
        'Show': true,
        'Filter': 'Number',
        'Symbol': 'TOSYMBOL',
        'Default': 0,
        'SortNumberAsWell': false
    },
    'LASTTRADEID': {
        'Show': true,
        'Filter': 'String',
        'Default': 0
    },
    'VOLUMEHOUR': {
        'Show': true,
        'Filter': 'Number',
        'Symbol': 'FROMSYMBOL',
        'Default': 0,
        'SortNumberAsWell': false
    },
    'VOLUMEHOURTO': {
        'Show': true,
        'Filter': 'Number',
        'Symbol': 'TOSYMBOL',
        'Default': 0,
        'SortNumberAsWell': false
    },
    'VOLUME24HOUR': {
        'Show': true,
        'Filter': 'Number',
        'Symbol': 'FROMSYMBOL',
        'Default': 0,
        'SortNumberAsWell': true
    },
    'VOLUME24HOURTO': {
        'Show': true,
        'Filter': 'Number',
        'Symbol': 'TOSYMBOL',
        'Default': 0,
        'SortNumberAsWell': true
    },
    'OPENHOUR': {
        'Show': true,
        'Filter': 'Number',
        'Symbol': 'TOSYMBOL',
        'Default': 1,
        'SortNumberAsWell': false
    },
    'HIGHHOUR': {
        'Show': true,
        'Filter': 'Number',
        'Symbol': 'TOSYMBOL',
        'Default': 1,
        'SortNumberAsWell': false
    },
    'LOWHOUR': {
        'Show': true,
        'Filter': 'Number',
        'Symbol': 'TOSYMBOL',
        'Default': 1,
        'SortNumberAsWell': false
    },
    'OPEN24HOUR': {
        'Show': true,
        'Filter': 'Number',
        'Symbol': 'TOSYMBOL',
        'Default': 1,
        'SortNumberAsWell': false
    },
    'HIGH24HOUR': {
        'Show': true,
        'Filter': 'Number',
        'Symbol': 'TOSYMBOL',
        'Default': 1,
        'SortNumberAsWell': false
    },
    'LOW24HOUR': {
        'Show': true,
        'Filter': 'Number',
        'Symbol': 'TOSYMBOL',
        'Default': 1,
        'SortNumberAsWell': false
    },
    'LASTMARKET': {
        'Show': true,
        'Filter': 'String',
        'Default': 'N/A'
    }
};
CCC.CURRENT.pack = function(currentObject) {
    var mask = 0;
    var packedCurrent = '';
    for (var property in this.FIELDS) {
        if (currentObject.hasOwnProperty(property)) {
            packedCurrent += '~' + currentObject[property];
            mask |= this.FIELDS[property];
        }
    }
    return packedCurrent.substr(1) + '~' + mask.toString(16);
};
CCC.CURRENT.unpack = function(value) {
    var valuesArray = value.split("~");
    var valuesArrayLenght = valuesArray.length;
    var mask = valuesArray[valuesArrayLenght - 1];
    var maskInt = parseInt(mask, 16);
    var unpackedCurrent = {};
    var currentField = 0;
    for (var property in this.FIELDS) {
        if (this.FIELDS[property] === 0) {
            unpackedCurrent[property] = valuesArray[currentField];
            currentField++;
        } else if (maskInt & this.FIELDS[property]) {
            if (property === 'LASTMARKET') {
                unpackedCurrent[property] = valuesArray[currentField];
            } else {
                unpackedCurrent[property] = parseFloat(valuesArray[
                    currentField]);
            }
            currentField++;
        }
    }
    return unpackedCurrent;
};
CCC.CURRENT.getKey = function(currentObject) {
    return currentObject['TYPE'] + '~' + currentObject['MARKET'] + '~' +
        currentObject['FROMSYMBOL'] + '~' + currentObject['TOSYMBOL'];
};
CCC.CURRENT.getKeyFromStreamerData = function(streamerData) {
    var valuesArray = streamerData.split("~");
    return valuesArray[0] + '~' + valuesArray[1] + '~' + valuesArray[2] +
        '~' + valuesArray[3];
};
CCC.ORDER = CCC.ORDER || {};
CCC.ORDER.FLAGS = {
    'ADD': 0x1,
    'REMOVE': 0x2,
    'CHANGE': 0x4,
    'NOACTION': 0x8
};
CCC.ORDER.SIDE = {
    'BID': 0x1,
    'ASK': 0x2
};
CCC.ORDER.FIELDS = {
    'T': 0x0,
    'M': 0x0,
    'FSYM': 0x0,
    'TSYM': 0x0,
    'S': 0x0,
    'F': 0x0,
    'SEQ': 0x0,
    'P': 0x0,
    'Q': 0x0
};
CCC.ORDER.FIELDSNOKEY = {
    'P': 0x0,
    'Q': 0x0
};
CCC.ORDER.DISPLAY = CCC.ORDER.DISPLAY || {};
CCC.ORDER.DISPLAY.FIELDS = {
    'T': {
        "Show": false,
        'Filter': 'None'
    },
    'M': {
        "Show": true,
        'Filter': 'Market'
    },
    'FSYM': {
        "Show": true,
        'Filter': 'CurrencySymbol'
    },
    'TSYM': {
        "Show": true,
        'Filter': 'CurrencySymbol'
    },
    'S': {
        "Show": true,
        'Filter': 'Integer'
    },
    'F': {
        "Show": true,
        'Filter': 'Integer'
    },
    'SEQ': {
        'Show': false,
        'Filter': 'Integer'
    },
    'P': {
        'Show': true,
        'Filter': 'Number',
        'Symbol': 'TSYM'
    },
    'Q': {
        'Show': true,
        'Filter': 'Number',
        'Symbol': 'NONE'
    }
};
CCC.ORDER.pack = function(orderObject) {
    var packedOrder = '';
    for (var property in this.FIELDS) {
        if (orderObject.hasOwnProperty(property)) {
            packedOrder += '~' + orderObject[property];
        }
    }
    return packedOrder.substr(1);
};
CCC.ORDER.packNoType = function(orderObject) {
    var packedOrder = '';
    for (var property in this.FIELDS) {
        if (property == 'T') {
            continue;
        }
        if (orderObject.hasOwnProperty(property)) {
            packedOrder += '~' + orderObject[property];
        }
    }
    return packedOrder.substr(1);
};
CCC.ORDER.packNoKey = function(orderObject) {
    var packedOrder = '';
    for (var property in this.FIELDSNOKEY) {
        if (orderObject.hasOwnProperty(property)) {
            packedOrder += '~' + orderObject[property];
        }
    }
    return packedOrder.substr(1);
};
CCC.ORDER.unpack = function(orderString) {
    var valuesArray = orderString.split("~");
    var totalValues = valuesArray.length;
    var unpackedOrder = {};
    var currentField = 0;
    for (var property in this.FIELDS) {
        if (this.FIELDS[property] === 0 && currentField < totalValues) {
            if (this.DISPLAY.FIELDS[property].Filter == 'Number') {
                unpackedOrder[property] = parseFloat(valuesArray[
                    currentField]);
            } else if (this.DISPLAY.FIELDS[property].Filter == 'Integer') {
                unpackedOrder[property] = parseInt(valuesArray[currentField],
                    10);
            } else {
                unpackedOrder[property] = valuesArray[currentField];
            }
            currentField++;
        }
    }
    return unpackedOrder;
};
CCC.ORDER.getKey = function(orderObject) {
    return orderObject['T'] + '~' + orderObject['M'] + '~' + orderObject[
        'FSYM'] + '~' + orderObject['TSYM'];
};
CCC.ORDER.getOrderBookKey = function(orderObject) {
    return orderObject['M'] + '~' + orderObject['FSYM'] + '~' + orderObject[
        'TSYM'];
};
CCC.ORDER.unpackOrderBookKey = function(orderBookKey) {
    var parts = orderBookKey.split('~');
    return {
        M: parts[0],
        FSYM: parts[1],
        TSYM: parts[2]
    };
};
CCC.ORDER.getObjectKey = function(orderObject) {
    return orderObject['P'] + '~' + orderObject['S'];
};
CCC.ORDER.getExchangeKey = function(orderObject) {
    return orderObject['T'] + '~' + orderObject['M'];
};
CCC.ORDER.getTypeText = function(orderObject) {
    for (var property in this.FLAGS) {
        if (this.FLAGS[property] === orderObject.F) {
            return property;
        }
    }
    return "N/A";
};;;;
angular.module('ccc-app').factory('cookieService', ['$rootScope', function cookieServiceFactory(
    $rootScope) {
    var cookieServiceInterface = {};
    cookieServiceInterface.setItem = function(key, value) {
        cookieServiceInterface.setCookie(key, value, 1000, '/');
    };
    cookieServiceInterface.removeItem = function(key, value) {
        cookieServiceInterface.setCookie(key, value, -1, '/');
    };
    cookieServiceInterface.setCookie = function(cname, cvalue,
        exdays, path) {
        var d = new Date();
        d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));
        var expires = "expires=" + d.toUTCString();
        var cnpCookie = cname + "=" + cvalue + "; " + expires +
            "; path=" + path;
        document.cookie = cnpCookie;
    };
    cookieServiceInterface.getCookie = function(cname) {
        var name = cname + "=";
        var ca = document.cookie.split(';');
        for (var i = 0; i < ca.length; i++) {
            var c = ca[i];
            while (c.charAt(0) == ' ') c = c.substring(1);
            if (c.indexOf(name) == 0) return c.substring(name.length,
                c.length);
        }
        return "";
    };
    return cookieServiceInterface;
}]);
angular.module('ccc-app').factory('cccLocalStorage', ['cookieService', function cccLocalStorageFactory(
    cookieService) {
    var cccLocalStorageInterface = {};
    var localStorageSupported = false;
    try {
        localStorage.setItem("localStorageSupported", true);
        localStorage.removeItem("localStorageSupported");
        localStorageSupported = true;
    } catch (e) {
        localStorageSupported = false;
    };
    cccLocalStorageInterface.setObject = function(key, value) {
        if (localStorageSupported) {
            localStorage.setItem(key, JSON.stringify(value));
        }
    };
    cccLocalStorageInterface.getObject = function(key) {
        var objectToReturn = {};
        if (localStorageSupported) {
            objectToReturn = localStorage.getItem(key);
            if (objectToReturn == null) {
                objectToReturn = {};
            } else {
                objectToReturn = JSON.parse(objectToReturn);
            }
        }
        return objectToReturn;
    };
    cccLocalStorageInterface.setItem = function(key, value) {
        if (localStorageSupported) {
            localStorage.setItem(key, value);
        } else {
            cookieService.setItem(key, value);
        }
    };
    cccLocalStorageInterface.removeItem = function(key) {
        if (localStorageSupported) {
            localStorage.removeItem(key);
        } else {
            cookieService.removeItem(key);
        }
    };
    cccLocalStorageInterface.getText = function(key) {
        var itemValue = '';
        if (localStorageSupported) {
            itemValue = localStorage.getItem(key);
        } else {
            itemValue = cookieService.getCookie(key);
        }
        if (itemValue === null) {
            return '';
        }
        return itemValue;
    }
    cccLocalStorageInterface.getInteger = function(key) {
        var itemValue = 0;
        if (localStorageSupported) {
            itemValue = localStorage.getItem(key);
        } else {
            itemValue = cookieService.getCookie(key);
        }
        if (itemValue === null) {
            return 0;
        }
        return parseInt(itemValue, 10);
    };
    return cccLocalStorageInterface;
}]);
angular.module('ccc-app').factory('cccLightsService', ['$rootScope',
    'cookieService',
    function cccLightsService($rootScope, cookieService) {
        var cccLightsServiceInterface = {};
        var lightsOffKey = 'lightsOff';
        cccLightsServiceInterface.isOn = function() {
            if (cookieService.getCookie(lightsOffKey) === '') {
                return true;
            }
            return false;
        };
        cccLightsServiceInterface.turnOn = function() {
            cookieService.removeItem(lightsOffKey, '1');
            $rootScope.$emit("LightsChange");
        };
        cccLightsServiceInterface.turnOff = function() {
            cookieService.setItem(lightsOffKey, '1');
            $rootScope.$emit("LightsChange", '1');
        };
        return cccLightsServiceInterface;
    }
]);
angular.module('ccc-app').factory('profileManager', ['$http', '$filter',
    function profileManagerFactory($http, $filter) {
        var profileStatsData = {};
        var profileData = {};
        var utilStatic = CCC.STATIC.UTIL;
        return {
            setAvatarUrl: function(avatarUrl) {
                profileData.AvatarUrl = avatarUrl;
            },
            setId: function(cryptopianId) {
                profileData.Id = cryptopianId;
            },
            setUsername: function(username) {
                profileData.Username = username;
            },
            setComment: function(comment) {
                profileData.Comment = comment;
            },
            setProfileStatsData: function(apiResponse) {
                profileStatsData = apiResponse["Data"];
            },
            getProfileStatsData: function() {
                return profileStatsData;
            },
            getProfileStat: function(statName, showSummaryValue) {
                if (profileStatsData.hasOwnProperty(statName)) {
                    if (showSummaryValue) {
                        return utilStatic.convertValueToDisplay("",
                            profileStatsData[statName].Value ||
                            0, $filter('number'), 'short', true
                        );
                    }
                    return profileStatsData[statName].Value || 0;
                }
                return 0;
            },
            getProfileBadges: function() {
                if (profileStatsData.hasOwnProperty("Badges")) {
                    return profileStatsData["Badges"];
                }
                return [];
            },
            getFollowers: function(userId, lastId) {
                var paramsForCall = {};
                paramsForCall['params'] = {};
                paramsForCall['params']['cId'] = userId;
                if (lastId) {
                    paramsForCall['params']['lId'] = lastId;
                }
                return $http.get("/api/cryptopian/followers/",
                    paramsForCall);
            },
            getFollowing: function(userId, lastId) {
                var paramsForCall = {};
                paramsForCall['params'] = {};
                paramsForCall['params']['cId'] = userId;
                if (lastId) {
                    paramsForCall['params']['lId'] = lastId;
                }
                return $http.get("/api/cryptopian/following/",
                    paramsForCall);
            },
            getAvatarUrl: function() {
                return profileData.AvatarUrl;
            },
            getId: function() {
                return profileData.Id;
            },
            getUsername: function() {
                return profileData.Username;
            },
            getComment: function() {
                return profileData.Comment;
            },
            getTotalActivity: function(showSummaryValue) {
                var totalActivities = 0;
                if (profileStatsData.hasOwnProperty('Posts')) {
                    totalActivities += parseInt(profileStatsData.Posts
                        .Value);
                }
                if (profileStatsData.hasOwnProperty('Reviews')) {
                    totalActivities += parseInt(profileStatsData.Reviews
                        .Value);
                }
                if (profileStatsData.hasOwnProperty('Following')) {
                    totalActivities += parseInt(profileStatsData.Following
                        .Value);
                }
                if (profileStatsData.hasOwnProperty('Comments')) {
                    totalActivities += parseInt(profileStatsData.Comments
                        .Value);
                }
                if (profileStatsData.hasOwnProperty('Agrees')) {
                    totalActivities += parseInt(profileStatsData.Agrees
                        .Value);
                }
                if (profileStatsData.hasOwnProperty('Disagrees')) {
                    totalActivities += parseInt(profileStatsData.Disagrees
                        .Value);
                }
                if (profileStatsData.hasOwnProperty('QuizzesTaken')) {
                    totalActivities += parseInt(profileStatsData.QuizzesTaken
                        .Value);
                }
                if (showSummaryValue) {
                    return utilStatic.convertValueToDisplay("",
                        totalActivities, $filter('number'),
                        'short', true);
                }
                return totalActivities;
            }
        };
    }
]);
angular.module('ccc-app').factory('userManager', ['$rootScope', '$http',
    'toastNotifications',
    function userManagerFactory($rootScope, $http, toastNotifications) {
        var userProperties = {
            'isLoggedIn': false,
            'Id': '',
            'Username': '',
            'Activated': false,
            'AvatarUrl': '',
            'EmailAddress': '',
            'Roles': [],
            'Portfolios': [],
            'isFollowing': false,
            'isShowingLogin': false
        };
        var userProfileData = {};
        var setLoggedInPrivate = function(value) {
            userProperties.isLoggedIn = value;
            $rootScope.$emit("LoginValueChange", value);
        };
        var mergeUserProperties = function(newUserProperties) {
            for (var userProp in newUserProperties) {
                userProperties[userProp] = newUserProperties[
                    userProp];
            }
        };
        return {
            FOLLOWING: {
                CRYPTOPIAN: 0,
                COIN: 1,
                EXCHANGE: 2
            },
            initUser: function(newUserProperties) {
                mergeUserProperties(newUserProperties);
            },
            setUserProfileData: function(apiResponse) {
                userProfileData = apiResponse["Data"];
            },
            updateProfileEmailNotificationsNoEmail: function(value) {
                if (userProfileData.hasOwnProperty('Notifications')) {
                    var notifications = userProfileData[
                        'Notifications'];
                    notifications[0].CurrentValue = value;
                    if (value) {
                        for (var i = 1; i < notifications.length; i++) {
                            if (notifications[i].Type == 'checkbox') {
                                notifications[i].CurrentValue =
                                    false;
                            }
                            if (notifications[i].Type == 'dropdown') {
                                notifications[i].CurrentValue =
                                    notifications[i].Values[
                                        notifications[i].Values.length -
                                        1];
                            }
                        }
                    } else {
                        for (var i = 1; i < notifications.length; i++) {
                            if (notifications[i].Type == 'checkbox') {
                                notifications[i].CurrentValue =
                                    true;
                            }
                            if (notifications[i].Type == 'dropdown') {
                                notifications[i].CurrentValue =
                                    notifications[i].Values[0];
                            }
                        }
                    }
                    userProfileData['Notifications'] =
                        notifications;
                }
            },
            setUserStatsData: function(apiResponse) {
                userStatsData = apiResponse["Data"];
            },
            setCryptopianRoles: function(value) {
                userProperties.Roles = value;
            },
            setLoggedIn: function(value) {
                setLoggedInPrivate(value);
            },
            setCryptopianId: function(value) {
                userProperties.Id = value;
            },
            setUsername: function(value) {
                userProperties.Username = value;
            },
            setAvatarUrl: function(value) {
                userProperties.AvatarUrl = value;
            },
            setEmailAddress: function(value) {
                userProperties.EmailAddress = value;
            },
            setActivated: function(value) {
                userProperties.Activated = value;
            },
            setFollowing: function(value) {
                userProperties.isFollowing = value;
            },
            setShowingLogin: function(value) {
                userProperties.isShowingLogin = value;
            },
            setPortfolioSummary: function(apiResponse) {
                userProperties.PortfolioSummary = apiResponse.Data;
            },
            getActivated: function() {
                return userProperties.Activated;
            },
            isFollowing: function() {
                return userProperties.isFollowing;
            },
            isLoggedIn: function() {
                return userProperties.isLoggedIn;
            },
            isShowingLogin: function() {
                return userProperties.isShowingLogin;
            },
            getCryptopianId: function() {
                return userProperties.Id;
            },
            getUsername: function() {
                return userProperties.Username;
            },
            getAvatarUrl: function() {
                return userProperties.AvatarUrl;
            },
            getEmailAddress: function() {
                return userProperties.EmailAddress;
            },
            getUserProfileData: function() {
                return userProfileData;
            },
            getUserStatsData: function() {
                return userStatsData;
            },
            getCryptopianAsFollower: function() {
                return {
                    Id: userProperties.Id,
                    Name: userProperties.Username,
                    ImageUrl: userProperties.AvatarUrl,
                    Url: "/profile/" + userProperties.Username +
                        "/",
                    Type: "Cryptopian"
                };
            },
            logout: function() {
                $http.get("/api/cryptopian/logout/").success(
                    function(data, status, headers, config) {
                        toastNotifications.addNotification(
                            'success',
                            '<div>Logout successfull.</div>' +
                            '<div>Bye, bye ' +
                            userProperties.Username +
                            '. We hope to see you again soon!</div>'
                        );
                        setLoggedInPrivate(false);
                        mergeUserProperties(data.Data);
                    }).error(function(data, status, headers,
                    config) {
                    toastNotifications.addNotification(
                        'error',
                        '<div>Could not log out.</div>' +
                        '<div>It seems you are not logged in.</div>'
                    );
                });
            },
            updateFields: function(objectWithUpdateFields) {
                return $http.post("/api/cryptopian/update/",
                    objectWithUpdateFields);
            },
            changeFollowingStatus: function(nodeId, followingType) {
                var paramsForCall = {};
                paramsForCall['params'] = {};
                paramsForCall['params']['id'] = nodeId;
                paramsForCall['params']['ft'] = followingType;
                return $http.get("/api/cryptopian/follow/",
                    paramsForCall);
            },
            banCryptopian: function(nodeId, reason) {
                var paramsForCall = {};
                paramsForCall['params'] = {};
                paramsForCall['params']['id'] = nodeId;
                paramsForCall['params']['reason'] = reason;
                return $http.get("/api/cryptopian/ban/",
                    paramsForCall);
            },
            unBanCryptopian: function(nodeId) {
                var paramsForCall = {};
                paramsForCall['params'] = {};
                paramsForCall['params']['id'] = nodeId;
                return $http.get("/api/cryptopian/unban/",
                    paramsForCall);
            },
            checkFollowingStatus: function(nodeId) {
                var paramsForCall = {};
                paramsForCall['params'] = {};
                paramsForCall['params']['id'] = nodeId;
                return $http.get("/api/cryptopian/isfollowing/",
                    paramsForCall);
            },
            getFollowers: function(userId, lastId) {
                var paramsForCall = {};
                paramsForCall['params'] = {};
                paramsForCall['params']['cId'] = userId;
                if (lastId) {
                    paramsForCall['params']['lId'] = lastId;
                }
                return $http.get("/api/cryptopian/followers/",
                    paramsForCall);
            },
            deleteAllForumActivity: function(cryptopianId) {
                return $http.get("/api/forum/post/delete/", {
                    params: {
                        cryptopianId: cryptopianId
                    }
                });
            },
            getFollowing: function(userId, lastId) {
                var paramsForCall = {};
                paramsForCall['params'] = {};
                paramsForCall['params']['cId'] = userId;
                if (lastId) {
                    paramsForCall['params']['lId'] = lastId;
                }
                return $http.get("/api/cryptopian/following/",
                    paramsForCall);
            },
            loadProfileDataFromApi: function() {
                return $http.get("/api/cryptopian/userinfo/");
            },
            hasSubscription: function(subName) {
                if (userProperties.Roles.length == 0) {
                    return false;
                }
                if (userProperties.Roles.indexOf(subName) > -1) {
                    return true;
                }
                return false;
            },
            canDelete: function() {
                if (userProperties.Roles.length == 0) {
                    return false;
                }
                if (userProperties.Roles.indexOf("ForumMod") > -1) {
                    return true;
                }
                return false;
            },
            canMakeSticky: function() {
                if (userProperties.Roles.length == 0) {
                    return false;
                }
                if (userProperties.Roles.indexOf(
                        "Admin (do not use)") > -1) {
                    return true;
                }
                return false;
            },
            canBan: function() {
                if (userProperties.Roles.length == 0) {
                    return false;
                }
                if (userProperties.Roles.indexOf("ForumAdmin") > -1) {
                    return true;
                }
                return false;
            },
            canDeleteAllForumActivity: function() {
                if (userProperties.Roles.length == 0) {
                    return false;
                }
                if (userProperties.Roles.indexOf(
                        "Admin (do not use)") > -1) {
                    return true;
                }
                return false;
            },
            canEdit: function(idOfOwner) {
                if (!userProperties.isLoggedIn) {
                    return userProperties.isLoggedIn;
                }
                if (userProperties.Id == idOfOwner) {
                    return true;
                }
                if (userProperties.Roles.length == 0) {
                    return false;
                }
                if (userProperties.Roles.indexOf(
                        "Admin (do not use)") > -1) {
                    return true;
                }
                return false;
            }
        };
    }
]);
angular.module('ccc-app').factory('totals', ['$filter', function totalsFactory(
    $filter) {
    var totals = {};
    var utilStatic = CCC.STATIC.UTIL;
    var text = {
        'comment': {
            'p': 'comments',
            's': 'comment',
            'sValues': [1]
        },
        'pageView': {
            'p': 'page views',
            's': 'page view',
            'sValues': [1]
        }
    }
    var totalsInterface = {};
    totalsInterface.postsOnPage = function(pageId, apiResponse) {
        totals['totalPosts'] = apiResponse['Total'][pageId][
            'Posts'
        ];
    };
    totalsInterface.pageViews = function(apiResponse) {
        if (apiResponse.Type == "100") {
            totals['totalPageViews'] = apiResponse.PageViews;
        } else {
            totals['totalPageViews'] = 0;
        }
    };
    totalsInterface.new = function(name, value) {
        totals[name] = value;
    };
    totalsInterface.exists = function(name) {
        if (totals.hasOwnProperty(name)) {
            return true;
        }
        return false;
    };
    totalsInterface.getText = function(name, base) {
        var currentTotal = totals[name] || 0;
        if (text.hasOwnProperty(base)) {
            if (text[base].sValues.indexOf(currentTotal) > -1) {
                return text[base].s;
            } else {
                return text[base].p;
            }
        }
        return "";
    };
    totalsInterface.inc = function(name, value) {
        if (totals.hasOwnProperty(name)) {
            totals[name] += value;
        }
    };
    totalsInterface.dec = function(name, value) {
        if (totals.hasOwnProperty(name)) {
            totals[name] -= value;
        }
    };
    totalsInterface.get = function(name) {
        if (totals.hasOwnProperty(name)) {
            return utilStatic.convertValueToDisplay('', totals[
                name], $filter('number'), 'short', true)
        }
        return 0;
    };
    totalsInterface.getFullNumber = function(name) {
        if (totals.hasOwnProperty(name)) {
            return utilStatic.convertValueToDisplay('', totals[
                name], $filter('number'), 'full', true)
        }
        return 0;
    };
    return totalsInterface;
}]);
angular.module('ccc-app').factory('pageInfo', ['$http', '$timeout', '$filter',
    '$window', '$location', 'dateParsing',
    function pageInfoFactory($http, $timeout, $filter, $window,
        $location, dateParsing) {
        var aboutItems = [];
        var displayAboutItems = [];
        var exchangesInfo = {};
        var pageTrackingCode = 0;
        var pageTrackingPromise;
        var pageTrackingType;
        var secondLevelNav = [];
        var currentPostId = 0;
        var currentReviewId = 0;
        var seoInfo = {};
        var initialSeoInfo = {};
        var generalInfo = {};
        var pageSubs = [];
        var streamerDataRaw = [];
        var pageViewRecorded = true;
        return {
            trackPage: function(trackingCode, type) {
                if (trackingCode) {
                    pageTrackingCode = trackingCode;
                    pageTrackingType = type;
                    if (pageTrackingPromise) {
                        $timeout.cancel(pageTrackingPromise);
                    }
                    pageTrackingPromise = $timeout(function() {
                        var objectToPost = {};
                        objectToPost.Code =
                            pageTrackingCode;
                        objectToPost.Type =
                            pageTrackingType;
                        $http.post(
                            "/api/tracking/pageview/",
                            objectToPost);
                        if (!pageViewRecorded) {
                            $window.ga('send', 'pageview', {
                                page: $location.url()
                            });
                        } else {
                            pageViewRecorded = false;
                        }
                    }, 10000, false);
                }
            },
            convertStringToNumber: function(data) {
                if (data != '') {
                    if (data == "0") {
                        return "Not Applicable";
                    }
                    return $filter('number')(data, 1);
                }
                return '-';
            },
            setCoinPageInfo: function(apiResponse) {
                seoInfo = apiResponse.Data.SEO;
                for (var attr in apiResponse.Data.SEO) {
                    initialSeoInfo[attr] = apiResponse.Data.SEO[
                        attr];
                }
                generalInfo = apiResponse.Data.General;
                pageSubs = apiResponse.Data.Subs;
                streamerDataRaw = apiResponse.Data.StreamerDataRaw;
                this.addDisplayAboutItem({
                    'label': 'Max Supply',
                    'text': this.convertStringToNumber(
                        generalInfo.TotalCoinSupply),
                    'visible': true
                });
                this.addDisplayAboutItem({
                    'label': 'Algorithm',
                    'text': generalInfo.Algorithm || '-',
                    'visible': true
                });
                this.addDisplayAboutItem({
                    'label': 'Proof Type',
                    'text': generalInfo.ProofType || '-',
                    'visible': true
                });
                this.addDisplayAboutItem({
                    'label': 'Start Date',
                    'text': generalInfo.StartDate || '-',
                    'visible': true
                });
                this.addDisplayAboutItem({
                    'label': 'Twitter',
                    'text': '<a href="https://twitter.com/' +
                        generalInfo.Twitter.replace('@', '') +
                        '" target="_blank">' + generalInfo.Twitter +
                        '</a>' || '-',
                    'visible': true
                });
                this.addDisplayAboutItem({
                    'label': 'Website',
                    'text': generalInfo.Website || '-',
                    'visible': true
                });
                this.addDisplayAboutItem({
                    'label': 'DifficultyAdj.',
                    'text': generalInfo.DifficultyAdjustment ||
                        "-",
                    'visible': true
                });
                this.addDisplayAboutItem({
                    'label': 'BlockRR.',
                    'text': generalInfo.BlockRewardReduction ||
                        "-",
                    'visible': true
                });
                this.addDisplayAboutItem({
                    'label': 'BlockNo.',
                    'text': this.convertStringToNumber(
                        generalInfo.BlockNumber),
                    'visible': true
                });
                this.addDisplayAboutItem({
                    'label': 'Network H/s',
                    'text': this.convertStringToNumber(
                        generalInfo.NetHashesPerSecond),
                    'visible': true
                });
                this.addDisplayAboutItem({
                    'label': 'Current Supply',
                    'text': this.convertStringToNumber(
                        generalInfo.TotalCoinsMined),
                    'visible': true
                });
                this.addDisplayAboutItem({
                    'label': 'Block Reward',
                    'text': this.convertStringToNumber(
                        generalInfo.BlockReward),
                    'visible': true
                });
            },
            setCurrentPageSection: function(pageSection) {
                generalInfo.CurrentPageSection = pageSection;
            },
            setExchangePageInfo: function(apiResponse) {
                seoInfo = apiResponse.Data.SEO;
                for (var attr in apiResponse.Data.SEO) {
                    initialSeoInfo[attr] = apiResponse.Data.SEO[
                        attr];
                }
                generalInfo = apiResponse.Data.General;
                pageSubs = apiResponse.Data.Subs;
                streamerDataRaw = apiResponse.Data.StreamerDataRaw;
                this.addDisplayAboutItem({
                    'label': 'Country',
                    'text': generalInfo.Country || '-',
                    'visible': true
                });
                this.addDisplayAboutItem({
                    'label': 'Twitter',
                    'text': '<a href="https://twitter.com/' +
                        generalInfo.Twitter.replace('@', '') +
                        '" target="_blank">' + generalInfo.Twitter +
                        '</a>' || '-',
                    'visible': true
                });
                this.addDisplayAboutItem({
                    'label': 'Website',
                    'text': generalInfo.Website || '-',
                    'visible': true
                });
            },
            setAllExchangesInfo: function(apiResponse) {
                exchangesInfo = apiResponse.Data;
            },
            setPaymentMethods: function(methodsList) {
                generalInfo.PaymentMethods = [];
                if (methodsList != "") {
                    generalInfo.PaymentMethods = methodsList.split(
                        ",");
                }
            },
            setDepositMethods: function(methodsList) {
                generalInfo.DepositMethods = [];
                if (methodsList != "") {
                    generalInfo.DepositMethods = methodsList.split(
                        ",");
                }
            },
            setWithdrawalMethods: function(methodsList) {
                generalInfo.WithdrawalMethods = [];
                if (methodsList != "") {
                    generalInfo.WithdrawalMethods = methodsList.split(
                        ",");
                }
            },
            setHistoricalPriceData: function(apiHistoricalData) {
                generalInfo.HistoricalPriceData = apiHistoricalData
                    .Data;
            },
            setPageId: function(id) {
                generalInfo.Id = id;
            },
            setBaseUrl: function(bUrl) {
                generalInfo.BaseAngularUrl = bUrl;
            },
            setDocumentType: function(dType) {
                generalInfo.DocumentType = dType;
            },
            setH1Text: function(value) {
                generalInfo.H1Text = value;
            },
            setSymbol: function(value) {
                generalInfo.Symbol = value;
            },
            setToSymbol: function(value) {
                generalInfo.ToSymbol = value;
            },
            setInfoName: function(value) {
                generalInfo.Name = value;
            },
            setInfoDescription: function(value) {
                generalInfo.Description = value;
            },
            setFeaturesInfo: function(value) {
                generalInfo.Features = value;
            },
            setTechnologyInfo: function(value) {
                generalInfo.Technology = value;
            },
            setLogo: function(value) {
                generalInfo.ImageUrl = value;
            },
            addDisplayAboutItem: function(item) {
                displayAboutItems.push(item);
            },
            setDisplayAboutItems: function(arrayOfObjects) {
                displayAboutItems = arrayOfObjects;
            },
            setForumId: function(value) {
                generalInfo.Id = value;
            },
            setReviewsId: function(value) {
                generalInfo.Id = value;
            },
            setSecondLevelNav: function(arrayOfObjects) {
                secondLevelNav = arrayOfObjects;
            },
            setCurrentPostId: function(postId) {
                currentPostId = postId;
            },
            setCurrentReviewId: function(reviewId) {
                currentReviewId = reviewId;
            },
            setBaseSEOTitle: function(baseSEOTitle) {
                seoInfo.BaseSEOTitle = baseSEOTitle;
            },
            setSEOTitle: function(seoTitle) {
                seoInfo.PageTitle = seoTitle;
            },
            setInitialSEOTitle: function() {
                seoInfo.BaseSEOTitle = initialSeoInfo.PageTitle.replace(
                    generalInfo.H1Text + ' - ', '');
            },
            addToSymbolToSEOTitle: function() {
                seoInfo.PageTitle = generalInfo.H1Text + ' - ' +
                    generalInfo.ToSymbol + ' - ' + seoInfo.BaseSEOTitle;
            },
            setBaseSEODescription: function(baseSEODescription) {
                seoInfo.BaseSEOPageDescription = baseSEODescription;
            },
            setSEODescription: function(seoDescription) {
                seoInfo.PageDescription = seoDescription;
            },
            setInitialSEODescription: function() {
                seoInfo.BaseSEOPageDescription =
                    "{{currencyPair}} - " + initialSeoInfo.PageDescription;
            },
            addToSymbolToSEODescription: function() {
                seoInfo.PageDescription = seoInfo.BaseSEOPageDescription
                    .replace(/{{currencyPair}}/g, generalInfo.H1Text +
                        ' - ' + generalInfo.ToSymbol);
            },
            setOgImageWidth: function(ogImageWidth) {
                seoInfo.OgImageWidth = ogImageWidth;
            },
            setInitialOgImageWidth: function() {
                seoInfo.OgImageWidth = initialSeoInfo.OgImageWidth;
            },
            setOgImageHeight: function(ogImageHeight) {
                seoInfo.OgImageHeight = ogImageHeight;
            },
            setInitialOgImageHeight: function() {
                seoInfo.OgImageHeight = initialSeoInfo.OgImageHeight;
            },
            setOgImage: function(ogImageUrl) {
                seoInfo.OgImageUrl = ogImageUrl;
            },
            setInitialOgImage: function() {
                seoInfo.OgImage = initialSeoInfo.OgImage;
            },
            hasSponsor: function() {
                return generalInfo.hasOwnProperty("Sponsor");
            },
            getSponsorTextTop: function() {
                if (this.hasSponsor()) {
                    if (generalInfo.Sponsor.hasOwnProperty(
                            "TextTop") && generalInfo.Sponsor.TextTop !=
                        "") {
                        return generalInfo.Sponsor.TextTop;
                    }
                }
                return "sponsored by";
            },
            getSponsorLink: function() {
                if (this.hasSponsor()) {
                    return generalInfo.Sponsor.Link;
                }
                return "https://wwww.cryptocompare.com";
            },
            getSponsorImageUrl: function() {
                if (this.hasSponsor()) {
                    return generalInfo.Sponsor.ImageUrl;
                }
                return
                    "https://wwww.cryptocompare.com/media/351339/crypto-compare-70-18.png";
            },
            getBaseUrl: function() {
                return generalInfo.BaseAngularUrl;
            },
            getDocumentType: function() {
                return generalInfo.DocumentType;
            },
            getH1Text: function() {
                return generalInfo.H1Text;
            },
            getH1TextTrimChars: function(stringToTrim) {
                var index = generalInfo.H1Text.indexOf(stringToTrim);
                if (index != -1)
                    return generalInfo.H1Text.substr(0, index)
                return generalInfo.H1Text;
            },
            getSymbol: function() {
                return generalInfo.Symbol;
            },
            getInfoName: function() {
                return generalInfo.Name;
            },
            getInfoDescription: function() {
                return generalInfo.Description;
            },
            getFeaturesInfo: function() {
                return generalInfo.Features;
            },
            getTechnologyInfo: function() {
                return generalInfo.Technology;
            },
            getLogo: function() {
                return generalInfo.ImageUrl;
            },
            getDisplayAboutItems: function() {
                return displayAboutItems;
            },
            getPageId: function() {
                return generalInfo.Id;
            },
            getForumId: function() {
                return generalInfo.Id;
            },
            getReviewsId: function() {
                return generalInfo.Id;
            },
            getSecondLevelNav: function() {
                return secondLevelNav;
            },
            getCoinsMined: function() {
                return generalInfo.TotalCoinsMined;
            },
            getTwitterHandle: function() {
                return generalInfo.Twitter;
            },
            getTwitterHandleNoAtSign: function() {
                return generalInfo.Twitter.replace('@', '');
            },
            getCurrentPostId: function() {
                return currentPostId;
            },
            getCurrentReviewId: function() {
                return currentReviewId;
            },
            getGeneralInfoItem: function(itemName) {
                if (generalInfo.hasOwnProperty(itemName)) {
                    return generalInfo[itemName];
                }
                return "";
            },
            getDangerTop: function() {
                return generalInfo.DangerTop;
            },
            getWarningTop: function() {
                return generalInfo.WarningTop;
            },
            getToSymbol: function() {
                return generalInfo.ToSymbol;
            },
            getInfoTop: function() {
                return generalInfo.InfoTop;
            },
            getSEOTitle: function() {
                return seoInfo.PageTitle;
            },
            getSEODescription: function() {
                return seoInfo.PageDescription;
            },
            getOgImageWidth: function() {
                return seoInfo.OgImageWidth;
            },
            getOgImageHeight: function() {
                return seoInfo.OgImageHeight;
            },
            getOgImage: function() {
                return seoInfo.OgImageUrl;
            },
            getPageSubs: function() {
                return pageSubs;
            },
            getStreamerDataRaw: function() {
                return streamerDataRaw;
            },
            getPaymentMethods: function() {
                return generalInfo.PaymentMethods || [];
            },
            getDepositMethods: function() {
                return generalInfo.DepositMethods || [];
            },
            getWithdrawalMethods: function() {
                return generalInfo.WithdrawalMethods || [];
            },
            getWebsite: function() {
                return generalInfo.AffiliateUrl || "";
            },
            getAllExchangesInfo: function() {
                return exchangesInfo;
            },
            hasHistoricalPriceData: function() {
                return generalInfo.hasOwnProperty(
                    "HistoricalPriceData");
            },
            getBasesCanURL: function() {
                if (generalInfo.hasOwnProperty('ToSymbol') &&
                    generalInfo.hasOwnProperty('CurrentPageSection')
                ) {
                    if (generalInfo.CurrentPageSection == "post") {
                        return seoInfo.BaseUrl + generalInfo.BaseAngularUrl +
                            generalInfo.CurrentPageSection + '/p_' +
                            currentPostId + '/';
                    } else if (generalInfo.CurrentPageSection ==
                        "influence" || generalInfo.CurrentPageSection ==
                        "forum") {
                        return seoInfo.BaseUrl + generalInfo.BaseAngularUrl +
                            generalInfo.CurrentPageSection + '/';
                    } else {
                        return seoInfo.BaseUrl + generalInfo.BaseAngularUrl +
                            generalInfo.CurrentPageSection + '/' +
                            generalInfo.ToSymbol;
                    }
                }
                return '';
            },
            getAMPURL: function() {
                if (generalInfo.CurrentPageSection == "post") {
                    return seoInfo.BaseUrl + generalInfo.BaseAngularUrl +
                        generalInfo.CurrentPageSection + '/p_' +
                        currentPostId + '/';
                } else if (generalInfo.CurrentPageSection ==
                    "forum") {
                    return seoInfo.BaseUrl + generalInfo.BaseAngularUrl +
                        generalInfo.CurrentPageSection + '/';
                }
                if (generalInfo.hasOwnProperty('ToSymbol')) {
                    return seoInfo.BaseUrl + generalInfo.BaseAngularUrl +
                        'overview/' + generalInfo.ToSymbol;
                }
                return seoInfo.BaseUrl + generalInfo.BaseAngularUrl +
                    'overview/USD';
            }
        };
    }
]);
angular.module('ccc-app').factory('pageAlerts', [function pageAlertsFactory() {
    var topAlerts = [];
    return {
        setTopAlerts: function(arrayOfObjects) {
            topAlerts = arrayOfObjects;
        },
        addDangerTopAlert: function(alertMessage) {
            topAlerts.push({
                type: 'danger',
                msg: alertMessage
            });
        },
        addWarningTopAlert: function(alertMessage) {
            topAlerts.push({
                type: 'warning',
                msg: alertMessage
            });
        },
        addSuccessTopAlert: function(alertMessage) {
            topAlerts.push({
                type: 'success',
                msg: alertMessage
            });
        },
        removeTopAlert: function(index) {
            topAlerts.splice(index, 1);
        },
        getTopAlerts: function() {
            return topAlerts;
        }
    };
}]);
angular.module('ccc-app').factory('toastNotifications', ['$timeout', '$http',
    function toastNotificationsFactory($timeout, $http) {
        var toastNotifications = [];
        var messageTypes = ['info', 'warning', 'error', 'success'];
        var messageTypeToTitle = {
            'info': "Update",
            'warning': "Warning...",
            'error': "Error!",
            'success': "Well done!"
        }
        var removeNotification = function(ts) {
            for (var i = 0, length = toastNotifications.length; i <
                length; i++) {
                if (toastNotifications[i].Timestamp == ts) {
                    toastNotifications.splice(i, 1);
                    return;
                }
            }
        }
        return {
            addNotification: function(type, message) {
                var timestamp = new Date().getTime();
                toastNotifications.push({
                    'Timestamp': timestamp,
                    'Title': messageTypeToTitle[type],
                    'Type': type,
                    'Message': message
                });
                $timeout(function() {
                    removeNotification(timestamp)
                }, 8000);
            },
            deleteNotification: function(timestamp) {
                removeNotification(timestamp);
            },
            getNotifications: function() {
                return toastNotifications;
            }
        };
    }
]);
angular.module('ccc-app').factory('notificationsManager', ['$http', '$interval',
    function notificationsManagerFactory($http, $interval) {
        var notifications = [];
        var fakeUsernames = ['Vladadry', 'jgpgw', 'sorinilie',
            'electronpozitive', 'ardeleanudaniela80', 'BitcoinPaul',
            'AngularRocks', 'Sorinel', 'SorSorIlie', 'MeVlad'
        ];
        var fakeDescription = ['Trezor wallet...',
            'Coinbase wallet issue... ',
            'Will bitcoin hit $200 this year?...',
            'Bought nutella with bitcoin..',
            'Bitfinex exchange fee...',
            'Is now a good time to buy DRK...',
            'What is SHA256 and how does it work?..',
            'I think this is just temporary...',
            'I diasgree, Jgpgw, I think...', 'Did you guys see...'
        ];
        var notifTypes = ['Agree', 'Disagree', 'Comment', 'Favorit'];
        var toType = ['Post', 'Review', 'Comment'];
        var createNotification = function() {
            var randomNum = Math.floor(Math.random() * 15) + 1;
            var newNotif = {
                Type: notifTypes[randomNum % 4],
                Time: Math.floor(new Date() / 1000),
                From: {
                    Type: 'Cryptopian',
                    Username: fakeUsernames[randomNum % 10],
                    AvatarUrl: 'https://randomuser.me/api/portraits/med/men/' +
                        randomNum + '.jpg'
                },
                To: {
                    Type: toType[randomNum % 3],
                    ID: 2123,
                    URL: '/forum/btc',
                    Description: fakeDescription[randomNum % 10]
                },
                'isNew': true,
                'isRead': false
            };
            return newNotif;
        };
        return {
            addNotification: function(notificationObject) {
                notifications.unshift(notificationObject);
                if (notifications.length > 20) {
                    var lastNotification = notifications.pop();
                    lastNotification = null;
                }
            },
            setNotifications: function(notificationsArray) {
                notifications = notificationsArray;
            },
            getNotifications: function() {
                return notifications;
            },
            getNewNotificaticationsCount: function() {
                var count = 0;
                angular.forEach(notifications, function(
                    notification) {
                    count += notification.isRead ? 0 : 1;
                });
                return count;
            },
            markAsRead: function() {
                angular.forEach(notifications, function(
                    notification) {
                    notification.isRead = true;
                });
                $http.post('/api/notifications/read').success(
                    function(data) {});
            }
        };
    }
]);
angular.module('ccc-app').factory('subscriptionManager', ['$rootScope', '$http',
    function subscriptionManagerFactory($rootScope, $http) {
        var utilStatic = CCC.STATIC.UTIL;
        var currentSubs = [];
        var currentToSymbol = '';
        var tradeSubs = [];
        var currentAGGSubsObj = {};
        var currentExchangesInfo = {};
        var currentSubsClasification = [];
        var currentSubsObject = {};
        var currentChartSubsObj = {};
        var currentTradeSubsObj = {};
        var currentAggKeysOrder = {};
        var orderOnEqual = {
            'BTC': 1,
            'USD': 2,
            'EUR': 3,
            'GBP': 4,
            'CNY': 5,
            'RUB': 7,
            'SGD': 8,
            'HKD': 9,
            'RON': 10
        };
        var currentAGGCharts = {};
        var currentOrderBookSubsObj = {};
        var defaultAggChart = {
            'exchange': 'N/A',
            'fromsymbol': 'N/A',
            'tosymbol': 'N/A'
        };
        var splitSub = function(sub) {
            var subParts = sub.split("~");
            var obj = {
                'TYPE': subParts[0]
            };
            switch (subParts[0]) {
                case CCC.STATIC.TYPE.TRADE:
                    obj['EXCHANGE'] = subParts[1];
                    obj['FROMSYMBOL'] = subParts[2];
                    obj['TOSYMBOL'] = subParts[3];
                    break;
                case CCC.STATIC.TYPE.CURRENTAGG:
                case CCC.STATIC.TYPE.CURRENT:
                    obj['EXCHANGE'] = subParts[1];
                    obj['FROMSYMBOL'] = subParts[2];
                    obj['TOSYMBOL'] = subParts[3];
                    break;
            }
            return obj;
        };
        var createTradeSub = function(obj) {
            return CCC.STATIC.TYPE.TRADE + '~' + obj.EXCHANGE + '~' +
                obj.FROMSYMBOL + '~' + obj.TOSYMBOL;
        };
        var createAggSub = function(obj) {
            return CCC.STATIC.TYPE.CURRENTAGG + '~CCCAGG~' + obj.FROMSYMBOL +
                '~' + obj.TOSYMBOL;
        };
        var createCurrentSub = function(obj) {
            return CCC.STATIC.TYPE.CURRENT + '~' + obj.EXCHANGE +
                '~' + obj.FROMSYMBOL + '~' + obj.TOSYMBOL;
        };
        var createOrderBookSub = function(obj) {
            return CCC.STATIC.TYPE.ORDERBOOK + '~' + obj.EXCHANGE +
                '~' + obj.FROMSYMBOL + '~' + obj.TOSYMBOL;
        };
        var createAggChart = function(obj) {
            return {
                'exchange': 'CCCAGG',
                'fromsymbol': obj.FROMSYMBOL,
                'tosymbol': obj.TOSYMBOL
            }
        };
        var createChartSub = function(obj) {
            return {
                'exchange': obj.EXCHANGE,
                'fromsymbol': obj.FROMSYMBOL,
                'tosymbol': obj.TOSYMBOL
            }
        };
        var aggSubsByToSymbol = function() {
            for (var i = 0; i < currentSubs.length; i++) {
                var addOrderBookSub = false;
                var subObj = splitSub(currentSubs[i]);
                if (!currentSubsObject.hasOwnProperty(subObj.TOSYMBOL)) {
                    currentSubsObject[subObj.TOSYMBOL] = [];
                }
                if (!currentTradeSubsObj.hasOwnProperty(subObj.TOSYMBOL)) {
                    currentTradeSubsObj[subObj.TOSYMBOL] = [];
                }
                if (!currentChartSubsObj.hasOwnProperty(subObj.TOSYMBOL)) {
                    currentChartSubsObj[subObj.TOSYMBOL] = [];
                }
                if (!currentOrderBookSubsObj.hasOwnProperty(subObj.TOSYMBOL) &&
                    currentExchangesInfo.hasOwnProperty(subObj.EXCHANGE) &&
                    currentExchangesInfo[subObj.EXCHANGE].OrderBook ==
                    true) {
                    currentOrderBookSubsObj[subObj.TOSYMBOL] = [];
                    addOrderBookSub = true;
                }
                currentTradeSubsObj[subObj.TOSYMBOL].push(
                    createTradeSub(subObj));
                currentSubsObject[subObj.TOSYMBOL].push(
                    createCurrentSub(subObj));
                currentChartSubsObj[subObj.TOSYMBOL].push(
                    createChartSub(subObj));
                if (addOrderBookSub) {
                    currentOrderBookSubsObj[subObj.TOSYMBOL].push(
                        createOrderBookSub(subObj));
                }
                if (!currentAGGCharts.hasOwnProperty(subObj.TOSYMBOL)) {
                    currentAGGCharts[subObj.TOSYMBOL] =
                        createAggChart(subObj);
                }
                if (!currentAGGSubsObj.hasOwnProperty(subObj.TOSYMBOL)) {
                    currentAGGSubsObj[subObj.TOSYMBOL] =
                        createAggSub(subObj);
                }
            }
            currentSubsClasification = Object.keys(
                currentSubsObject);
            if (currentSubsClasification.length > 1) {
                currentSubsClasification.sort(function(a, b) {
                    if (currentSubsObject[a].length >
                        currentSubsObject[b].length) {
                        return -1;
                    }
                    if (currentSubsObject[a].length <
                        currentSubsObject[b].length) {
                        return 1;
                    }
                    if (orderOnEqual.hasOwnProperty(a)) {
                        if (orderOnEqual.hasOwnProperty(b)) {
                            if (orderOnEqual[a] <
                                orderOnEqual[b]) {
                                return -1;
                            } else {
                                return 1;
                            }
                        } else {
                            return -1;
                        }
                    } else if (orderOnEqual.hasOwnProperty(
                            b)) {
                        return 1;
                    }
                    return 0;
                });
            };
        };
        return {
            hasSubs: function() {
                if (currentSubs.length > 0)
                    return true;
                if (tradeSubs.length > 0)
                    return true;
                return false;
            },
            setCurrentToSymbol: function(toSymbol) {
                currentToSymbol = toSymbol;
            },
            setCurrentSubs: function(subs, exchangesInfo) {
                currentSubs = subs;
                currentExchangesInfo = exchangesInfo;
                aggSubsByToSymbol();
                currentToSymbol = currentSubsClasification[0] || "";
            },
            setTradeSubs: function(subs) {
                tradeSubs = subs;
            },
            getTopCurrentSubs: function() {
                if (currentToSymbol != "" && currentSubsObject.hasOwnProperty(
                        currentToSymbol))
                    return currentSubsObject[currentToSymbol];
                return [];
            },
            getCurrentSubsObj: function() {
                return currentSubsObject;
            },
            getCurrentSubsByToSymbol: function(toSymbol) {
                return currentSubsObject[toSymbol] || [];
            },
            getCurrentSubsClassification: function() {
                return currentSubsClasification;
            },
            getCurrentDisplaySubs: function() {
                return currentSubsDisplay || [];
            },
            getComputedTradeSubsObj: function() {
                return currentTradeSubsObj;
            },
            getComputedTradeSubsBySymbol: function(toSymbol) {
                return currentTradeSubsObj[toSymbol] || [];
            },
            getComputedTradeSubs: function() {
                if (currentToSymbol != "" && currentTradeSubsObj.hasOwnProperty(
                        currentToSymbol))
                    return currentTradeSubsObj[currentToSymbol];
                return [];
            },
            getComputedOrderBookSubsObj: function() {
                return currentOrderBookSubsObj;
            },
            getComputedOrderBookSubsBySymbol: function(toSymbol) {
                return currentOrderBookSubsObj[toSymbol] || [];
            },
            getComputedOrderBookSubs: function() {
                if (currentToSymbol != "" &&
                    currentOrderBookSubsObj.hasOwnProperty(
                        currentToSymbol))
                    return currentOrderBookSubsObj[currentToSymbol];
                return [];
            },
            getInputTradeSubs: function() {
                return tradeSubs || [];
            },
            getCurrentAGGSubsObj: function(toSymbol) {
                return currentAGGSubsObj;
            },
            getCurrentAGGSubByToSymbol: function(toSymbol) {
                if (currentAGGSubsObj.hasOwnProperty(toSymbol))
                    return [currentAGGSubsObj[toSymbol]]
                return [];
            },
            getCurrentAGGSub: function() {
                if (currentToSymbol != "" && currentAGGSubsObj.hasOwnProperty(
                        currentToSymbol))
                    return [currentAGGSubsObj[currentToSymbol]]
                return [];
            },
            getCurrentChartObj: function() {
                return currentChartSubsObj;
            },
            getCurrentChartDataSets: function() {
                if (currentToSymbol != "" && currentChartSubsObj.hasOwnProperty(
                        currentToSymbol))
                    return currentChartSubsObj[currentToSymbol];
                return [];
            },
            getCurrentChartDataSetsByToSymbol: function(toSymbol) {
                return currentChartSubsObj[toSymbol] || [];
            },
            getCurrentAggChartByToSymbol: function(toSymbol) {
                return currentAGGCharts[toSymbol] ||
                    defaultAggChart;
            },
            getCurrentAggChartObj: function() {
                return currentAGGCharts
            },
            getCurrentAggChart: function() {
                if (currentToSymbol != "" && currentAGGCharts.hasOwnProperty(
                        currentToSymbol))
                    return currentAGGCharts[currentToSymbol];
                return defaultAggChart;
            },
            changeCurrency: function(symbol) {
                if (symbol != currentToSymbol) {
                    currentToSymbol = symbol;
                    $rootScope.$emit("ChangeCurrency", symbol);
                }
            },
            changeView: function(viewName) {
                $rootScope.$emit("ChangeView", viewName);
            },
            getCurrentToSymbol: function() {
                return currentToSymbol;
            },
            getNameForExchange: function(exchangeName) {
                return utilStatic.getNameForExchange(exchangeName);
            },
            getTopPairsFromMinApi: function(fsym, limit) {
                var paramsForCall = {};
                paramsForCall['params'] = {};
                paramsForCall['params']['fsym'] = fsym;
                if (limit) {
                    paramsForCall['params']['limit'] = limit;
                }
                return $http.get(
                    "https://min-api.cryptocompare.com/data/top/pairs",
                    paramsForCall);
            },
            getTopExchangesFromMinApi: function(fsym, tsym, limit) {
                var paramsForCall = {};
                paramsForCall['params'] = {};
                paramsForCall['params']['fsym'] = fsym;
                paramsForCall['params']['tsym'] = tsym;
                if (limit) {
                    paramsForCall['params']['limit'] = limit;
                }
                return $http.get(
                    "https://min-api.cryptocompare.com/data/top/exchanges",
                    paramsForCall);
            }
        };
    }
]);
angular.module('ccc-app').factory('dateParsing', ['$filter', function dateParsingFactory(
    $filter) {
    return {
        formatTimePast: function(timestamp) {
            var seconds = Math.floor((new Date() - new Date(
                timestamp)) / 1000);
            var interval = Math.floor(seconds / 31536000);
            if (interval > 1) {
                return interval + " years";
            } else if (interval == 1) {
                return "year";
            }
            interval = Math.floor(seconds / 2592000);
            if (interval > 1) {
                return interval + " months";
            } else if (interval == 1) {
                return "month";
            }
            interval = Math.floor(seconds / 86400);
            if (interval > 1) {
                return interval + " days";
            } else if (interval == 1) {
                return "day";
            }
            interval = Math.floor(seconds / 3600);
            if (interval > 1) {
                return interval + " hours";
            } else if (interval == 1) {
                return "hour";
            }
            interval = Math.floor(seconds / 60);
            if (interval >= 1) {
                return interval + " minutes";
            }
            return "minute";
        },
        formatFromNow: function(timestamp) {
            var seconds = Math.floor((new Date() - new Date(
                timestamp)) / 1000);
            var interval = Math.floor(seconds / 31536000);
            if (interval > 1) {
                return interval + " years ago";
            } else if (interval == 1) {
                return "1 year ago";
            }
            interval = Math.floor(seconds / 2592000);
            if (interval > 1) {
                return interval + " months ago";
            } else if (interval == 1) {
                return "1 month ago";
            }
            interval = Math.floor(seconds / 86400);
            if (interval > 1) {
                return interval + " days ago";
            } else if (interval == 1) {
                return "1 day ago";
            }
            interval = Math.floor(seconds / 3600);
            if (interval > 1) {
                return interval + " hours ago";
            } else if (interval == 1) {
                return "1 hour ago";
            }
            interval = Math.floor(seconds / 60);
            if (interval >= 1) {
                return interval + " min ago";
            }
            return "Just now";
        },
        formatFromNowDays: function(timestamp) {
            var seconds = Math.floor((new Date() - new Date(
                timestamp)) / 1000);
            var interval = Math.floor(seconds / 31536000);
            if (interval > 1) {
                return "over " + interval + " years ago";
            } else if (interval == 1) {
                return "over 1 year ago";
            }
            interval = Math.floor(seconds / 2592000);
            if (interval > 1) {
                if (interval == 12) {
                    return "1 year ago";
                }
                return interval + " months ago";
            } else if (interval == 1) {
                return "1 month ago";
            }
            interval = Math.floor(seconds / 86400);
            if (interval > 1) {
                return interval + " days ago";
            } else if (interval == 1) {
                return "yesterday";
            }
            return "today";
        },
        formatTimespan: function(seconds) {
            seconds = Math.floor(seconds);
            var d = Math.floor(seconds / 86400);
            var h = Math.floor(seconds % 86400 / 3600);
            var m = Math.floor(seconds % 3600 / 60);
            var s = Math.floor(seconds % 3600 % 60);
            return ((d > 0 ? d + "d:" : "") + (h > 0 ? (d > 0 &&
                    h < 10 ? "0" : "") + h + "h:" :
                "0h:") + (m > 0 ? (h > 0 && m < 10 ?
                "0" : "") + m + "m:" : "0m:") + (s < 10 ?
                "0" : "") + s + "s");
        },
        formatLongDate: function(timestamp) {
            return $filter('date')(new Date(timestamp),
                "EEEE, dd MMMM yyyy 'at' HH:mm");
        },
        formatShortDate: function(timestamp) {
            return $filter('date')(new Date(timestamp),
                "yyyy-MM-dd");
        },
        formatShortTime: function(timestamp) {
            return $filter('date')(new Date(timestamp), "HH:mm");
        },
        formatShortYear: function(timestamp) {
            return $filter('date')(new Date(timestamp), "yyyy");
        },
        formatMediumDateNoTime: function(timestamp) {
            return $filter('date')(new Date(timestamp),
                "dd MMMM yyyy");
        },
        formatLongDateNoTime: function(timestamp) {
            return $filter('date')(new Date(timestamp),
                "EEEE, dd MMMM yyyy");
        },
        formatDateMonthYear: function(timestamp) {
            return $filter('date')(new Date(timestamp),
                "MMMM yyyy");
        },
        formatLongDateNoTimeWS: function(timestamp) {
            var dayOfWeek = new Date(timestamp).getDay();
            var diffFromCurrentToWeekStart = new Date(timestamp)
                .getDate() - dayOfWeek + (dayOfWeek == 0 ? -6 :
                    1);
            var startOfWeek = new Date(new Date(timestamp).setDate(
                diffFromCurrentToWeekStart));
            return $filter('date')(startOfWeek, "dd MMMM yyyy");
        },
        formatLongDateNoTimeWE: function(timestamp) {
            var dayOfWeek = new Date(timestamp).getDay();
            var diffFromCurrentToWeekStart = new Date(timestamp)
                .getDate() - dayOfWeek + (dayOfWeek == 0 ? -6 :
                    1);
            var endOfWeek = new Date(new Date(timestamp).setDate(
                diffFromCurrentToWeekStart + 6));
            return $filter('date')(endOfWeek, "dd MMMM yyyy");
        },
        formatLongDateNoTimeMS: function(timestamp) {
            var currentDate = new Date(timestamp);
            var startOfMonth = new Date(currentDate.getFullYear(),
                currentDate.getMonth(), 1);
            return $filter('date')(startOfMonth, "dd MMMM yyyy");
        },
        formatLongDateNoTimeME: function(timestamp) {
            var currentDate = new Date(timestamp);
            var endOfMonth = new Date(currentDate.getFullYear(),
                currentDate.getMonth() + 1, 0);
            return $filter('date')(endOfMonth, "dd MMMM yyyy");
        },
        unixTimestamp: function(secondsToSubstract) {
            return Math.round((new Date()).getTime() / 1000) -
                secondsToSubstract;
        }
    }
}]);
angular.module('ccc-app').service('cModalService', ['$uibModal', 'userManager',
    function($uibModal, userManager) {
        this.showLoginModal = function(messageForLogin) {
            var modalInstance = $uibModal.open({
                templateUrl: '/angular/cryptopian/login',
                controller: 'LoginRegisterCtrl',
                size: 'cm',
                resolve: {
                    params: function() {
                        return {
                            ActionStage: 0,
                            Message: messageForLogin
                        };
                    }
                }
            });
            modalInstance.result.then(function(message) {
                userManager.setShowingLogin(false);
            }, function() {
                userManager.setShowingLogin(false);
            });
        };
        this.showPasswordResetModal = function() {
            var modalInstance = $uibModal.open({
                templateUrl: '/angular/cryptopian/login',
                controller: 'LoginRegisterCtrl',
                size: 'md',
                resolve: {
                    params: function() {
                        return {
                            ActionStage: 2,
                            Message: ''
                        };
                    }
                }
            });
            modalInstance.result.then(function(message) {
                userManager.setShowingLogin(false);
            }, function() {
                userManager.setShowingLogin(false);
            });
        };
        this.showChangeAvatarModal = function() {
            var modalInstance = $uibModal.open({
                templateUrl: '/angular/cryptopian/changeavatar',
                controller: 'ChangeAvatarCtrl'
            });
        };
        this.showActivationReminderModal = function() {
            var modalInstance = $uibModal.open({
                templateUrl: '/angular/cryptopian/activationreminder',
                controller: 'ActivationReminderCtrl'
            });
        }
    }
]);
angular.module('ccc-app').service('gModalService', ['$uibModal', '$log',
    function($uibModal, $log) {
        this.showMessageModal = function(message) {
            var modalInstance = $uibModal.open({
                templateUrl: 'gModalService/showMessage.html',
                controller: 'ShowMessageCtrl',
                resolve: {
                    message: function() {
                        return message;
                    }
                }
            });
        };
        this.showTipUsModal = function() {
            var message = {
                btcQr: false,
                ltcQr: false,
                dogeQr: false,
                dashQr: false,
                nmcQr: false,
                show: function(item) {
                    this.btcQr = false;
                    this.ltcQr = false;
                    this.dogeQr = false;
                    this.dashQr = false;
                    this.nmcQr = false;
                    this[item] = true;
                },
                hide: function(item) {
                    this[item] = false;
                }
            };
            var modalInstance = $uibModal.open({
                templateUrl: 'gModalService/showTipMessage.html',
                controller: 'ShowMessageCtrl',
                resolve: {
                    message: function() {
                        return message;
                    }
                }
            });
        };
        this.showFeedbackModal = function(debugInfo) {
            var modalInstance = $uibModal.open({
                templateUrl: '/angular/sendfeedback',
                controller: 'ShowFeedackCtrl',
                resolve: {
                    debugInfo: function() {
                        return debugInfo;
                    }
                }
            });
        };
        this.showCryptopianList = function(obj) {
            var modalInstance = $uibModal.open({
                templateUrl: '/angular/forum-list/cryptopians/',
                controller: 'CryptopianListModalCtrl',
                size: 'cm',
                resolve: {
                    initObj: function() {
                        return obj;
                    }
                }
            });
        };
    }
]);
angular.module('ccc-app').factory('chartUtil', ['$rootScope', '$filter',
    '$http',
    function chartUtilFactory($rootScope, $filter, $http) {
        var chartsData = {};
        var chartPeriods = [];
        var currentStatus = {
            'fromSymbol': '',
            'toSymbol': '',
            'dataLoaded': false,
            'dataIsLoading': true,
            'period': {},
            'data': [],
            'stats': {},
            'tableDisplay': []
        };
        var makeKey = function(type, e, fsym, tsym, limit) {
            return type + '~' + e + '~' + fsym + '~' + tsym + '~' +
                limit;
        }
        var util = CCC.STATIC.UTIL;
        var displayCurrency = CCC.STATIC.CURRENCY;
        var colorOptions = CCC.STATIC.UTIL.chartColors;
        return {
            availableChartPeriods: function(periods) {
                chartPeriods = periods;
            },
            isPeriodSelected: function(periodId) {
                return currentStatus.period.name == chartPeriods[
                    periodId].name;
            },
            setFromSymbol: function(symbol) {
                currentStatus.fromSymbol = symbol;
            },
            setToSymbol: function(symbol) {
                currentStatus.toSymbol = symbol;
            },
            saveCurrentPeriod: function(period) {
                currentStatus.period = period;
            },
            handleNewPeriod: function(periodId) {
                $rootScope.$emit("ChartPeriodChange", periodId);
            },
            saveCurrentData: function(dataSet) {
                currentStatus.data = dataSet;
                var tableDisplayData = [];
                var prevValue = "";
                for (var i = 0, length = dataSet.length; i < length; i++) {
                    if (i % currentStatus.period.periodForTable ==
                        0) {
                        var objectToAdd = {};
                        objectToAdd.dateDisplay = $filter('date')(
                            new Date(dataSet[i].time),
                            'yyyy-MM-dd HH:mm');
                        objectToAdd.close = dataSet[i].close;
                        objectToAdd.priceDisplay = this.convertValueToDisplay(
                            this.getSymbolFromCurrencyCode(
                                currentStatus.toSymbol),
                            objectToAdd.close);
                        if (i > 0) {
                            objectToAdd.chgValue = this.convertValueForChart(
                                objectToAdd.close - prevValue.close
                            );
                            objectToAdd.chgValueDisplay = this.convertValueToDisplay(
                                this.getSymbolFromCurrencyCode(
                                    currentStatus.toSymbol),
                                objectToAdd.chgValue);
                            var pctChange = (objectToAdd.chgValue /
                                prevValue.close) * 100;
                            if (pctChange < 1) {
                                objectToAdd.pct = pctChange.toFixed(
                                    2);
                            } else {
                                objectToAdd.pct = this.convertValueToDisplay(
                                    '', pctChange);
                            }
                        } else {
                            objectToAdd.chgValue = 0;
                            objectToAdd.chgValueDisplay = this.convertValueToDisplay(
                                this.getSymbolFromCurrencyCode(
                                    currentStatus.toSymbol),
                                objectToAdd.chgValue);
                            objectToAdd.pct = 0;
                        }
                        prevValue = objectToAdd;
                        tableDisplayData.push(objectToAdd);
                    }
                }
                currentStatus.tableDisplay = tableDisplayData.reverse();
            },
            setChartStats: function(stats) {
                currentStatus.stats = stats;
                currentStatus.stats.chgValue = this.convertValueForChart(
                    stats['close'] - stats['open']);
                currentStatus.stats.pct = this.convertValueToDisplay(
                    '', (currentStatus.stats.chgValue / stats[
                        'open']) * 100);
                currentStatus.stats.chgValueDisplay = this.convertValueToDisplay(
                    this.getSymbolFromCurrencyCode(
                        currentStatus.toSymbol), stats.chgValue
                );
                currentStatus.stats.highValueDisplay = this.convertValueToDisplay(
                    this.getSymbolFromCurrencyCode(
                        currentStatus.toSymbol), stats.high);
                currentStatus.stats.lowValueDisplay = this.convertValueToDisplay(
                    this.getSymbolFromCurrencyCode(
                        currentStatus.toSymbol), stats.low);
                currentStatus.stats.openValueDisplay = this.convertValueToDisplay(
                    this.getSymbolFromCurrencyCode(
                        currentStatus.toSymbol), stats.open);
                currentStatus.stats.closeValueDisplay = this.convertValueToDisplay(
                    this.getSymbolFromCurrencyCode(
                        currentStatus.toSymbol), stats.close);
                currentStatus.stats.volumeFromValueDisplay = this.convertValueToDisplay(
                    this.getSymbolFromCurrencyCode(
                        currentStatus.fromSymbol), stats.volumefrom
                );
                currentStatus.stats.volumeToValueDisplay = this.convertValueToDisplay(
                    this.getSymbolFromCurrencyCode(
                        currentStatus.toSymbol), stats.volumeto
                );
                currentStatus.stats.highDisplay = this.convertValueToDisplay(
                    this.getSymbolFromCurrencyCode(
                        currentStatus.toSymbol), stats.high);
                currentStatus.stats.lowDisplay = this.convertValueToDisplay(
                    this.getSymbolFromCurrencyCode(
                        currentStatus.toSymbol), stats.low);
            },
            getChartStats: function() {
                return currentStatus.stats;
            },
            setLoaded: function(isLoaded) {
                currentStatus.dataLoaded = isLoaded;
            },
            setLoading: function(isLoading) {
                currentStatus.dataIsLoading = isLoading;
            },
            getToSymbol: function() {
                return currentStatus.toSymbol;
            },
            getLoaded: function() {
                return currentStatus.dataLoaded;
            },
            getLoading: function() {
                return currentStatus.dataIsLoading;
            },
            getCurrentPeriod: function() {
                return currentStatus.period;
            },
            getAvailableChartPeriods: function() {
                return chartPeriods;
            },
            getCurrentData: function() {
                return currentStatus.data;
            },
            getTableDisplay: function() {
                return currentStatus.tableDisplay;
            },
            saveData: function(type, e, fsym, tsym, limit, chartData) {
                var key = makeKey(type, e, fsym, tsym, limit);
                chartsData[key] = chartData;
            },
            hasData: function(type, e, fsym, tsym, limit) {
                var key = makeKey(type, e, fsym, tsym, limit);
                if (chartsData.hasOwnProperty(key)) {
                    return true;
                }
                return false;
            },
            getHistoFromMemory: function(type, e, fsym, tsym, limit) {
                var key = makeKey(type, e, fsym, tsym, limit);
                return chartsData[key];
            },
            getSocialHistoFromApi: function(type, id, limit, aggregate,
                position) {
                var paramsForCall = {};
                paramsForCall['params'] = {};
                paramsForCall['params']['id'] = id;
                paramsForCall['params']['limit'] = limit;
                if (aggregate) {
                    paramsForCall['params']['aggregate'] =
                        aggregate;
                }
                if (position) {
                    paramsForCall['params']['position'] = position;
                }
                return $http.get("/api/data/socialstatshisto" +
                    type + "/", paramsForCall);
            },
            getHistoFromApi: function(type, e, fsym, tsym, limit,
                aggregate, position) {
                var paramsForCall = {};
                paramsForCall['params'] = {};
                paramsForCall['params']['e'] = e;
                paramsForCall['params']['fsym'] = fsym;
                paramsForCall['params']['tsym'] = tsym;
                paramsForCall['params']['limit'] = limit;
                if (aggregate) {
                    paramsForCall['params']['aggregate'] =
                        aggregate;
                }
                if (position) {
                    paramsForCall['params']['position'] = position;
                }
                return $http.get("/api/data/histo" + type + "/",
                    paramsForCall);
            },
            getHistoFromMinApi: function(type, e, fsym, tsym, limit,
                aggregate, position, toTs) {
                var paramsForCall = {};
                paramsForCall['params'] = {};
                paramsForCall['params']['e'] = e;
                paramsForCall['params']['fsym'] = fsym;
                paramsForCall['params']['tsym'] = tsym;
                if (limit) {
                    paramsForCall['params']['limit'] = limit;
                } else {
                    paramsForCall['params']['allData'] = true;
                }
                if (aggregate) {
                    paramsForCall['params']['aggregate'] =
                        aggregate;
                } else {
                    paramsForCall['params']['aggregate'] = 1;
                }
                if (toTs) {
                    paramsForCall['params']['toTs'] = toTs;
                }
                paramsForCall['params']['extraParams'] =
                    'CryptoCompare';
                paramsForCall['params']['tryConversion'] = false;
                return $http.get(
                    "https://min-api.cryptocompare.com/data/histo" +
                    type, paramsForCall);
            },
            getPortfolioHistoFromMinApi: function(type, e, fsym, tsym,
                limit, aggregate, position, toTs) {
                var paramsForCall = {};
                paramsForCall['params'] = {};
                paramsForCall['params']['e'] = e;
                paramsForCall['params']['fsym'] = fsym;
                paramsForCall['params']['tsym'] = tsym;
                if (limit) {
                    paramsForCall['params']['limit'] = limit;
                } else {
                    paramsForCall['params']['allData'] = true;
                }
                if (aggregate) {
                    paramsForCall['params']['aggregate'] =
                        aggregate;
                } else {
                    paramsForCall['params']['aggregate'] = 1;
                }
                if (toTs) {
                    paramsForCall['params']['toTs'] = toTs;
                }
                paramsForCall['params']['extraParams'] =
                    'CC_Portfolio';
                paramsForCall['params']['tryConversion'] = true;
                return $http.get(
                    "https://min-api.cryptocompare.com/data/histo" +
                    type, paramsForCall);
            },
            getSymbolFromCurrencyCode: function(currencyCode) {
                return displayCurrency.getSymbol(currencyCode);
            },
            getDaysSoFarInYear: function() {
                var currentDate = new Date();
                var startOfYear = new Date(currentDate.getFullYear(),
                    0, 0);
                var diffInMilliSeconds = currentDate - startOfYear;
                var oneDayInMilliSeconds = 86400000;
                var currentDay = Math.floor(diffInMilliSeconds /
                    oneDayInMilliSeconds);
                if (currentDay == 0) {
                    currentDay = 1;
                }
                return currentDay - 1;
            },
            convertValueForChart: function(value) {
                return util.reduceFloatVal(value);
            },
            convertValueToDisplay: function(symbol, value) {
                return util.convertValueToDisplay(symbol, value,
                    $filter('number'), 'short', false);
            },
            convertValueToDisplayLong: function(symbol, value) {
                return util.convertValueToDisplay(symbol, value,
                    $filter('number'));
            },
            convertExchangeName: function(value) {
                return util.getNameForExchange(value);
            },
            topVolumeColumn: function(graphs, text, valuefield) {
                graphs.push({
                    id: "base",
                    valueField: valuefield,
                    type: "column",
                    fillAlphas: 0.8,
                    lineColor: '#006098',
                    title: text + " Volume",
                    balloonText: "<span style='font-size:12px;'>[[title]]:<br><span style='font-size:16px;'>[[value]]</span></span>"
                });
            },
            addGuideLine: function(guides, value, text, color) {
                guides.push({
                    value: value,
                    label: text,
                    lineAlpha: 0.5,
                    lineThickness: 1,
                    color: color,
                    inside: true,
                    position: "right",
                    lineColor: color
                });
            },
            topLineSerial: function(graphs, text, valuefield,
                currencyField) {
                graphs.push({
                    id: "base",
                    valueField: valuefield,
                    type: "line",
                    fillAlphas: 0.1,
                    lineColor: '#006098',
                    title: text,
                    balloonText: "<span style='font-size:12px;'>[[title]]:<br><span style='font-size:16px;'>" +
                        currencyField +
                        " [[value]]</span></span>"
                });
            },
            topLineSerialWithBullet: function(graphs, text, valuefield,
                bulletField, currencyField) {
                graphs.push({
                    id: "base",
                    valueField: valuefield,
                    type: "line",
                    bulletField: bulletField,
                    fillAlphas: 0.1,
                    lineColor: '#006098',
                    title: text,
                    balloonText: "<span style='font-size:12px;'>[[title]]:<br><span style='font-size:16px;'>" +
                        currencyField +
                        " [[value]]</span></span>"
                });
            },
            topLineSerialSecondary: function(graphs, text, valuefield,
                currencyField) {
                graphs.push({
                    id: "secondary",
                    valueField: valuefield,
                    type: "line",
                    fillAlphas: 0,
                    lineColor: '#00FF00',
                    title: text,
                    balloonText: "<span style='font-size:12px;'>[[title]]:<br><span style='font-size:16px;'>" +
                        currencyField +
                        " [[value]]</span></span>"
                });
            },
            topLineSerialVolatility: function(graphs, text, valuefield) {
                graphs.push({
                    id: "volatility",
                    valueField: valuefield,
                    type: "line",
                    fillAlphas: 0.1,
                    lineColor: '#006098',
                    title: text,
                    balloonText: "<span style='font-size:12px;'>[[title]]:<br><span style='font-size:16px;'>[[value]]%</span></span>"
                });
            },
            topPositiveNegativeBarsSerial: function(graphs, text,
                valuefield, currencyField) {
                graphs.push({
                    id: "base",
                    valueField: valuefield,
                    type: "column",
                    fillAlphas: 0.8,
                    useDataSetColors: false,
                    lineColor: colorOptions.Green.Hex,
                    negativeLineColor: colorOptions.Red.Hex,
                    negativeFillColors: colorOptions.Red.Hex,
                    title: text,
                    balloonText: "<span style='font-size:12px;'>[[title]]:<br><span style='font-size:16px;'>" +
                        currencyField +
                        " [[value]]</span></span>"
                });
            },
            topStacked: function(graphs, text, valuefield, colorHex) {
                graphs.push({
                    id: text + '_' + valuefield,
                    valueField: text + '_' + valuefield,
                    lineAlpha: 0.8,
                    fillAlphas: 0.4,
                    lineColor: colorHex,
                    fillColor: colorHex,
                    title: text,
                    balloonText: "<span style='font-size:11px;'>[[title]] : [[value]] ([[percents]]%)</span>"
                });
            },
            bottomVolume: function(dataSet, panel, text) {
                dataSet.fieldMappings.push({
                    fromField: "volumefrom",
                    toField: "volumefrom"
                });
                panel.title = "Volume " + text;
                panel.stockGraphs.push({
                    valueField: "volumefrom",
                    type: "column",
                    fillAlphas: 0.8
                });
            },
            bottomVolumeTo: function(dataSet, panel, text) {
                var field = dataSet
                dataSet.fieldMappings.push({
                    fromField: "volumeto",
                    toField: "volumeto"
                });
                panel.title = "Volume " + text;
                panel.stockGraphs.push({
                    valueField: "volumeto",
                    type: "column",
                    fillAlphas: 0.8
                });
            },
            topCandleStick: function(dataSet, panel, text) {
                dataSet.fieldMappings.push({
                    fromField: "close",
                    toField: "close",
                });
                dataSet.fieldMappings.push({
                    fromField: "open",
                    toField: "open"
                });
                dataSet.fieldMappings.push({
                    fromField: "high",
                    toField: "high"
                });
                dataSet.fieldMappings.push({
                    fromField: "low",
                    toField: "low"
                });
                panel.stockGraphs.push({
                    id: "base",
                    type: "candlestick",
                    balloonText: "Open:<b>[[open]]</b><br>Low:<b>[[low]]</b><br>High:<b>[[high]]</b><br>Close:<b>[[close]]</b><br>",
                    closeField: "close",
                    fillColors: "#3d9400",
                    highField: "high",
                    lineColor: "#3d9400",
                    lineAlpha: 1,
                    lowField: "low",
                    fillAlphas: 0.8,
                    negativeFillColors: "#d14836",
                    negativeLineColor: "#d14836",
                    openField: "open",
                    valueField: "close",
                    valueAxis: "a1",
                    legendValueText: "[[close]] " + text,
                    proCandlesticks: false
                });
                panel.stockLegend.valueTextRegular = "[[close]] " +
                    text;
            },
            topLine: function(dataSet, panel, text, withFill) {
                dataSet.fieldMappings.push({
                    fromField: "close",
                    toField: "close",
                });
                var lineChart = {
                    id: "base",
                    valueField: "close",
                    lineThickness: 1,
                    balloonText: "Close:<b>[[close]]</b>",
                    valueAxis: "a1",
                    legendValueText: "[[close]] " + text,
                    bullet: "none"
                };
                if (withFill) {
                    lineChart.fillAlphas = 0.1;
                };
                panel.stockGraphs.push(lineChart);
                panel.stockLegend.valueTextRegular = "[[close]] " +
                    text;
            },
            topOHLC: function(dataSet, panel, text) {
                dataSet.fieldMappings.push({
                    fromField: "close",
                    toField: "close",
                });
                dataSet.fieldMappings.push({
                    fromField: "open",
                    toField: "open"
                });
                dataSet.fieldMappings.push({
                    fromField: "high",
                    toField: "high"
                });
                dataSet.fieldMappings.push({
                    fromField: "low",
                    toField: "low"
                });
                panel.stockGraphs.push({
                    id: "base",
                    type: "ohlc",
                    balloonText: "Open:<b>[[open]]</b><br>Low:<b>[[low]]</b><br>High:<b>[[high]]</b><br>Close:<b>[[close]]</b><br>",
                    closeField: "close",
                    fillColors: "#3d9400",
                    highField: "high",
                    lineColor: "#3d9400",
                    lineAlpha: 1,
                    lowField: "low",
                    fillAlphas: 0.8,
                    negativeFillColors: "#d14836",
                    negativeLineColor: "#d14836",
                    openField: "open",
                    valueField: "close",
                    legendValueText: "[[close]] " + text,
                    valueAxis: "a1",
                    proCandlesticks: false
                });
                panel.stockLegend.valueTextRegular = "[[close]] " +
                    text;
            },
            addDownloadButtonToChart: function() {
                return [{
                    label: "<i class='fa fa-floppy-o'></i>",
                    title: "Save as... ",
                    menu: [{
                        label: "PNG",
                        click: function() {
                            if (this.drawing.buffer
                                .enabled) {
                                this.drawing.handler
                                    .done();
                                this.toPNG({},
                                    function(
                                        data
                                    ) {
                                        this
                                            .download(
                                                data,
                                                "image/png",
                                                this
                                                .config
                                                .fileName +
                                                Date
                                                .now() +
                                                '.png'
                                            );
                                    });
                            } else {
                                this.capture({},
                                    function() {
                                        this
                                            .toPNG({},
                                                function(
                                                    data
                                                ) {
                                                    this
                                                        .download(
                                                            data,
                                                            "text/xml",
                                                            this
                                                            .config
                                                            .fileName +
                                                            Date
                                                            .now() +
                                                            '.png'
                                                        );
                                                }
                                            );
                                    });
                            }
                        }
                    }, {
                        label: "JPG",
                        click: function() {
                            if (this.drawing.buffer
                                .enabled) {
                                this.drawing.handler
                                    .done();
                                this.toJPG({},
                                    function(
                                        data
                                    ) {
                                        this
                                            .download(
                                                data,
                                                "image/jpg",
                                                this
                                                .config
                                                .fileName +
                                                Date
                                                .now() +
                                                '.jpg'
                                            );
                                    });
                            } else {
                                this.capture({},
                                    function() {
                                        this
                                            .toJPG({},
                                                function(
                                                    data
                                                ) {
                                                    this
                                                        .download(
                                                            data,
                                                            "text/xml",
                                                            this
                                                            .config
                                                            .fileName +
                                                            Date
                                                            .now() +
                                                            '.jpg'
                                                        );
                                                }
                                            );
                                    });
                            }
                        }
                    }, {
                        label: "SVG",
                        click: function() {
                            if (this.drawing.buffer
                                .enabled) {
                                this.drawing.handler
                                    .done();
                                this.toSVG({},
                                    function(
                                        data
                                    ) {
                                        this
                                            .download(
                                                data,
                                                "text/xml",
                                                this
                                                .config
                                                .fileName +
                                                Date
                                                .now() +
                                                '.svg'
                                            );
                                    });
                            } else {
                                this.capture({},
                                    function() {
                                        this
                                            .toSVG({},
                                                function(
                                                    data
                                                ) {
                                                    this
                                                        .download(
                                                            data,
                                                            "text/xml",
                                                            this
                                                            .config
                                                            .fileName +
                                                            Date
                                                            .now() +
                                                            '.svg'
                                                        );
                                                }
                                            );
                                    });
                            }
                        }
                    }, {
                        label: "CSV",
                        click: function() {
                            this.toCSV({},
                                function(
                                    data) {
                                    this.download(
                                        data,
                                        "text/plain",
                                        this
                                        .config
                                        .fileName +
                                        Date
                                        .now() +
                                        ".csv"
                                    );
                                });
                        }
                    }, {
                        label: "JSON",
                        click: function() {
                            this.toJSON({},
                                function(
                                    data) {
                                    this.download(
                                        data,
                                        "text/plain",
                                        this
                                        .config
                                        .fileName +
                                        Date
                                        .now() +
                                        ".json"
                                    );
                                });
                        }
                    }, {
                        label: "XLSX",
                        click: function() {
                            this.toXLSX({},
                                function(
                                    data) {
                                    this.download(
                                        data,
                                        "application/octet-stream",
                                        this
                                        .config
                                        .fileName +
                                        Date
                                        .now() +
                                        ".xlsx"
                                    );
                                });
                        }
                    }]
                }];
            },
            appendData: function(originalDataSet, newDataSet, field,
                prefix) {
                var indexODS = 0;
                var indexNDS = 0;
                if (originalDataSet.length == 0) {
                    for (var i = 0, len = newDataSet.length; i <
                        len; i++) {
                        var newObj = {};
                        newObj['time'] = newDataSet[i]['time'];
                        newObj[prefix + '_' + field] = newDataSet[i]
                            [field];
                        originalDataSet.push(newObj);
                    }
                    return;
                }
                if (newDataSet.length == 0) {
                    for (var i = 0, len = originalDataSet.length; i <
                        len; i++) {
                        originalDataSet[i][prefix + '_' + field] =
                            0;
                    }
                    return;
                }
                while (indexODS < originalDataSet.length &&
                    originalDataSet[indexODS]['time'] < newDataSet[
                        indexNDS]['time']) {
                    originalDataSet[indexODS][prefix + '_' + field] =
                        0;
                    indexODS++;
                }
                var newDataSetToAdd = [];
                while (originalDataSet[indexODS]['time'] >
                    newDataSet[indexNDS]['time']) {
                    var newObj = {};
                    for (var propertyName in originalDataSet[
                            indexODS]) {
                        newObj[propertyName] = 0;
                    }
                    newObj['time'] = newDataSet[indexNDS]['time'];
                    newObj[prefix + '_' + field] = newDataSet[
                        indexNDS][field];
                    newDataSetToAdd.push(newObj);
                    indexNDS++;
                }
                if (newDataSetToAdd.length > 0) {
                    indexODS = newDataSetToAdd.length;
                    originalDataSet = newDataSetToAdd.concat(
                        originalDataSet);
                }
                while (indexODS < originalDataSet.length &&
                    indexNDS < newDataSet.length && originalDataSet[
                        indexODS]['time'] == newDataSet[indexNDS][
                        'time'
                    ]) {
                    originalDataSet[indexODS][prefix + '_' + field] =
                        newDataSet[indexNDS][field];
                    indexNDS++;
                    indexODS++;
                }
                while (indexODS < originalDataSet.length &&
                    originalDataSet[indexODS]['time'] > newDataSet[
                        indexNDS]['time']) {
                    originalDataSet[indexODS][prefix + '_' + field] =
                        0;
                    indexODS++;
                }
                while (indexNDS < newDataSet.length &&
                    originalDataSet[indexODS]['time'] < newDataSet[
                        indexNDS]['time']) {
                    var newObj = {};
                    for (var propertyName in originalDataSet[
                            indexODS]) {
                        newObj[propertyName] = 0;
                    }
                    newObj['time'] = newDataSet[indexNDS]['time'];
                    newObj[prefix + '_' + field] = newDataSet[
                        indexNDS][field];
                    originalDataSet.push(newObj);
                    indexNDS++;
                    indexODS++;
                }
            },
            polyfillSocialData: function(chartData, interval) {
                var arrayToReturn = [];
                var valueToAddAtEnd = {};
                var allData = chartData['Data'];
                var timestampToStop;
                var currentTimestamp = chartData.TimeFrom;
                if (!chartData.hasOwnProperty('Data')) {
                    return arrayToReturn;
                }
                if (allData.length > 0) {
                    timestampToStop = allData[0]['time'];
                } else {
                    timestampToStop = chartData.TimeTo;
                }
                if (!chartData.FirstValueInArray) {
                    var initalValue = {};
                    for (var attrname in chartData['FirstValue']) {
                        initalValue[attrname] = chartData[
                            'FirstValue'][attrname];
                    }
                    initalValue['time'] = chartData.TimeFrom * 1000;
                    arrayToReturn.push(initalValue);
                    currentTimestamp = currentTimestamp + interval;
                    while (currentTimestamp < timestampToStop) {
                        var newValue = {};
                        for (var attrname in chartData['FirstValue']) {
                            newValue[attrname] = chartData[
                                'FirstValue'][attrname];
                        }
                        newValue['time'] = currentTimestamp * 1000;
                        arrayToReturn.push(newValue);
                        currentTimestamp = currentTimestamp +
                            interval;
                    }
                }
                if (allData.length == 0) {
                    return arrayToReturn;
                }
                var newValue = {};
                currentTimestamp = allData[0]['time'];
                for (var attrname in allData[0]) {
                    newValue[attrname] = allData[0][attrname];
                }
                newValue['time'] = currentTimestamp * 1000;
                arrayToReturn.push(newValue);
                currentTimestamp = currentTimestamp + interval;
                for (var i = 1; i < allData.length; i++) {
                    timestampToStop = allData[i]['time'];
                    while (currentTimestamp < timestampToStop) {
                        var newValue = {};
                        for (var attrname in allData[i - 1]) {
                            newValue[attrname] = allData[i - 1][
                                attrname
                            ];
                        }
                        newValue['time'] = currentTimestamp * 1000;
                        arrayToReturn.push(newValue);
                        currentTimestamp = currentTimestamp +
                            interval;
                    }
                    var newValue = {};
                    for (var attrname in allData[i]) {
                        newValue[attrname] = allData[i][attrname];
                    }
                    newValue['time'] = currentTimestamp * 1000;
                    valueToAddAtEnd = newValue;
                    arrayToReturn.push(newValue);
                    currentTimestamp = currentTimestamp + interval;
                };
                timestampToStop = chartData.TimeTo;
                while (currentTimestamp <= timestampToStop) {
                    var newValue = {};
                    for (var attrname in valueToAddAtEnd) {
                        newValue[attrname] = valueToAddAtEnd[
                            attrname];
                    }
                    newValue['time'] = currentTimestamp * 1000;
                    arrayToReturn.push(newValue);
                    currentTimestamp = currentTimestamp + interval;
                }
                return arrayToReturn;
            },
            generateEmptyData: function(interval, totalPoints, initalTS) {
                var emptyDataArray = [];
                for (var i = 0; i < totalPoints; i++) {
                    var emptyValueToAdd = {};
                    emptyValueToAdd['time'] = (initalTS + (interval *
                        i)) * 1000;
                    emptyValueToAdd['close'] = 0;
                    emptyValueToAdd['high'] = 0;
                    emptyValueToAdd['low'] = 0;
                    emptyValueToAdd['open'] = 0;
                    emptyValueToAdd['volumefrom'] = 0;
                    emptyValueToAdd['volumeto'] = 0;
                    emptyDataArray.push(emptyValueToAdd);
                }
                return emptyDataArray;
            },
            roundCurrentDateToInterval: function(interval) {
                var currentDate = Math.floor(new Date().getTime() /
                    1000);
                return currentDate - currentDate % interval;
            },
            polyfillChartData: function(chartData, interval,
                indexForStats, dateFormat) {
                var chartStats = {
                    close: 0,
                    high: 0,
                    low: 0,
                    open: 0,
                    volumefrom: 0,
                    volumeto: 0
                };
                var arrayToReturn = [];
                var prevClose;
                var allData = chartData['Data'];
                var timestampToStop;
                var currentTimestamp = chartData.TimeFrom;
                if (!chartData.hasOwnProperty('Data')) {
                    return {
                        data: arrayToReturn,
                        stats: chartStats
                    };
                }
                if (allData.length > 0) {
                    timestampToStop = allData[0]['time'];
                } else {
                    timestampToStop = chartData.TimeTo;
                }
                if (!chartData.FirstValueInArray) {
                    if (chartData.hasOwnProperty("FirstValue")) {
                        prevClose = util.reduceFloatVal(chartData.FirstValue[
                            'close']);
                    } else {
                        if (allData.length > 0) {
                            prevClose = util.reduceFloatVal(allData[
                                0]['close']);
                        } else {
                            prevClose = 0;
                        }
                    }
                    var initalValue = {};
                    initalValue['time'] = chartData.TimeFrom * 1000;
                    initalValue['close'] = prevClose;
                    initalValue['high'] = prevClose;
                    initalValue['low'] = prevClose;
                    initalValue['open'] = prevClose;
                    initalValue['volumefrom'] = 0;
                    initalValue['volumeto'] = 0;
                    if (dateFormat) {
                        initalValue['formatedDate'] = $filter(
                            'date')(new Date(initalValue['time']),
                            dateFormat);
                    }
                    arrayToReturn.push(initalValue);
                    prevClose = initalValue['close'];
                    currentTimestamp = currentTimestamp + interval;
                    while (currentTimestamp < timestampToStop) {
                        var newValue = {};
                        newValue['time'] = currentTimestamp * 1000;
                        newValue['close'] = prevClose;
                        newValue['high'] = prevClose;
                        newValue['low'] = prevClose;
                        newValue['open'] = prevClose;
                        newValue['volumefrom'] = 0;
                        newValue['volumeto'] = 0;
                        if (dateFormat) {
                            newValue['formatedDate'] = $filter(
                                'date')(new Date(newValue[
                                'time']), dateFormat);
                        }
                        arrayToReturn.push(newValue);
                        currentTimestamp = currentTimestamp +
                            interval;
                    }
                }
                if (allData.length == 0) {
                    chartStats['high'] = arrayToReturn[0]['high'];
                    chartStats['tsHigh'] = arrayToReturn[0]['time'];
                    chartStats['low'] = arrayToReturn[0]['low'];
                    chartStats['tsLow'] = arrayToReturn[0]['time'];
                    chartStats['close'] = arrayToReturn[0]['close'];
                    chartStats['open'] = arrayToReturn[0]['open'];
                    chartStats['volumefrom'] = arrayToReturn[0][
                        'volumefrom'
                    ];
                    chartStats['volumeto'] = arrayToReturn[0][
                        'volumeto'
                    ];
                    return {
                        data: arrayToReturn,
                        stats: chartStats
                    };
                }
                var newValue = {};
                currentTimestamp = allData[0]['time'];
                newValue['time'] = currentTimestamp * 1000;
                newValue['close'] = util.reduceFloatVal(allData[0][
                    'close'
                ]);
                newValue['high'] = util.reduceFloatVal(allData[0][
                    'high'
                ]);
                newValue['low'] = util.reduceFloatVal(allData[0][
                    'low'
                ]);
                newValue['open'] = util.reduceFloatVal(allData[0][
                    'open'
                ]);
                newValue['volumefrom'] = util.reduceFloatVal(
                    allData[0]['volumefrom']);
                newValue['volumeto'] = util.reduceFloatVal(allData[
                    0]['volumeto']);
                if (arrayToReturn.length >= indexForStats) {
                    chartStats['high'] = allData[0]['high'];
                    chartStats['tsHigh'] = allData[0]['time'];
                    chartStats['low'] = allData[0]['low'];
                    chartStats['tsLow'] = allData[0]['time'];
                    chartStats['open'] = allData[0]['open'];
                    chartStats['volumefrom'] = allData[0][
                        'volumefrom'
                    ];
                    chartStats['volumeto'] = allData[0]['volumeto'];
                }
                if (dateFormat) {
                    newValue['formatedDate'] = $filter('date')(new Date(
                        newValue['time']), dateFormat);
                }
                arrayToReturn.push(newValue);
                prevClose = newValue['close'];
                currentTimestamp = currentTimestamp + interval;
                for (var i = 1; i < allData.length; i++) {
                    timestampToStop = allData[i]['time'];
                    while (currentTimestamp < timestampToStop) {
                        var newValue = {};
                        newValue['time'] = currentTimestamp * 1000;
                        newValue['close'] = prevClose;
                        newValue['high'] = prevClose;
                        newValue['low'] = prevClose;
                        newValue['open'] = prevClose;
                        newValue['volumefrom'] = 0;
                        newValue['volumeto'] = 0;
                        if (dateFormat) {
                            newValue['formatedDate'] = $filter(
                                'date')(new Date(newValue[
                                'time']), dateFormat);
                        }
                        arrayToReturn.push(newValue);
                        currentTimestamp = currentTimestamp +
                            interval;
                    }
                    var newValue = {};
                    newValue['time'] = currentTimestamp * 1000;
                    newValue['close'] = util.reduceFloatVal(allData[
                        i]['close']);
                    newValue['high'] = util.reduceFloatVal(allData[
                        i]['high']);
                    newValue['low'] = util.reduceFloatVal(allData[i]
                        ['low']);
                    newValue['open'] = util.reduceFloatVal(allData[
                        i]['open']);
                    newValue['volumefrom'] = util.reduceFloatVal(
                        allData[i]['volumefrom']);
                    newValue['volumeto'] = util.reduceFloatVal(
                        allData[i]['volumeto']);
                    if (dateFormat) {
                        newValue['formatedDate'] = $filter('date')(
                            new Date(newValue['time']),
                            dateFormat);
                    }
                    arrayToReturn.push(newValue);
                    prevClose = newValue['close'];
                    if (arrayToReturn.length > indexForStats &&
                        chartStats['open'] > 0) {
                        chartStats['close'] = allData[i]['close'];
                        if (allData[i]['high'] >= chartStats['high']) {
                            chartStats['tsHigh'] = allData[i][
                                'time'
                            ];
                            chartStats['high'] = allData[i]['high'];
                        }
                        if (allData[i]['low'] <= chartStats['low']) {
                            chartStats['tsLow'] = allData[i]['time'];
                            chartStats['low'] = allData[i]['low'];
                        }
                        chartStats['volumefrom'] += allData[i][
                            'volumefrom'
                        ];
                        chartStats['volumeto'] += allData[i][
                            'volumeto'
                        ];
                    } else if (arrayToReturn.length ==
                        indexForStats || chartStats['open'] == 0) {
                        chartStats['close'] = allData[i]['close'];
                        chartStats['open'] = allData[i]['open'];
                        chartStats['high'] = allData[i]['high'];
                        chartStats['tsHigh'] = allData[i]['time'];
                        chartStats['low'] = allData[i]['low'];
                        chartStats['tsLow'] = allData[i]['time'];
                        chartStats['volumefrom'] = allData[i][
                            'volumefrom'
                        ];
                        chartStats['volumeto'] = allData[i][
                            'volumeto'
                        ];
                    }
                    currentTimestamp = currentTimestamp + interval;
                };
                timestampToStop = chartData.TimeTo;
                while (currentTimestamp <= timestampToStop) {
                    var newValue = {};
                    newValue['time'] = currentTimestamp * 1000;
                    newValue['close'] = prevClose;
                    newValue['high'] = prevClose;
                    newValue['low'] = prevClose;
                    newValue['open'] = prevClose;
                    newValue['volumefrom'] = 0;
                    newValue['volumeto'] = 0;
                    if (dateFormat) {
                        newValue['formatedDate'] = $filter('date')(
                            new Date(newValue['time']),
                            dateFormat);
                    }
                    arrayToReturn.push(newValue);
                    currentTimestamp = currentTimestamp + interval;
                }
                return {
                    data: arrayToReturn,
                    stats: chartStats
                };
            }
        };
    }
]);
angular.module('ccc-app').filter('parseUrlFilter', function() {
    var urlPattern =
        /(http|https):\/\/[\w-]+(\.[\w-]+)+([\w.,@?^=%&amp;:\/~+#-]*[\w@?^=%&amp;\/~+#-])?/gi;
    var imagePattern = /(\.jpeg|\.jpg|\.png|\.gif)/;
    var noFollow = '';
    return function(text, target) {
        return text.replace(urlPattern, function(url) {
            if (imagePattern.test(url)) {
                return '<img src="' + url +
                    '" class="forum-image-embed"/>';
            }
            if (url.length < 29 && url.substring(0, 29) !==
                'https://www.cryptocompare.com') {
                noFollow = 'rel="nofollow" ';
            }
            return '<a target="' + target + '" href="' +
                url + '" ' + noFollow +
                'class="link-external"><span class="fa fa-external-link"></span>' +
                url + '</a>';
        });
    };
});
angular.module('ccc-app').filter('cutText', function() {
    return function(value, wordwise, max, tail) {
        if (!value) return '';
        value = value.replace(/<br\/>/g, '')
        max = parseInt(max, 10);
        if (!max) return value;
        if (value.length <= max) return value;
        value = value.substr(0, max);
        if (wordwise) {
            var lastspace = value.lastIndexOf(' ');
            if (lastspace != -1) {
                value = value.substr(0, lastspace);
            }
        }
        return value + (tail || ' …');
    };
});;;;
angular.module('ccc-app').controller('HeaderSEOCtrl', ['$scope', 'pageInfo',
    function($scope, pageInfo) {
        $scope.pageInfo = pageInfo;
    }
]);
angular.module('ccc-app').controller('DropdownCtrl', ['$scope', function($scope) {
    $scope.menuCoins = false;
    $scope.menuExchanges = false;
    $scope.menuMining = false;
    $scope.menuWallets = false;
    $scope.menuForum = false;
    $scope.status = {
        isopen: false
    };
    $scope.toggled = function(open) {};
    $scope.toggleDropdown = function($event) {
        $event.preventDefault();
        $event.stopPropagation();
        $scope.status.isopen = !$scope.status.isopen;
    };
}]);
angular.module('ccc-app').controller('RatingCtrl', ['$scope', function($scope) {
    $scope.currentStars = 0;
    $scope.initStars = function(stars) {
        $scope.currentStars = stars;
    };
}]);
angular.module('ccc-app').controller('UsernameOptionsCtrl', ['$scope',
    '$window', 'userManager', 'gModalService', 'cModalService',
    'toastNotifications',
    function($scope, $window, userManager, gModalService, cModalService,
        toastNotifications) {
        $scope.changingFollowStatus = false;
        $scope.userManager = userManager;
        $scope.followingHover = false;
        $scope.status = {
            isopen: false
        };
        $scope.alreadyFollowing = false;
        $scope.alreadyBanned = false;
        $scope.itIsMe = false;
        $scope.isLoadingFollowing = false;
        $scope.isDeleting = false;
        $scope.toggleDropdown = function($event) {
            $event.preventDefault();
            $event.stopPropagation();
            if ($scope.isLoadingFollowing) {
                return;
            }
            if (!$scope.status.isopen) {
                if (userManager.getCryptopianId() == $scope.cryptopian
                    .Id) {
                    $scope.itIsMe = true;
                    $scope.status.isopen = !$scope.status.isopen;
                    return;
                }
                if (userManager.isLoggedIn()) {
                    $scope.isLoadingFollowing = true;
                    userManager.checkFollowingStatus($scope.cryptopian
                        .Id).success(function(data) {
                        $scope.isLoadingFollowing = false;
                        if (data.Type == 100) {
                            $scope.alreadyFollowing = true;
                        }
                        if (data.Type == 200) {
                            $scope.alreadyFollowing = false;
                        }
                        $scope.status.isopen = !$scope.status
                            .isopen;
                    });
                } else {
                    $scope.status.isopen = !$scope.status.isopen;
                    $scope.alreadyFollowing = false;
                }
            } else {
                $scope.status.isopen = !$scope.status.isopen;
            }
        };
        $scope.profileUrl = '/profile/' + $scope.cryptopian.Name + '/';
        $scope.goToProfile = function() {
            console.log($scope.profileUrl);
            $window.location = $scope.profileUrl;
        };
        $scope.changeFollowingStatus = function() {
            if ($scope.changingFollowStatus) {
                return;
            }
            $scope.changingFollowStatus = true;
            userManager.changeFollowingStatus($scope.cryptopian.Id,
                userManager.FOLLOWING.CRYPTOPIAN).success(
                function(data) {
                    if (data["Response"] == "Success") {
                        if (data.Type == 100) {
                            toastNotifications.addNotification(
                                'success', 'Following ' +
                                $scope.cryptopian.Name +
                                '!');
                            $scope.alreadyFollowing = true;
                        }
                        if (data.Type == 200) {
                            toastNotifications.addNotification(
                                'success', 'Unfollowed ' +
                                $scope.cryptopian.Name +
                                '!');
                            $scope.alreadyFollowing = false;
                        }
                    } else {
                        if (data.Type == 1) {
                            cModalService.showLoginModal();
                        }
                        if (data.Type == 5) {
                            cModalService.showActivationReminderModal();
                        };
                    }
                    $scope.changingFollowStatus = false;
                });
        };
        $scope.deleteAllForumActivityCryptopian = function() {
            if ($scope.isDeleting) {
                return;
            }
            var warning = {
                'Title': 'Confirm delete all forum activity',
                'Body': 'Are you sure you want to delete all comments and posts made by this cryptopian?',
                'Type': 'warning',
                'ShowOk': true,
                'OkAction': function() {
                    $scope.isDeleting = true;
                    userManager.deleteAllForumActivity(
                        $scope.cryptopian.Id).success(
                        function(data) {
                            if (data["Response"] ==
                                "Success") {
                                $scope.isDeleted = true;
                                toastNotifications.addNotification(
                                    'success',
                                    'All posts and comments have been succesfully deleted'
                                );
                            } else {
                                toastNotifications.addNotification(
                                    'error',
                                    'We could not delete all posts and comments because: ' +
                                    data["Message"]
                                );
                            }
                            $scope.isDeleting = false;
                        }).error(function() {
                        $scope.isDeleting = false;
                        toastNotifications.addNotification(
                            'error',
                            'We could not delete all posts and comments because there was an internal error!'
                        );
                    });
                }
            };
            gModalService.showMessageModal(warning);
        };
        $scope.banOrUnbanCryptopian = function() {
            if (!$scope.alreadyBanned) {
                var reason =
                    'Spamming the forum with affiliate links or other links with no added value for the user.';
                userManager.banCryptopian($scope.cryptopian.Id,
                    reason).success(function(data) {
                    if (data["Response"] == "Success") {
                        if (data.Type == 100) {
                            toastNotifications.addNotification(
                                'success',
                                'Cryptopian ' + $scope.cryptopian
                                .Name +
                                ' successfully banned!'
                            );
                            $scope.alreadyBanned = true;
                        }
                    } else {
                        if (data.Type == 1) {
                            cModalService.showLoginModal();
                        }
                        if (data.Type == 5) {
                            cModalService.showActivationReminderModal();
                        };
                        if (data.Type == 10) {
                            $scope.alreadyBanned = true;
                        };
                    }
                });
            }
            if ($scope.alreadyBanned) {
                userManager.unBanCryptopian($scope.cryptopian.Id).success(
                    function(data) {
                        if (data["Response"] == "Success") {
                            if (data.Type == 100) {
                                toastNotifications.addNotification(
                                    'success',
                                    'Cryptopian ' + $scope.cryptopian
                                    .Name +
                                    ' successfully un-banned!'
                                );
                                $scope.alreadyBanned = false;
                            }
                        } else {
                            if (data.Type == 1) {
                                cModalService.showLoginModal();
                            }
                            if (data.Type == 5) {
                                cModalService.showActivationReminderModal();
                            };
                            if (data.Type == 10) {
                                $scope.alreadyBanned = false;
                            };
                        }
                    });
            }
        }
    }
]);
angular.module('ccc-app').controller('FollowableItemOptionsCtrl', ['$scope',
    '$window', 'userManager', 'cModalService', 'toastNotifications',
    function($scope, $window, userManager, cModalService,
        toastNotifications) {
        $scope.changingFollowStatus = false;
        $scope.followingHover = false;
        $scope.status = {
            isopen: false
        };
        $scope.alreadyFollowing = false;
        $scope.itIsMe = false;
        $scope.isLoadingFollowing = false;
        $scope.toggleDropdown = function($event) {
            $event.preventDefault();
            $event.stopPropagation();
            if ($scope.isLoadingFollowing) {
                return;
            }
            if (!$scope.status.isopen) {
                if (userManager.getCryptopianId() == $scope.item.Id) {
                    $scope.itIsMe = true;
                    $scope.status.isopen = !$scope.status.isopen;
                    return;
                }
                if (userManager.isLoggedIn()) {
                    $scope.isLoadingFollowing = true;
                    userManager.checkFollowingStatus($scope.item.Id)
                        .success(function(data) {
                            $scope.isLoadingFollowing = false;
                            if (data.Type == 100) {
                                $scope.alreadyFollowing = true;
                            }
                            if (data.Type == 200) {
                                $scope.alreadyFollowing = false;
                            }
                            $scope.status.isopen = !$scope.status
                                .isopen;
                        });
                } else {
                    $scope.status.isopen = !$scope.status.isopen;
                    $scope.alreadyFollowing = false;
                }
            } else {
                $scope.status.isopen = !$scope.status.isopen;
            }
        };
        $scope.profileUrl = $scope.item.Url;
        $scope.goToProfile = function() {
            $window.location = $scope.profileUrl;
        };
        $scope.changeFollowingStatus = function() {
            if ($scope.changingFollowStatus) {
                return;
            }
            $scope.changingFollowStatus = true;
            var followingType = userManager.FOLLOWING.CRYPTOPIAN;
            if ($scope.item.Type == "Webpagecoinp") {
                followingType = userManager.FOLLOWING.COIN;
            }
            if ($scope.item.Type == "Webpageexchangep") {
                followingType = userManager.FOLLOWING.EXCHANGE;
            }
            userManager.changeFollowingStatus($scope.item.Id,
                followingType).success(function(data) {
                if (data["Response"] == "Success") {
                    if (data.Type == 100) {
                        toastNotifications.addNotification(
                            'success', 'Following ' +
                            $scope.item.Name + '!');
                        $scope.alreadyFollowing = true;
                    }
                    if (data.Type == 200) {
                        toastNotifications.addNotification(
                            'success', 'Unfollowed ' +
                            $scope.item.Name + '!');
                        $scope.alreadyFollowing = false;
                    }
                } else {
                    if (data.Type == 1) {
                        cModalService.showLoginModal();
                    }
                    if (data.Type == 5) {
                        cModalService.showActivationReminderModal();
                    };
                }
                $scope.changingFollowStatus = false;
            });
        };
    }
]);
angular.module('ccc-app').controller('FollowPageItemOptionsCtrl', ['$scope',
    '$window', 'userManager', 'cModalService', 'toastNotifications',
    function($scope, $window, userManager, cModalService,
        toastNotifications) {
        $scope.changingFollowStatus = false;
        $scope.followingHover = false;
        $scope.status = {
            isopen: false
        };
        $scope.alreadyFollowing = false;
        $scope.itIsMe = false;
        $scope.isLoadingFollowing = false;
        $scope.toggleDropdown = function($event) {
            $event.preventDefault();
            $event.stopPropagation();
            if ($scope.isLoadingFollowing) {
                return;
            }
            if (!$scope.status.isopen) {
                if (userManager.getCryptopianId() == $scope.item.Data
                    .Id) {
                    $scope.itIsMe = true;
                    $scope.status.isopen = !$scope.status.isopen;
                    return;
                }
                if (userManager.isLoggedIn()) {
                    $scope.isLoadingFollowing = true;
                    userManager.checkFollowingStatus($scope.item.Data
                        .Id).success(function(data) {
                        $scope.isLoadingFollowing = false;
                        if (data.Type == 100) {
                            $scope.alreadyFollowing = true;
                        }
                        if (data.Type == 200) {
                            $scope.alreadyFollowing = false;
                        }
                        $scope.status.isopen = !$scope.status
                            .isopen;
                    });
                } else {
                    $scope.status.isopen = !$scope.status.isopen;
                    $scope.alreadyFollowing = false;
                }
            } else {
                $scope.status.isopen = !$scope.status.isopen;
            }
        };
        $scope.profileUrl = $scope.item.Data.Url;
        $scope.goToProfile = function() {
            $window.location = $scope.profileUrl;
        };
        $scope.changeFollowingStatus = function() {
            if ($scope.changingFollowStatus) {
                return;
            }
            $scope.changingFollowStatus = true;
            var followingType = userManager.FOLLOWING.CRYPTOPIAN;
            if ($scope.item.Data.DocumentType == "Webpagecoinp") {
                followingType = userManager.FOLLOWING.COIN;
            }
            if ($scope.item.Data.DocumentType == "Webpageexchangep") {
                followingType = userManager.FOLLOWING.EXCHANGE;
            }
            userManager.changeFollowingStatus($scope.item.Data.Id,
                followingType).success(function(data) {
                if (data["Response"] == "Success") {
                    if (data.Type == 100) {
                        toastNotifications.addNotification(
                            'success', 'Following ' +
                            $scope.item.Data.Name + '!'
                        );
                        $scope.alreadyFollowing = true;
                        $scope.item.isFollowing = true;
                    }
                    if (data.Type == 200) {
                        toastNotifications.addNotification(
                            'success', 'Unfollowed ' +
                            $scope.item.Data.Name + '!'
                        );
                        $scope.alreadyFollowing = false;
                        $scope.item.isFollowing = false;
                    }
                } else {
                    if (data.Type == 1) {
                        cModalService.showLoginModal();
                    }
                    if (data.Type == 5) {
                        cModalService.showActivationReminderModal();
                    };
                }
                $scope.changingFollowStatus = false;
            });
        };
    }
]);
angular.module('ccc-app').controller('CookieNotificationPopupCtrl', ['$scope',
    'cccLocalStorage',
    function($scope, cccLocalStorage) {
        $scope.cookiePopupSeen = true;
        $scope.hideCookieNotification = function() {
            $scope.cookiePopupSeen = true;
        }
    }
]);
angular.module('ccc-app').controller('SocialShareCtrl', ['$scope', function(
    $scope) {
    $scope.shareTwitter = function() {
        var url = "https://twitter.com/intent/tweet?text=";
        var hashTags = "%23CryptoCompare%20" +
            encodeURIComponent(document.URL);
        url += encodeURIComponent(document.title.replace(
            " | CryptoCompare.com", "")) + "%20" + hashTags;
        var width = 600;
        var height = 400;
        var left = (screen.width / 2) - (width / 2);
        var top = (screen.height / 2) - (height / 2);
        var jsPopupDetails =
            'toolbar=no, location=no, directories=no, status=no, menubar=no, scrollbars=no, resizable=no, copyhistory=no, height=' +
            height + ',width=' + width + ',top=' + top +
            ', left=' + left;
        newwindow = window.open(url, 'name', jsPopupDetails);
        if (window.focus) {
            newwindow.focus()
        }
        return false;
    };
    $scope.shareFacebook = function() {
        var url =
            "https://www.facebook.com/sharer/sharer.php?u=";
        url += encodeURIComponent(document.URL);
        var width = 600;
        var height = 400;
        var left = (screen.width / 2) - (width / 2);
        var top = (screen.height / 2) - (height / 2);
        var jsPopupDetails =
            'toolbar=no, location=no, directories=no, status=no, menubar=no, scrollbars=no, resizable=no, copyhistory=no, height=' +
            height + ',width=' + width + ',top=' + top +
            ', left=' + left;
        newwindow = window.open(url, 'name', jsPopupDetails);
        if (window.focus) {
            newwindow.focus()
        }
        return false;
    };
    $scope.shareGooglePlus = function() {
        var url = "https://plus.google.com/share?url=";
        url += encodeURIComponent(document.URL);
        var width = 500;
        var height = 400;
        var left = (screen.width / 2) - (width / 2);
        var top = (screen.height / 2) - (height / 2);
        var jsPopupDetails =
            'toolbar=no, location=no, directories=no, status=no, menubar=no, scrollbars=no, resizable=no, copyhistory=no, height=' +
            height + ',width=' + width + ',top=' + top +
            ', left=' + left;
        newwindow = window.open(url, 'name', jsPopupDetails);
        if (window.focus) {
            newwindow.focus()
        }
        return false;
    };
}]);
angular.module('ccc-app').controller('DropdownMenuUserSectionCtrl', [
    '$rootScope', '$scope', 'userManager', 'notificationsManager',
    'cModalService', 'gModalService', 'cccLightsService',
    function($rootScope, $scope, userManager, notificationsManager,
        cModalService, gModalService, cccLightsService) {
        $scope.status = {
            isopen: false
        };
        $scope.userManager = userManager;
        $scope.notificationsManager = notificationsManager;
        $scope.LightsStatus = "Off";
        if (cccLightsService.isOn()) {
            $scope.LightsStatus = "Off";
        } else {
            $scope.LightsStatus = "On";
        }
        $rootScope.$on('LightsChange', function(event, isOn) {
            if (isOn == '1') {
                $scope.LightsStatus = "On";
            } else {
                $scope.LightsStatus = "Off";
            }
        });
        $scope.toggled = function(open, type) {
            if (open && type == 'notifications') {
                notificationsManager.markAsRead();
            }
        };
        $scope.showLogin = function() {
            cModalService.showLoginModal();
        };
        $scope.showTipUs = function() {
            gModalService.showTipUsModal();
        };
        $scope.toggleDropdown = function($event) {
            $event.preventDefault();
            $event.stopPropagation();
            $scope.status.isopen = !$scope.status.isopen;
        };
        $scope.switchLights = function() {
            if (cccLightsService.isOn()) {
                cccLightsService.turnOff();
            } else {
                cccLightsService.turnOn();
            }
        }
    }
]);
angular.module('ccc-app').controller('LoginButtonCtrl', ['$scope',
    'userManager', 'notificationsManager', 'cModalService',
    function($scope, userManager, notificationsManager, cModalService) {
        $scope.status = {
            isopen: false
        };
        $scope.userManager = userManager;
        $scope.notificationsManager = notificationsManager;
        $scope.toggled = function(open, type) {
            if (open && type == 'notifications') {
                notificationsManager.markAsRead();
            }
        };
        $scope.showLogin = function() {
            cModalService.showLoginModal();
        };
        $scope.showPasswordReset = function() {
            cModalService.showPasswordResetModal();
        };
        $scope.toggleDropdown = function($event) {
            $event.preventDefault();
            $event.stopPropagation();
            $scope.status.isopen = !$scope.status.isopen;
        };
    }
]);
angular.module('ccc-app').controller('AutosuggestCtrl', ['$scope', '$http',
    function($scope, $http) {
        $scope.asyncDataResult = "";
        $scope.getAutosuggest = function(val) {
            return $http.get('/api/autosuggest/all/', {
                params: {
                    q: val,
                    maxRows: 10
                }
            }).then(function(response) {
                if (response.data.Type > 99) {
                    return response.data.Results;
                }
            });
        };
        $scope.onSelect = function($item, $model, $label) {
            window.location.href = $item.fullPath;
        };
    }
]);
angular.module('ccc-app').controller('ShowMessageCtrl', ['$scope',
    '$uibModalInstance', 'message',
    function($scope, $uibModalInstance, message) {
        $scope.message = message;
        $scope.cancel = function() {
            $uibModalInstance.dismiss('Cancel');
        };
        $scope.doOkAction = function() {
            if ($scope.message.hasOwnProperty("OkAction")) {
                $scope.message.OkAction();
            }
            $uibModalInstance.close('Ok');
        };
    }
]);
angular.module('ccc-app').controller('ShowFeedackCtrl', ['$rootScope', '$scope',
    '$http', '$uibModalInstance', '$templateCache', 'gModalService',
    'cModalService', 'toastNotifications', 'userManager', 'debugInfo',
    function($rootScope, $scope, $http, $uibModalInstance,
        $templateCache, gModalService, cModalService,
        toastNotifications, userManager, debugInfo) {
        $scope.debugInfo = debugInfo;
        $scope.title = debugInfo.Title || "Website Feeback";
        $scope.sendingFeedback = false;
        $scope.debugInfo.ModalLoaded = new Date();
        $scope.cancel = function() {
            $uibModalInstance.dismiss('Cancel');
        };
        $scope.sendFeedback = function() {
            if (!$scope.feedbackText || $scope.feedbackText.trim() ==
                "") {
                var message = {
                    'Title': 'Feedback text appears to be blank...',
                    'Body': 'It seems that the feedback box is empty. Please write something and try to send your feedback again.',
                    'Type': 'warning'
                };
                gModalService.showMessageModal(message);
                return;
            }
            $scope.sendingFeedback = true;
            $scope.debugInfo.FeedbackText = $scope.feedbackText;
            $http.post('/api/cryptopian/sendfeedback', $scope.debugInfo)
                .success(function(response, status, headers, config) {
                    $scope.sendingFeedback = false;
                    if (response.Type > 99) {
                        toastNotifications.addNotification(
                            'success',
                            '<div>Message sent.</div>' +
                            '<div>Our team will address you issue, request or suggestion as soon as possible</div>'
                        );
                        $uibModalInstance.dismiss(
                            "Message sent");
                        return;
                    }
                    if (response.Type == 1) {
                        cModalService.showLoginModal();
                    }
                    if (response.Type == 2) {
                        $scope.alerts = [{
                            type: 'danger',
                            msg: "There was no data to update."
                        }];
                    }
                    if (response.Type == 99) {
                        $scope.alerts = [{
                            type: 'danger',
                            msg: 'Oops! Something went wrong. Please refresh the page and try again.',
                            contact: true
                        }];
                    }
                }).error(function(response, status, headers, config) {
                    $scope.sendingFeedback = false;
                    $scope.alerts = [{
                        type: 'danger',
                        msg: 'Oops! Something went wrong. Please refresh the page and try again.',
                        contact: true
                    }];
                });
        };
    }
]);
angular.module('ccc-app').controller('ContactUsFooterCtrl', ['$rootScope',
    '$scope', '$http', 'gModalService', 'userManager',
    'cccLightsService',
    function($rootScope, $scope, $http, gModalService, userManager,
        cccLightsService) {
        $scope.pageLoaded = new Date();
        $scope.LightsStatus = "Off";
        if (cccLightsService.isOn()) {
            $scope.LightsStatus = "Off";
        } else {
            $scope.LightsStatus = "On";
        }
        $scope.debugInfo = {
            "URL": document.URL,
            "PageLoaded": $scope.pageLoaded
        }
        $rootScope.$on('LightsChange', function(event, isOn) {
            if (isOn == '1') {
                $scope.LightsStatus = "On";
            } else {
                $scope.LightsStatus = "Off";
            }
        });
        $scope.switchLights = function() {
            if (cccLightsService.isOn()) {
                cccLightsService.turnOff();
            } else {
                cccLightsService.turnOn();
            }
        }
        $scope.sendFeedback = function() {
            $scope.debugInfo.Title = 'Website Feedback';
            $scope.debugInfo.Action = 'footerFeedback';
            $scope.debugInfo.ReportLinkClicked = new Date();
            $scope.debugInfo.UserName = userManager.getUsername();
            gModalService.showFeedbackModal($scope.debugInfo);
        };
        $scope.sendProblem = function(location) {
            $scope.debugInfo.Title = 'Website Issue';
            $scope.debugInfo.Action = location;
            $scope.debugInfo.ReportLinkClicked = new Date();
            $scope.debugInfo.UserName = userManager.getUsername();
            gModalService.showFeedbackModal($scope.debugInfo);
        }
        $scope.contactUs = function() {
            $scope.debugInfo.Title = 'Contact Us';
            $scope.debugInfo.Action = 'footerContactUs';
            $scope.debugInfo.ReportLinkClicked = new Date();
            $scope.debugInfo.UserName = userManager.getUsername();
            gModalService.showFeedbackModal($scope.debugInfo);
        };
        $scope.showTipUs = function() {
            gModalService.showTipUsModal();
        };
    }
]);
angular.module('ccc-app').controller('LoginRegisterCtrl', ['$scope', '$timeout',
    '$uibModalInstance', '$templateCache', '$http', 'cccLocalStorage',
    'cModalService', 'userManager', 'params', 'toastNotifications',
    function($scope, $timeout, $uibModalInstance, $templateCache, $http,
        cccLocalStorage, cModalService, userManager, params,
        toastNotifications) {
        $scope.tabSelected = "Login";
        $scope.actionTypeToTitle = {
            0: 'Sign in',
            1: 'Sign out',
            2: 'Forgotten Password',
            3: 'Email sent'
        }
        $scope.cryptopian = {};
        $scope.loginStatus = params.ActionStage;
        $scope.loginMessage = params.Message || '';
        $scope.signingIn = false;
        $scope.signingInFacebook = false;
        $scope.signingInGoogle = false;
        $scope.sendingPassResetEmail = false;
        $scope.registering = false;
        $scope.canSubmit = true;
        $scope.alerts = [];
        userManager.setShowingLogin(true);
        $scope.ok = function() {
            $uibModalInstance.close();
        };
        $scope.cancel = function() {
            $uibModalInstance.dismiss('Cancel');
        };
        $scope.closeAlert = function(index) {
            $scope.alerts.splice(index, 1);
        };
        $scope.init = function(loginStatus, b) {
            if (loginStatus != 1) {
                return;
            }
            $scope.loginStatus = loginStatus;
        };
        $scope.showPassReset = function() {
            $scope.loginStatus = 2;
        };
        $scope.backToLogin = function() {
            $scope.loginStatus = 0;
        };
        $scope.selectTabClick = function(tabName) {
            $scope.tabSelected = tabName;
            $scope.loginForm.email.$valid = true;
            $scope.loginForm.email.$invalid = false;
            $scope.loginForm.password.$valid = true;
            $scope.loginForm.password.$invalid = false;
        };
        $scope.sendPassResetEmail = function() {
            $scope.sendingPassResetEmail = true;
            $scope.canSubmit = false;
            return $http.post('/api/cryptopian/passrequest/', {
                "Username": $scope.cryptopian.email
            }).then(function(response) {
                $scope.sendingPassResetEmail = false;
                $scope.canSubmit = true;
                $scope.passReset.email.$valid = true;
                $scope.passReset.email.$invalid = false;
                $scope.passResetAlerts = [];
                if (response["data"]["Type"] === 100) {
                    $scope.loginStatus = 3;
                }
            }, function(response) {
                $scope.sendingPassResetEmail = false;
                $scope.canSubmit = true;
                $scope.passReset.email.$valid = true;
                $scope.passReset.email.$invalid = false;
                $scope.passResetAlerts = [];
                if (response["data"]["Type"] < 100) {
                    var currentAlert = {
                        type: 'danger',
                        msg: response["data"]["Message"]
                    };
                    $scope.passResetAlerts.push(
                        currentAlert);
                }
                if (response["data"]["Type"] === 2 ||
                    response["data"]["Type"] === 1) {
                    $scope.passReset.email.$valid = false;
                    $scope.passReset.email.$invalid = true;
                }
            });
        };
        $scope.loginFacebookAuthorize = function(response) {
            $scope.alerts = [];
            if (response.authResponse) {
                var accessToken = response.authResponse.accessToken;
                $http.post('/api/cryptopian/loginfacebook/', {
                    "AccessToken": accessToken
                }).then(function(response) {
                    $scope.signingInFacebook = false;
                    $scope.canSubmit = true;
                    if (response["data"]["Type"] === 100 ||
                        response["data"]["Type"] === 101) {
                        $scope.loginStatus = 1;
                        $uibModalInstance.dismiss(
                            "Facebook Login");
                        userManager.setLoggedIn(true);
                        userManager.initUser(response[
                            "data"]["Data"]);
                        toastNotifications.addNotification(
                            'success',
                            '<div>Login successfull.</div>' +
                            '<div>Good to see you again ' +
                            userManager.getUsername() +
                            '!</div>');
                        return;
                    }
                }, function(response) {
                    $scope.signingInFacebook = false;
                    $scope.canSubmit = true;
                    if (response["data"]["Type"] < 100) {
                        $scope.alerts.push({
                            type: 'danger',
                            msg: response["data"][
                                "Message"
                            ]
                        });
                    }
                });
            } else {
                $scope.signingInFacebook = false;
                $scope.canSubmit = true;
                $scope.alerts.push({
                    type: 'danger',
                    msg: "It seems that you have cancelled the login box. Please try again or use another authetication method."
                });
                $scope.$apply();
            }
        };
        $scope.loginFacebook = function() {
            $scope.signingInFacebook = true;
            $scope.canSubmit = false;
            FB.login(function(response) {
                $scope.loginFacebookAuthorize(response);
            }, {
                scope: 'email',
                auth_type: 'rerequest'
            });
        };
        $scope.loginGooglePlusAuthorize = function(authResult) {
            $scope.alerts = [];
            if (authResult['status']['signed_in'] && authResult[
                    'status']['method'] == 'PROMPT') {
                if (cccLocalStorage.getText("creating_g_account") !=
                    "") {
                    return;
                }
                cccLocalStorage.setItem("creating_g_account", 1);
                var accessToken = authResult['access_token'];
                $http.post('/api/cryptopian/logingoogleplus/', {
                    "AccessToken": accessToken
                }).then(function(response) {
                    $scope.signingInGoogle = false;
                    cccLocalStorage.removeItem(
                        "creating_g_account");
                    $scope.canSubmit = true;
                    if (response["data"]["Type"] === 100 ||
                        response["data"]["Type"] === 101) {
                        $scope.loginStatus = 1;
                        $uibModalInstance.dismiss(
                            "Google Login");
                        userManager.setLoggedIn(true);
                        userManager.initUser(response[
                            "data"]["Data"]);
                        toastNotifications.addNotification(
                            'success',
                            '<div>Login successfull.</div>' +
                            '<div>Good to see you again ' +
                            userManager.getUsername() +
                            '!</div>');
                        return;
                    }
                }, function(response) {
                    $scope.signingInGoogle = false;
                    cccLocalStorage.removeItem(
                        "creating_g_account");
                    $scope.canSubmit = true;
                    if (response["data"]["Type"] < 100) {
                        $scope.alerts.push({
                            type: 'danger',
                            msg: response["data"][
                                "Message"
                            ]
                        });
                    }
                });
            } else if (authResult['error'] !== 'immediate_failed') {
                $scope.signingInGoogle = false;
                cccLocalStorage.removeItem("creating_g_account");
                $scope.canSubmit = true;
                $scope.alerts.push({
                    type: 'danger',
                    msg: "It seems that you have cancelled the login box. Please try again or use another authetication method."
                });
                $scope.$apply();
            }
        };
        $scope.loginGooglePlus = function() {
            $scope.signingInGoogle = true;
            $scope.canSubmit = false;
            var googlePlusParams = {
                'clientid': '972420808852-gjedh6d1hset5i78tk68iloak1rs2gdk.apps.googleusercontent.com',
                'cookiepolicy': 'single_host_origin',
                'scope': 'email'
            };
            if (gapi.auth.getToken() == null) {
                googlePlusParams['callback'] = $scope.loginGooglePlusAuthorize;
            } else {
                $uibModalInstance.dismiss("Google Login");
            }
            gapi.auth.signIn(googlePlusParams);
        };
        $scope.login = function(u, p) {
            $scope.signingIn = true;
            $scope.canSubmit = false;
            u = u || "";
            p = p || "";
            return $http.post('/api/cryptopian/login/', {
                "Username": u,
                "Password": p
            }).then(function(response) {
                $scope.signingIn = false;
                $scope.canSubmit = true;
                $scope.loginForm.email.$valid = true;
                $scope.loginForm.email.$invalid = false;
                $scope.loginForm.password.$valid = true;
                $scope.loginForm.password.$invalid = false;
                $scope.alerts = [];
                if (response["data"]["Type"] === 100) {
                    $scope.loginStatus = 1;
                    $uibModalInstance.close("Website Login");
                    userManager.setLoggedIn(true);
                    userManager.initUser(response["data"][
                        "Data"
                    ]);
                    toastNotifications.addNotification(
                        'success',
                        '<div>Login successfull.</div>' +
                        '<div>Good to see you again ' +
                        userManager.getUsername() +
                        '!</div>');
                    return;
                };
            }, function(response) {
                $scope.signingIn = false;
                $scope.canSubmit = true;
                $scope.loginForm.email.$valid = true;
                $scope.loginForm.email.$invalid = false;
                $scope.loginForm.password.$valid = true;
                $scope.loginForm.password.$invalid = false;
                $scope.alerts = [];
                if (response["data"]["Type"] == 4) {
                    $scope.loginStatus = 1;
                    $uibModalInstance.close(
                        "Showing Activation Reminder");
                    userManager.setLoggedIn(true);
                    userManager.initUser(response["data"][
                        "Data"
                    ]);
                    cModalService.showActivationReminderModal();
                    return;
                };
                if (response["data"]["Type"] < 100) {
                    $scope.alerts.push({
                        type: 'danger',
                        msg: response["data"][
                            "Message"
                        ]
                    });
                };
                if (response["data"]["Type"] === 2 ||
                    response["data"]["Type"] === 1) {
                    $scope.loginForm.email.$valid = false;
                    $scope.loginForm.email.$invalid = true;
                };
                if (response["data"]["Type"] === 3 ||
                    response["data"]["Type"] === 1) {
                    $scope.loginForm.password.$valid =
                        false;
                    $scope.loginForm.password.$invalid =
                        true;
                };
            });
        };
        $scope.register = function(u, p) {
            $scope.registering = true;
            $scope.canSubmit = false;
            u = u || "";
            p = p || "";
            return $http.post('/api/cryptopian/register/', {
                "Username": u,
                "Password": p
            }).then(function(response) {
                $scope.registering = false;
                $scope.canSubmit = true;
                $scope.loginForm.email.$valid = true;
                $scope.loginForm.email.$invalid = false;
                $scope.loginForm.password.$valid = true;
                $scope.loginForm.password.$invalid = false;
                $scope.alerts = [];
                if (response["data"]["Type"] === 100) {
                    $scope.loginStatus = 1;
                    $uibModalInstance.close(
                        "Website Registration");
                    userManager.setLoggedIn(true);
                    userManager.initUser(response["data"][
                        "Data"
                    ]);
                    toastNotifications.addNotification(
                        'success',
                        '<div>Registration successfull.</div>' +
                        '<div>Welcome ' + userManager.getUsername() +
                        '!</div>');
                }
            }, function(response) {
                $scope.registering = false;
                $scope.canSubmit = true;
                $scope.loginForm.email.$valid = true;
                $scope.loginForm.email.$invalid = false;
                $scope.loginForm.password.$valid = true;
                $scope.loginForm.password.$invalid = false;
                $scope.alerts = [];
                if (response["data"]["Type"] < 100) {
                    $scope.alerts.push({
                        type: 'danger',
                        msg: response["data"][
                            "Message"
                        ]
                    });
                }
                if (response["data"]["Type"] === 2 ||
                    response["data"]["Type"] === 1) {
                    $scope.loginForm.email.$valid = false;
                    $scope.loginForm.email.$invalid = true;
                }
                if (response["data"]["Type"] === 3 ||
                    response["data"]["Type"] === 1) {
                    $scope.loginForm.password.$valid =
                        false;
                    $scope.loginForm.password.$invalid =
                        true;
                }
            });
        };
        $scope.logout = function() {
            toastNotifications.addNotification('success',
                '<div>Logout successfull.</div>' +
                '<div>Bye, bye ' + userManager.getUsername() +
                '. We hope to see you again soon!</div>');
            userManager.logout();
            $scope.loginStatus = 0;
        };
    }
]);
angular.module('ccc-app').controller('ActivationReminderCtrl', ['$scope',
    '$uibModalInstance', '$http', '$templateCache', 'cModalService',
    'userManager',
    function($scope, $uibModalInstance, $http, $templateCache,
        cModalService, userManager) {
        $scope.alerts = [];
        $scope.email = "";
        $scope.previousEmail = "";
        $scope.activationStep = 1;
        $scope.canSubmit = true;
        $scope.changingEmail = false;
        $scope.sendingActivationReminder = false;
        $scope.email = userManager.getEmailAddress();
        $scope.previousEmail = userManager.getEmailAddress();
        $scope.closeAlert = function(index) {
            $scope.alerts.splice(index, 1);
        };
        $scope.cancel = function() {
            $templateCache.remove('/angular/activationreminder');
            $uibModalInstance.dismiss('Cancel');
        };
        $scope.sendActivationReminder = function() {
            $scope.alerts = [];
            $scope.canSubmit = false;
            $scope.sendingActivationReminder = true;
            return $http.post('/api/cryptopian/activationreminder/')
                .success(function(response, status, headers, config) {
                    $scope.canSubmit = true;
                    $scope.sendingActivationReminder = false;
                    if (response.Type == 3) {
                        $scope.activationStep = 3;
                        return;
                    }
                    if (response.Type == 1) {
                        return;
                    }
                    $scope.activationStep = 2;
                }).error(function(response, status, headers, config) {
                    $scope.canSubmit = true;
                    $scope.sendingActivationReminder = false;
                    $scope.alerts = [{
                        type: 'danger',
                        msg: 'Oops! Something went wrong. Please refresh the page and try again.',
                        contact: true
                    }];
                });
        };
        $scope.changeEmail = function() {
            if (!$scope.email || $scope.email.trim() == "") {
                $scope.alerts = [{
                    type: 'danger',
                    msg: 'It seems that the email address you have typed in is invalid',
                    contact: false
                }];
                return;
            }
            $scope.email = $scope.email.trim();
            if ($scope.email == $scope.previousEmail) {
                $scope.alerts = [{
                    type: 'warning',
                    msg: 'It seems that you have not typed in a different email address.',
                    contact: false
                }];
                return;
            }
            $scope.alerts = [];
            $scope.canSubmit = false;
            $scope.changingEmail = true;
            $http.post('/api/cryptopian/update', {
                'Email': $scope.email
            }).success(function(response, status, headers,
                config) {
                $scope.canSubmit = true;
                $scope.changingEmail = false;
                if (response.Type > 99) {
                    $scope.previousEmail = $scope.email;
                    $scope.alerts = [{
                        type: 'success',
                        msg: 'Email address successfully changed. You can now request the verfification email to be sent to this address if you clik on the Send Verification Email button.',
                        contact: false
                    }];
                    $templateCache.remove(
                        '/angular/activationreminder');
                }
                if (response.Type == 4) {
                    $scope.alerts = [{
                        type: 'danger',
                        msg: "Could not update your email because " +
                            $scope.email +
                            " is already registered under a different account.",
                        contact: false
                    }];
                    $scope.email = $scope.previousEmail;
                } else if (response.Type == 3) {
                    $scope.alerts = [{
                        type: 'danger',
                        msg: "Could not update your email becasue " +
                            $scope.email +
                            " is not a valid email address.",
                        contact: false
                    }];
                    $scope.email = $scope.previousEmail;
                } else {
                    $scope.alerts = [{
                        type: 'danger',
                        msg: 'Oops! Something went wrong. Please refresh the page and try again.',
                        contact: true
                    }];
                }
            }).error(function(response, status, headers, config) {
                $scope.canSubmit = true;
                $scope.changingEmail = false;
                $scope.alerts = [{
                    type: 'danger',
                    msg: "Could not update your email because of an internal server error.",
                    contact: false
                }];
            });
        };
    }
]);
angular.module('ccc-app').controller('CryptopianListModalCtrl', ['$rootScope',
    '$scope', '$uibModalInstance', 'userManager', 'toastNotifications',
    'cModalService', 'initObj',
    function($rootScope, $scope, $uibModalInstance, userManager,
        toastNotifications, cModalService, initObj) {
        $scope.allCryptopianIds = [];
        $scope.showLoadingStatus = false;
        for (var iCList = 0, lCList = initObj.Data.length; iCList <
            lCList; iCList++) {
            initObj.Data[iCList].changingFollowStatus = false;
            $scope.allCryptopianIds.push(initObj.Data[iCList].Data.Id);
        }
        $scope.cryptopianList = initObj;
        $scope.itIsMe = function(cryptopianId) {
            if (!userManager.isLoggedIn()) {
                return false;
            }
            return userManager.getCryptopianId() == cryptopianId;
        }
        $scope.cancel = function() {
            $scope.loginChange();
            $uibModalInstance.dismiss('Cancel');
        };
        $scope.closingModal = $scope.$on("modal.closing", function(
            event, newValue) {
            $scope.loginChange();
            $scope.closingModal();
        });
        $scope.loadFollowingStatus = function(newValue) {
            if (newValue == true) {
                userManager.checkFollowingStatus($scope.allCryptopianIds
                    .join()).success(function(data) {
                    if (data.Type == 100) {
                        $scope.cryptopianList.Data.map(
                            function(item) {
                                if (data.Followed.indexOf(
                                        item.Data.Id) >
                                    -1) {
                                    item.amFollowing =
                                        true;
                                } else {
                                    item.amFollowing =
                                        false;
                                }
                                if (data.Following.indexOf(
                                        item.Data.Id) >
                                    -1) {
                                    item.isFollowing =
                                        true;
                                } else {
                                    item.isFollowing =
                                        false;
                                }
                                return item;
                            });
                    } else {
                        $scope.cryptopianList.Data.map(
                            function(item) {
                                item.isFollowing =
                                    false;
                                item.amFollowing =
                                    false;
                                return item;
                            });
                    }
                    $scope.showLoadingStatus = false;
                });
            } else {
                $scope.cryptopianList.Data.map(function(item) {
                    item.isFollowing = false;
                    item.amFollowing = false;
                    return item;
                });
                $scope.showLoadingStatus = false;
            }
        };
        $scope.loginChange = $rootScope.$on("LoginValueChange",
            function(event, newValue) {
                $scope.showLoadingStatus = true;
                $scope.loadFollowingStatus(newValue);
            });
        $scope.changeFollowingStatus = function(cryptopian) {
            if (cryptopian.changingFollowStatus == true) {
                return;
            }
            cryptopian.changingFollowStatus = true;
            userManager.changeFollowingStatus(cryptopian.Data.Id,
                userManager.FOLLOWING.CRYPTOPIAN).success(
                function(data) {
                    if (data["Response"] == "Success") {
                        if (data.Type == 100) {
                            toastNotifications.addNotification(
                                'success', 'Following ' +
                                cryptopian.Data.Name + '!');
                            cryptopian.amFollowing = true;
                        }
                        if (data.Type == 200) {
                            toastNotifications.addNotification(
                                'success', 'Unfollowed ' +
                                cryptopian.Data.Name + '!');
                            cryptopian.amFollowing = false;
                        }
                    } else {
                        if (data.Type == 1) {
                            cModalService.showLoginModal(
                                "Please login or signup and you'll be able to follow " +
                                cryptopian.Data.Name + '.');
                        }
                        if (data.Type == 5) {
                            cModalService.showActivationReminderModal();
                        };
                    }
                    cryptopian.changingFollowStatus = false;
                });
        };
        $scope.loadMore = function() {
            if (initObj.ActionType == "0") {
                initObj.LoadMoreService.getAgreeCryptopians($scope.cryptopianList
                    .ItemId, $scope.cryptopianList.Data[$scope.cryptopianList
                        .Data.length - 1].Id).success(function(
                    data) {
                    $scope.cryptopianList.MoreAvailable =
                        data.MoreAvailable;
                    for (var iAgree = 0, lAgree = data.Data
                            .length; iAgree < lAgree; iAgree++) {
                        $scope.cryptopianList.Data.push(
                            data.Data[iAgree]);
                    }
                });
            } else {
                initObj.LoadMoreService.getDisagreeCryptopians(
                    $scope.cryptopianList.ItemId, $scope.cryptopianList
                    .Data[$scope.cryptopianList.Data.length - 1]
                    .Id).success(function(data) {
                    $scope.cryptopianList.MoreAvailable =
                        data.MoreAvailable;
                    for (var iDisagree = 0, lDisagree =
                            data.Data.length; iDisagree <
                        lDisagree; iDisagree++) {
                        $scope.cryptopianList.Data.push(
                            data.Data[iDisagree]);
                    }
                });
            }
        };
    }
]);
angular.module('ccc-app').controller('PasswordResetCtrl', ['$scope', '$http',
    'cModalService', 'userManager', 'toastNotifications',
    function($scope, $http, cModalService, userManager,
        toastNotifications) {
        $scope.alerts = [];
        $scope.resetStage = 1;
        $scope.sendingNewPass = false;
        $scope.cryptopian = {
            'newPassword': '',
            'hash': ''
        };
        $scope.initPasswordReset = function(hashValue) {
            $scope.cryptopian.hash = hashValue;
        }
        $scope.closeAlert = function(index) {
            $scope.alerts.splice(index, 1);
        };
        $scope.passwordReset = function() {
            if (!$scope.cryptopian.newPassword || $scope.cryptopian
                .newPassword.trim() == "") {
                $scope.alerts = [{
                    type: 'danger',
                    msg: 'It seems that the new password you have typed in is invalid',
                    contact: false
                }];
                return;
            }
            $scope.alerts = [];
            $scope.sendingNewPass = true;
            $http.post('/api/cryptopian/passreset/', $scope.cryptopian)
                .success(function(response, status, headers, config) {
                    $scope.sendingNewPass = false;
                    if (response.Type > 99) {
                        $scope.resetStage = 2;
                        userManager.initUser(response["Data"]);
                        toastNotifications.addNotification(
                            'success',
                            '<div>Pass reset successfull.</div>' +
                            '<div>Welcome back ' +
                            userManager.getUsername() +
                            '!</div>');
                        userManager.setLoggedIn(true);
                    }
                }).error(function(response, status, headers, config) {
                    $scope.sendingNewPass = false;
                    if (response.Type < 100) {
                        $scope.alerts = [{
                            type: 'danger',
                            msg: response["Message"],
                            contact: false
                        }];
                    } else {
                        $scope.alerts = [{
                            type: 'danger',
                            msg: 'Oops! Something went wrong. Please refresh the page and try again.',
                            contact: true
                        }];
                    }
                });
        };
    }
]);
angular.module('ccc-app').controller('ChangeAvatarCtrl', ['$scope',
    '$uibModalInstance', '$timeout', '$templateCache', 'cModalService',
    'userManager', 'toastNotifications',
    function($scope, $uibModalInstance, $timeout, $templateCache,
        cModalService, userManager, toastNotifications) {
        $scope.alerts = [];
        $scope.canSubmit = true;
        $scope.changingAvatar = false;
        $scope.oldCryptopianAvatar = userManager.getAvatarUrl();
        $scope.newCryptopianAvatar = userManager.getAvatarUrl();
        $scope.closeAlert = function(index) {
            $scope.alerts.splice(index, 1);
        };
        $scope.cancel = function() {
            $uibModalInstance.dismiss('Cancel');
        };
        $scope.handleFileSelect = function(currentTarget) {
            if (currentTarget.files.length != 1) {
                return;
            }
            var file = currentTarget.files[0];
            var reader = new FileReader();
            reader.onload = function(_file) {
                $scope.$apply(function($scope) {
                    $scope.oldCryptopianAvatar = _file.target
                        .result;
                });
            };
            reader.readAsDataURL(file);
        };
        $scope.selectFile = function() {
            $timeout(function() {
                angular.element('#newImageFile').trigger(
                    'click')
            }, 100);
        }
        $scope.sendNewImageToServer = function() {
            if ($scope.oldCryptopianAvatar == $scope.newCryptopianAvatar) {
                $scope.alerts = [{
                    type: 'warning',
                    msg: 'It seems that you have not selected a new avatar.',
                    contact: false
                }];
                return;
            }
            $scope.alerts = [];
            $scope.canSubmit = false;
            $scope.changingAvatar = true;
            var objectWithUpdateFields = {};
            objectWithUpdateFields['NewAvatar'] = $scope.newCryptopianAvatar;
            userManager.updateFields(objectWithUpdateFields).success(
                function(data) {
                    if (data["Response"] == "Success") {
                        $scope.changingAvatar = false;
                        var newAvatarUrl = data["Cryptopian"].AvatarUrl;
                        $scope.oldCryptopianAvatar = $scope.newCryptopianAvatar;
                        userManager.setAvatarUrl($scope.newCryptopianAvatar)
                        toastNotifications.addNotification(
                            'success',
                            'Profile image succesfully updated!'
                        );
                        $scope.canSubmit = true;
                        $uibModalInstance.dismiss(
                            'Avatar Changed');
                    }
                }).error(function(response, status, headers,
                config) {
                toastNotifications.addNotification('error',
                    'Oops! Something went wrong. Please refresh the page and try again.'
                );
                $scope.canSubmit = true;
                $scope.changingAvatar = false;
                $scope.alerts = [{
                    type: 'danger',
                    msg: 'Oops! Something went wrong. Please refresh the page and try again.',
                    contact: true
                }];
            });
        };
    }
]);;;;
angular.module('ccc-app').directive('ngMetaUpdateContent', function() {
    return {
        restrict: 'A',
        link: function(scope, element, attrs) {
            scope.$watch(attrs.ngMetaUpdateContent, function(value) {
                attrs.$set('content', value);
            });
        }
    };
});
angular.module('ccc-app').directive('ngClassForLights', ['$rootScope',
    'cccLightsService',
    function($rootScope, cccLightsService) {
        return {
            restrict: 'A',
            link: function(scope, elem, attrs) {
                if (cccLightsService.isOn()) {
                    angular.element(elem).addClass('lights-on').removeClass(
                        'lights-off');
                } else {
                    angular.element(elem).addClass('lights-off').removeClass(
                        'lights-on');
                }
                $rootScope.$on("LightsChange", function() {
                    if (cccLightsService.isOn()) {
                        angular.element(elem).addClass(
                            'lights-on').removeClass(
                            'lights-off');
                    } else {
                        angular.element(elem).addClass(
                            'lights-off').removeClass(
                            'lights-on');
                    }
                });
            }
        };
    }
]);
angular.module('ccc-app').directive('ngMetaBaseCanUrl', function() {
    return {
        restrict: 'A',
        link: function(scope, element, attrs) {
            scope.$watch(attrs.ngMetaBaseCanUrl, function(value) {
                if (value != "") {
                    attrs.$set('rel', 'canonical');
                    attrs.$set('href', value);
                } else {
                    attrs.$set('rel', '');
                    attrs.$set('href', '');
                }
            });
        }
    };
});
angular.module('ccc-app').directive('ngMetaBaseAmpUrl', function() {
    return {
        restrict: 'A',
        link: function(scope, element, attrs) {
            scope.$watch(attrs.ngMetaBaseAmpUrl, function(value) {
                if (value != "") {
                    attrs.$set('rel', 'amphtml');
                    attrs.$set('href', value);
                } else {
                    attrs.$set('rel', '');
                    attrs.$set('href', '');
                }
            });
        }
    };
});
angular.module('ccc-app').directive('notificationAction', [function() {
    return {
        restrict: 'E',
        templateUrl: 'general/notification-user-action.html',
        controller: ['$scope', 'dateParsing', function($scope,
            dateParsing) {
            $scope.DateParsing = dateParsing;
            $scope.markAsRead = function() {
                $scope.notification.isRead = true;
            };
            $scope.markAsNotNew = function() {
                $scope.notification.isNew = false;
            };
            $scope.getActionText = function() {
                switch ($scope.notification.Type) {
                    case "Agree":
                        return ' agrees with ';
                        break;
                    case 'Disagree':
                        return ' disagrees with ';
                        break;
                    case 'Comment':
                        return ' commented on ';
                        break;
                    case 'Favorit':
                        return ' favorited ';
                        break;
                    default:
                        return ' something ';
                        break;
                }
            }
        }],
        scope: {
            notification: "="
        },
        link: function(scope, element, attrs) {}
    };
}]);
angular.module('ccc-app').directive('topAlerts', ['$compile', 'pageAlerts',
    function($compile, pageAlerts) {
        return {
            restrict: 'E',
            templateUrl: 'general/top-alerts.html',
            controller: function($scope) {},
            scope: {},
            link: function(scope, element, attrs) {
                scope.pageAlerts = pageAlerts;
            }
        };
    }
]);
angular.module('ccc-app').directive('usernameOptions', [function() {
    return {
        restrict: 'E',
        templateUrl: 'general/username-options.html',
        controller: 'UsernameOptionsCtrl',
        scope: {
            cryptopian: "=",
            icon: "=",
            avatar: "="
        },
        link: function(scope, element, attrs) {}
    };
}]);
angular.module('ccc-app').directive('followableItemOptions', [function() {
    return {
        restrict: 'E',
        templateUrl: 'general/followable-item-options.html',
        controller: 'FollowableItemOptionsCtrl',
        scope: {
            item: "=",
            icon: "=",
            avatar: "=",
            bubbleAlign: "@?bubbleAlign"
        },
        link: function(scope, element, attrs) {}
    };
}]);
angular.module('ccc-app').directive('followPageItemOptions', [function() {
    return {
        restrict: 'E',
        templateUrl: 'general/follow-page-item-options.html',
        controller: 'FollowPageItemOptionsCtrl',
        scope: {
            item: "=",
            icon: "=",
            avatar: "="
        },
        link: function(scope, element, attrs) {}
    };
}]);
angular.module('ccc-app').directive('showTotal', ['$compile', 'totals',
    function($compile, totals) {
        return {
            restrict: 'E',
            template: '<meta itemprop="interactionCount" content="UserComments:{{totals.get(totalName)}}"/>' +
                '<span class="total-value" ng-class="totalName" ng-title="{{totals.getFullNumber(totalName)}}">{{totals.get(totalName)}} {{totals.getText(totalName,text)}}</span>',
            controller: function($scope) {},
            scope: {},
            link: function(scope, element, attrs) {
                scope.totals = totals;
                scope.totalName = attrs["name"];
                scope.text = attrs["text"];
            }
        };
    }
]);
angular.module('ccc-app').directive('showTotalPageViews', ['$compile', 'totals',
    function($compile, totals) {
        return {
            restrict: 'E',
            template: '<span class="total-value" ng-class="totalName" title="{{totals.getFullNumber(totalName)}} {{totals.getText(totalName,text)}}">{{totals.get(totalName)}}</span>',
            controller: function($scope) {},
            scope: {},
            link: function(scope, element, attrs) {
                scope.totals = totals;
                scope.totalName = attrs["name"];
                scope.text = attrs["text"];
            }
        };
    }
]);
angular.module('ccc-app').directive('toastNotifications', ['$compile',
    'toastNotifications',
    function($compile, toastNotifications) {
        return {
            restrict: 'E',
            templateUrl: 'general/toast-notifications.html',
            controller: function($scope) {},
            scope: {},
            link: function(scope, element, attrs) {
                scope.toastNotifications = toastNotifications;
            }
        };
    }
]);
angular.module('ccc-app').directive('cookieNotificationPopup', [function() {
    return {
        restrict: 'E',
        templateUrl: 'general/cookie-notification-popup.html',
        controller: 'CookieNotificationPopupCtrl',
        scope: {},
        link: function(scope, element, attrs) {}
    };
}]);
angular.module('ccc-app').directive('infiniteScroll', ['$rootScope', '$window',
    '$timeout',
    function($rootScope, $window, $timeout) {
        return {
            restrict: 'A',
            scope: {
                scrollControllerObject: '='
            },
            link: function(scope, elem, attrs) {
                $window = angular.element($window);
                handler = function() {
                    var windowBottom, elementBottom, remaining,
                        loadMore;
                    windowBottom = $window.height() + $window.scrollTop();
                    elementBottom = elem.offset().top + elem.height();
                    remaining = elementBottom - windowBottom;
                    loadMore = remaining <= $window.height();
                    if (loadMore) {
                        $timeout(function() {
                            scope.scrollControllerObject
                                .loadMoreOnScroll();
                        }, 0, true);
                    }
                };
                $window.on('scroll', handler);
                var isScrolling = true;
                scope.$on('$destroy', function() {
                    if (isScrolling) {
                        isScrolling = false;
                        return $window.off('scroll',
                            handler);
                    }
                });
                scope.newView = $rootScope.$on(
                    '$stateChangeSuccess',
                    function(event) {
                        if (!isScrolling) {
                            $window.on('scroll', handler);
                        }
                    });
                scope.changeView = $rootScope.$on('ChangeView',
                    function(event, viewChangeParams) {
                        isScrolling = false;
                        $window.off('scroll', handler);
                        scope.changeView();
                        scope.newView();
                    });
            }
        };
    }
]);;;;
$(function() {
    var $swiper_charts = false;
    var isChrome = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(
        navigator.vendor);
    var isSafari = /Safari/.test(navigator.userAgent) &&
        /Apple Computer/.test(navigator.vendor);
    if (isSafari) {
        $('html').addClass('safari');
    } else {
        $('html').addClass('other');
    }

    function team_hover() {
        if ($(window).width() < 769) {
            $('.item-team').removeClass('with-hover');
        } else {
            $('.item-team').addClass('with-hover');
        }
    }

    function remove_ribbon() {
        if ($(window).width() < 1210) {
            $('.marker-ribbon').removeClass('ribbon-content');
        } else {
            $('.marker-ribbon').addClass('ribbon-content');
        }
    }
    remove_ribbon();
    team_hover();
    $(document).on('click', '.nav-login-modal li a', function() {
        $('.nav-login-modal li').removeClass('active');
        $(this).parent('li').addClass('active');
        if ($(this).hasClass('activate-login')) {
            $('.btn-login').removeClass('hidden');
            $('.btn-signup').addClass('hidden');
            $('.modal-footer-login').addClass('hidden');
        }
        if ($(this).hasClass('activate-signup')) {
            $('.btn-signup').removeClass('hidden');
            $('.btn-login').addClass('hidden');
            $('.modal-footer-login').removeClass('hidden');
        }
    });
    $(window).resize(function() {
        remove_ribbon();
    });
});;;;
angular.module('ccc-app').config(function($stateProvider, $urlRouterProvider,
    $locationProvider) {
    $urlRouterProvider.otherwise('/btc');
    $locationProvider.html5Mode(true);
    $stateProvider.state('tab', {
        url: '/:tabname?HashingPower&HashingUnit&PowerConsumption&CostPerkWh'
    });
});;;;
angular.module('ccc-app').factory('cccMiningData', ['$rootScope', '$filter',
    function cccMiningDataFactory($rootScope, $filter) {
        var cccUtil = CCC.STATIC.UTIL;
        var cccCurrencySymbol = CCC.STATIC.CURRENCY;
        var miningCalculatorTabs = {};
        var cccMiningDataInterface = {};
        var allCalculationData = {
            'MiningData': {},
            'CoinData': {}
        };
        var netHashesBaseMultiple = {
            'BTC': 1000000000,
            'ETH': 1,
            'ETC': 1,
            'LTC': 1
        };
        var rewardDivison = {
            'DASH': 2
        };
        var defaultCostPerkWh = 0.12;
        var costPerkWh = defaultCostPerkWh;
        cccMiningDataInterface.getUsdPricePerkWh = function() {
            return costPerkWh;
        };
        cccMiningDataInterface.resetCostPerkWh = function() {
            costPerkWh = defaultCostPerkWh;
        };
        cccMiningDataInterface.setNewCostPerkWh = function(newUSDPrice) {
            costPerkWh = newUSDPrice;
        };
        cccMiningDataInterface.setMiningCalculatorData = function(
            apiResponse) {
            miningCalculatorTabs = apiResponse.Tabs;
            cccMiningDataInterface.setAllCoinData(apiResponse.CoinData);
        };
        cccMiningDataInterface.getMiningCalculatorTabs = function() {
            return miningCalculatorTabs;
        };
        cccMiningDataInterface.reGenerateValues = function() {
            for (var id in allCalculationData.MiningData) {
                var currentMiningData = allCalculationData.MiningData[
                    id];
                if (currentMiningData.ItemType == "MiningEquipment") {
                    this.generateEquipmentStats(currentMiningData,
                        allCalculationData.CoinData[
                            currentMiningData[
                                "CurrenciesAvailable"]],
                        costPerkWh);
                }
                if (currentMiningData.ItemType == "Contract") {
                    this.generateContractStats(currentMiningData,
                        allCalculationData.CoinData[
                            currentMiningData[
                                "CurrenciesAvailable"]]);
                }
                allCalculationData.MiningData[id] =
                    currentMiningData;
            };
        };
        cccMiningDataInterface.generateReturnFromReturnPerDay =
            function(miningData, returnPerDayInCommonCurrency) {
                miningData['CostDisplay'] = cccUtil.convertValueToDisplay(
                    cccCurrencySymbol.getSymbol(miningData.Currency),
                    parseFloat(miningData.Cost), $filter('number'),
                    'short');
                miningData['ReturnPerDayUSD'] =
                    returnPerDayInCommonCurrency;
                miningData['CostInUSD'] = parseFloat(miningData.Cost);
                var daysToReturn = 0;
                if (miningData.Currency == "USD") {
                    daysToReturn = parseFloat(miningData.Cost) /
                        returnPerDayInCommonCurrency;
                    miningData['ReturnPerYearPCT'] = Math.floor(
                        returnPerDayInCommonCurrency * 365 /
                        miningData.Cost * 100);
                } else {
                    miningData['CostInUSD'] = parseFloat(miningData.Cost *
                        allCalculationData.CoinData[miningData.Currency]
                        .PriceUSD);
                    daysToReturn = miningData['CostInUSD'] /
                        returnPerDayInCommonCurrency;
                    miningData['ReturnPerYearPCT'] = Math.floor(
                        returnPerDayInCommonCurrency * 365 /
                        miningData['CostInUSD'] * 100);
                }
                miningData['CostInUSDDisplay'] = cccUtil.convertValueToDisplay(
                    '$', miningData['CostInUSD'], $filter('number'),
                    'short');
                miningData['ReturnPerDayUSDDisplay'] = cccUtil.convertValueToDisplay(
                    '$', miningData['ReturnPerDayUSD'], $filter(
                        'number'), 'short');
                miningData['ReturnPerWeekUSDDisplay'] = cccUtil.convertValueToDisplay(
                    '$', miningData['ReturnPerDayUSD'] * 7, $filter(
                        'number'), 'short');
                miningData['ReturnPerMonthUSDDisplay'] = cccUtil.convertValueToDisplay(
                    '$', miningData['ReturnPerDayUSD'] * 30,
                    $filter('number'), 'short');
                miningData['ReturnPerYearUSDDisplay'] = cccUtil.convertValueToDisplay(
                    '$', miningData['ReturnPerDayUSD'] * 365,
                    $filter('number'), 'short');
                miningData['DaysToReturn'] = Math.floor(daysToReturn);
                miningData['DaysToReturnDisplay'] = $filter('number')(
                    miningData['DaysToReturn'], 0) + " days";
                if (miningData['DaysToReturn'] < 0) {
                    miningData['DaysToReturnDisplay'] = "Never";
                }
            };
        cccMiningDataInterface.generateNetHashingDisplay = function(
            coindata) {
            switch (coindata["Symbol"]) {
                case "BTC":
                    coindata['NetHashesPerSecondDisplay'] = $filter(
                        'number')(parseFloat(coindata.NetHashesPerSecond) /
                        (1000000000 / netHashesBaseMultiple[
                            coindata["Symbol"]]), 0);
                    coindata['NetHashesPerSecondUnitDisplay'] =
                        "GH/s";
                    break;
                case "ETH":
                case "ETC":
                    coindata['NetHashesPerSecondDisplay'] = $filter(
                        'number')(parseFloat(coindata.NetHashesPerSecond) /
                        (1000000000 / netHashesBaseMultiple[
                            coindata["Symbol"]]), 0);
                    coindata['NetHashesPerSecondUnitDisplay'] =
                        "GH/s";
                    break;
                case "LTC":
                    coindata['NetHashesPerSecondDisplay'] = $filter(
                        'number')(parseFloat(coindata.NetHashesPerSecond) /
                        (1000000000 / netHashesBaseMultiple[
                            coindata["Symbol"]]), 0);
                    coindata['NetHashesPerSecondUnitDisplay'] =
                        "GH/s";
                    break;
                case "XMR":
                    coindata['NetHashesPerSecondDisplay'] = $filter(
                        'number')(parseFloat(coindata.NetHashesPerSecond) /
                        (1000000), 0);
                    coindata['NetHashesPerSecondUnitDisplay'] =
                        "MH/s";
                    break;
                case "ZEC":
                case "ZCL":
                    coindata['NetHashesPerSecondDisplay'] = $filter(
                        'number')(parseFloat(coindata.NetHashesPerSecond) /
                        (1000), 0);
                    coindata['NetHashesPerSecondUnitDisplay'] =
                        "KH/s";
                    break;
                default:
                    coindata['NetHashesPerSecondDisplay'] = $filter(
                        'number')(parseFloat(coindata.NetHashesPerSecond) /
                        1000000000, 0);
                    coindata['NetHashesPerSecondUnitDisplay'] =
                        "GH/s";
                    break;
            }
        };
        cccMiningDataInterface.generateHashingDisplay = function(
            miningData) {
            var hashesWithoutEndZeros = (miningData.HashesPerSecond +
                "").replace(/0+$/, '');
            miningData['HashesValueDisplay'] =
                hashesWithoutEndZeros;
            miningData['HashesUnitDisplay'] = 'H/s';
            var totalZerosAtEnd = (miningData.HashesPerSecond + "")
                .length - hashesWithoutEndZeros.length;
            if (totalZerosAtEnd >= 9) {
                for (var i = 9; i < totalZerosAtEnd; i++) {
                    miningData['HashesValueDisplay'] += "0";
                }
                miningData['HashesUnitDisplay'] = "GH/s";
            } else if (totalZerosAtEnd >= 6) {
                for (var i = 6; i < totalZerosAtEnd; i++) {
                    miningData['HashesValueDisplay'] += "0";
                }
                miningData['HashesUnitDisplay'] = "MH/s";
            } else if (totalZerosAtEnd >= 3) {
                for (var i = 3; i < totalZerosAtEnd; i++) {
                    miningData['HashesValueDisplay'] += "0";
                }
                miningData['HashesUnitDisplay'] = "KH/s";
            } else {
                miningData['HashesValueDisplay'] = parseFloat(
                    miningData.HashesPerSecond);
            }
            miningData['CostPerHashingUnit'] = cccUtil.convertValueToDisplay(
                "$", parseFloat(miningData.Cost) / parseFloat(
                    miningData['HashesValueDisplay']), $filter(
                    'number'));
            miningData['HashesValueDisplay'] = $filter('number')(
                miningData['HashesValueDisplay'], 1);
        };
        cccMiningDataInterface.decorateMiningPoolData = function(
            miningData) {
            miningData['AverageFeeValue'] = parseFloat(miningData[
                'AverageFee'].replace('%', ''));
            miningData.Display = {};
            miningData.Display.Features = {
                'Stratum': false,
                'Monitoring': false,
                'Vardiff': false,
                'Transaction Fees Shared With Miner': miningData[
                    'TxFeeSharedWithMiner'],
                'Merged Mining': miningData['MergedMining']
            };
            for (var i = 0, length = miningData['PoolFeatures'].length; i <
                length; i++) {
                miningData.Display.Features[miningData.PoolFeatures[
                    i]] = true;
            }
        };
        cccMiningDataInterface.calculateMiningShare = function(
            hashesPerSecond, coinData) {
            var devideBy = 1;
            if (netHashesBaseMultiple.hasOwnProperty(coinData[
                    'Symbol'])) {
                devideBy = netHashesBaseMultiple[coinData['Symbol']];
            }
            var totalHashingPower = parseFloat(coinData.NetHashesPerSecond);
            var currentHashingPower = parseFloat(hashesPerSecond) /
                devideBy;
            return currentHashingPower / (totalHashingPower +
                currentHashingPower);
        };
        cccMiningDataInterface.getRewardDivision = function(coinData) {
            var divideBy = 1
            if (rewardDivison.hasOwnProperty(coinData['Symbol'])) {
                divideBy = rewardDivison[coinData['Symbol']];
            }
            return divideBy;
        };
        cccMiningDataInterface.calculateReturnPerDay = function(
            miningShare, coinData) {
            return miningShare * 86400 / coinData.BlockTime * (
                coinData.BlockReward / cccMiningDataInterface.getRewardDivision(
                    coinData));
        };
        cccMiningDataInterface.setAllCoinData = function(apiResponse) {
            for (var symbol in apiResponse) {
                if (!allCalculationData.CoinData.hasOwnProperty(
                        symbol)) {
                    this.generateNetHashingDisplay(apiResponse[
                        symbol]);
                    allCalculationData.CoinData[symbol] =
                        apiResponse[symbol];
                }
            }
        };
        cccMiningDataInterface.setAllContractData = function(
            apiResponse) {
            cccMiningDataInterface.setAllCoinData(apiResponse.CoinData);
            for (var id in apiResponse.MiningData) {
                var currentMiningData = apiResponse.MiningData[id];
                currentMiningData.ItemType = "Contract";
                this.generateContractStats(currentMiningData,
                    allCalculationData.CoinData[
                        currentMiningData["CurrenciesAvailable"]
                    ]);
                allCalculationData.MiningData[id] =
                    currentMiningData;
            };
        };
        cccMiningDataInterface.setAllEquipmentData = function(
            apiResponse) {
            cccMiningDataInterface.setAllCoinData(apiResponse.CoinData);
            for (var id in apiResponse.MiningData) {
                var currentMiningData = apiResponse.MiningData[id];
                currentMiningData.ItemType = "MiningEquipment";
                this.generateEquipmentStats(currentMiningData,
                    allCalculationData.CoinData[
                        currentMiningData["CurrenciesAvailable"]
                    ], costPerkWh);
                allCalculationData.MiningData[id] =
                    currentMiningData;
            };
        };
        cccMiningDataInterface.setAllPoolData = function(apiResponse) {
            for (var id in apiResponse.Data) {
                var currentMiningData = apiResponse.Data[id];
                currentMiningData.ItemType = "MiningPool";
                this.decorateMiningPoolData(currentMiningData);
                allCalculationData.MiningData[id] =
                    currentMiningData;
            };
        };
        cccMiningDataInterface.getMiningData = function() {
            return allCalculationData.MiningData;
        };
        cccMiningDataInterface.getMiningDataById = function(miningId) {
            if (allCalculationData.MiningData.hasOwnProperty(
                    miningId)) {
                return allCalculationData.MiningData[miningId];
            }
            return "";
        };
        cccMiningDataInterface.getCoinData = function(symbol) {
            if (allCalculationData.CoinData.hasOwnProperty(symbol)) {
                return allCalculationData.CoinData[symbol];
            }
            return "";
        };
        cccMiningDataInterface.generateEquipmentStats = function(
            currentMiningData, currentCoinData, costPerkWh) {
            this.generateHashingDisplay(currentMiningData);
            var miningShare = this.calculateMiningShare(
                currentMiningData.HashesPerSecond,
                currentCoinData);
            var returnPerDay = this.calculateReturnPerDay(
                miningShare, currentCoinData);
            var returnPerDayInCommonCurrency = currentCoinData.PriceUSD *
                returnPerDay;
            currentMiningData['ProfitRatio'] = 100;
            currentMiningData['PowerCostPerDay'] = ((parseFloat(
                    currentMiningData.PowerConsumption) *
                24) / 1000) * costPerkWh;
            currentMiningData['PowerCostPerDayDisplay'] = cccUtil.convertValueToDisplay(
                "$", currentMiningData['PowerCostPerDay'],
                $filter('number'));
            returnPerDayInCommonCurrency =
                returnPerDayInCommonCurrency - currentMiningData[
                    'PowerCostPerDay'];
            currentMiningData['ProfitRatio'] = Math.floor(
                returnPerDayInCommonCurrency /
                currentMiningData['PowerCostPerDay'] * 100);
            this.generateReturnFromReturnPerDay(currentMiningData,
                returnPerDayInCommonCurrency);
        };
        cccMiningDataInterface.generateContractStats = function(
            currentMiningData, currentCoinData) {
            currentMiningData['ContractLengthDisplay'] =
                currentMiningData.ContractLength;
            if (currentMiningData.ContractLength != "Lifetime") {
                var totalMonths = Math.floor(parseInt(
                    currentMiningData.ContractLength) / 30);
                if (totalMonths == 1) {
                    currentMiningData['ContractLengthDisplay'] =
                        totalMonths + " Month";
                } else {
                    currentMiningData['ContractLengthDisplay'] =
                        totalMonths + " Months";
                }
            }
            this.generateHashingDisplay(currentMiningData);
            var miningShare = this.calculateMiningShare(
                currentMiningData.HashesPerSecond,
                currentCoinData);
            var returnPerDay = this.calculateReturnPerDay(
                miningShare, currentCoinData);
            var returnPerDayInCommonCurrency = currentCoinData.PriceUSD *
                returnPerDay;
            currentMiningData['ProfitRatio'] = 100;
            currentMiningData['FeeInUSD'] = 0;
            if (currentMiningData.hasOwnProperty("FeeValue")) {
                currentMiningData.FeeValue = parseFloat(
                    currentMiningData.FeeValue);
                if (currentMiningData.FeeValue > 0) {
                    if (currentMiningData.FeeValueCurrency == "USD") {
                        currentMiningData['FeeInUSD'] =
                            currentMiningData.FeeValue;
                        returnPerDayInCommonCurrency =
                            returnPerDayInCommonCurrency -
                            currentMiningData.FeeValue;
                        currentMiningData['ProfitRatio'] = Math.floor(
                            returnPerDayInCommonCurrency /
                            currentMiningData.FeeValue * 100);
                    } else {
                        var feeInUSD = currentMiningData.FeeValue *
                            allCalculationData.CoinData[
                                currentMiningData.FeeValueCurrency]
                            .PriceUSD;
                        currentMiningData['FeeInUSD'] = feeInUSD;
                        returnPerDayInCommonCurrency =
                            returnPerDayInCommonCurrency - feeInUSD;
                        currentMiningData['ProfitRatio'] = Math.floor(
                            returnPerDayInCommonCurrency /
                            feeInUSD * 100);
                    }
                }
            }
            if (currentMiningData.FeePercentage > 0) {
                returnPerDayInCommonCurrency =
                    returnPerDayInCommonCurrency - (
                        returnPerDayInCommonCurrency / 100 *
                        currentMiningData.FeePercentage);
            }
            this.generateReturnFromReturnPerDay(currentMiningData,
                returnPerDayInCommonCurrency);
            if (currentMiningData['ContractLength'] != "Lifetime" &&
                parseInt(currentMiningData['ContractLength'], 10) <
                currentMiningData['DaysToReturn']) {
                currentMiningData['DaysToReturnDisplay'] = "Never";
            }
        };
        return cccMiningDataInterface;
    }
]);;;;
angular.module('ccc-app').controller('miningListCtrl', ['$scope', '$state',
    '$stateParams', 'miningData',
    function($scope, $state, $stateParams, miningData) {
        $scope.acceptedTabs = miningData.getTabs();
        $scope.allData = miningData;
        $scope.miningData = miningData;
        $scope.currentTab = "";
        $scope.currentTabObject = $scope.acceptedTabs[0];
        $scope.isActive = function(tabname) {
            return tabname == $scope.currentTab;
        };
        $scope.$root.$on('$stateChangeSuccess', function(event, toState,
            toParams, fromState, fromParams) {
            if (miningData.tabExists(toParams.tabname)) {
                $scope.currentTab = toParams.tabname;
                $scope.currentTabObject = miningData.getTabObject(
                    $scope.currentTab);
                miningData.filterByTab($scope.currentTab);
                var filters = miningData.getAllFiltersForCurrentView();
                if (toParams.f0 != undefined && filters.length >
                    0) {
                    miningData.filterBy(filters[0].FilterField,
                        toParams.f0);
                }
                if (toParams.f1 != undefined && filters.length >
                    1) {
                    miningData.filterBy(filters[1].FilterField,
                        toParams.f1);
                }
                if (toParams.f2 != undefined && filters.length >
                    2) {
                    miningData.filterBy(filters[2].FilterField,
                        toParams.f2);
                }
                if (toParams.f3 != undefined && filters.length >
                    3) {
                    miningData.filterBy(filters[3].FilterField,
                        toParams.f3);
                }
            } else {
                $state.go("tab", {
                    tabname: $scope.acceptedTabs[0].Id
                });
            }
        });
    }
]);
angular.module('ccc-app').controller('miningCalculatorCtrl', ['$scope',
    '$filter', '$location', '$state', '$stateParams', '$timeout',
    'cccLocalStorage', 'cModalService', 'userManager', 'cccMiningData',
    'pageInfo',
    function($scope, $filter, $location, $state, $stateParams, $timeout,
        cccLocalStorage, cModalService, userManager, cccMiningData,
        pageInfo) {
        var cccUtil = CCC.STATIC.UTIL;
        var cccCurrencySymbol = CCC.STATIC.CURRENCY;
        $scope.hashingUnitsToValue = {
            'H/s': 1,
            'KH/s': 1000,
            'MH/s': 1000 * 1000,
            'GH/s': 1000 * 1000 * 1000,
            'TH/s': 1000 * 1000 * 1000 * 1000
        };
        $scope.hashingUnitsNames = Object.keys($scope.hashingUnitsToValue);
        $scope.generatedValues = {};
        $scope.currentData = {};
        $scope.currentCoinData = {};
        $scope.showLoginScreen = function(timeoutMS) {
            if (!userManager.isLoggedIn()) {
                $timeout(function() {
                    if (!userManager.isLoggedIn() && !
                        userManager.isShowingLogin()) {
                        cModalService.showLoginModal(
                            'If you are enjoying our free ming calculator please login or signup. We do not have ads and growing our community is what keeps us going.'
                        );
                    }
                }, timeoutMS);
            }
        };
        $scope.showLoginScreen(300000);
        $scope.generateValues = function() {
            var totalHashes = $scope.currentData.HashingPower *
                $scope.hashingUnitsToValue[$scope.currentData.HashingUnit];
            var miningDivision = cccMiningData.getRewardDivision(
                $scope.currentCoinData);
            var miningShare = cccMiningData.calculateMiningShare(
                totalHashes, $scope.currentCoinData);
            $scope.generatedValues['BlockRewardMining'] =
                parseFloat($scope.currentCoinData['BlockReward']) /
                miningDivision;
            $scope.generatedValues['MinedPerDay'] = cccMiningData.calculateReturnPerDay(
                miningShare, $scope.currentCoinData);
            $scope.generatedValues['MinedPerDayUSD'] = $scope.currentCoinData
                .PriceUSD * $scope.generatedValues['MinedPerDay'];
            $scope.generatedValues['ProfitRatio'] = 100;
            $scope.generatedValues['PowerCostPerDayUSD'] = ((
                parseFloat($scope.currentData.PowerConsumption) *
                24) / 1000) * $scope.currentData.CostPerkWh;
            $scope.generatedValues['PowerCostPerDay'] = $scope.generatedValues[
                'PowerCostPerDayUSD'] / $scope.currentCoinData.PriceUSD;
            $scope.generatedValues['ReturnPerDay'] = $scope.generatedValues[
                'MinedPerDay'] - $scope.generatedValues[
                'PowerCostPerDay'];
            $scope.generatedValues['ReturnPerDayUSD'] = $scope.generatedValues[
                'MinedPerDayUSD'] - $scope.generatedValues[
                'PowerCostPerDayUSD'];
            $scope.generatedValues['ProfitRatio'] = Math.floor(
                $scope.generatedValues['ReturnPerDayUSD'] /
                $scope.generatedValues['PowerCostPerDayUSD'] *
                100);
            $scope.generatedValues['SymbolDisplay'] = $scope.currentCoinData
                .Symbol;
            $scope.generatedValues['PowerCostPerDayDisplay'] =
                cccUtil.convertValueToDisplay(cccCurrencySymbol.getSymbol(
                        $scope.currentCoinData.Symbol), $scope.generatedValues[
                        'PowerCostPerDay'], $filter('number'),
                    'short');
            $scope.generatedValues['PowerCostPerDayUSDDisplay'] =
                cccUtil.convertValueToDisplay("$", $scope.generatedValues[
                        'PowerCostPerDayUSD'], $filter('number'),
                    'short');
            $scope.generatedValues['PowerCostPerWeekUSDDisplay'] =
                cccUtil.convertValueToDisplay("$", $scope.generatedValues[
                        'PowerCostPerDayUSD'] * 7, $filter('number'),
                    'short');
            $scope.generatedValues['PowerCostPerMonthUSDDisplay'] =
                cccUtil.convertValueToDisplay("$", $scope.generatedValues[
                    'PowerCostPerDayUSD'] * 30, $filter(
                    'number'), 'short');
            $scope.generatedValues['PowerCostPerYearUSDDisplay'] =
                cccUtil.convertValueToDisplay("$", $scope.generatedValues[
                    'PowerCostPerDayUSD'] * 365, $filter(
                    'number'), 'short');
            $scope.generatedValues['MinedPerDayDisplay'] = cccUtil.convertValueToDisplay(
                cccCurrencySymbol.getSymbol($scope.currentCoinData
                    .Symbol), $scope.generatedValues[
                    'MinedPerDay'], $filter('number'), 'short');
            $scope.generatedValues['MinedPerWeekDisplay'] = cccUtil
                .convertValueToDisplay(cccCurrencySymbol.getSymbol(
                        $scope.currentCoinData.Symbol), $scope.generatedValues[
                        'MinedPerDay'] * 7, $filter('number'),
                    'short');
            $scope.generatedValues['MinedPerMonthDisplay'] =
                cccUtil.convertValueToDisplay(cccCurrencySymbol.getSymbol(
                        $scope.currentCoinData.Symbol), $scope.generatedValues[
                        'MinedPerDay'] * 30, $filter('number'),
                    'short');
            $scope.generatedValues['MinedPerYearDisplay'] = cccUtil
                .convertValueToDisplay(cccCurrencySymbol.getSymbol(
                        $scope.currentCoinData.Symbol), $scope.generatedValues[
                        'MinedPerDay'] * 365, $filter('number'),
                    'short');
            $scope.generatedValues['ReturnPerDayDisplay'] = cccUtil
                .convertValueToDisplay(cccCurrencySymbol.getSymbol(
                    $scope.currentCoinData.Symbol), $scope.generatedValues[
                    'ReturnPerDay'], $filter('number'), 'short');
            $scope.generatedValues['ReturnPerWeekDisplay'] =
                cccUtil.convertValueToDisplay(cccCurrencySymbol.getSymbol(
                        $scope.currentCoinData.Symbol), $scope.generatedValues[
                        'ReturnPerDay'] * 7, $filter('number'),
                    'short');
            $scope.generatedValues['ReturnPerMonthDisplay'] =
                cccUtil.convertValueToDisplay(cccCurrencySymbol.getSymbol(
                        $scope.currentCoinData.Symbol), $scope.generatedValues[
                        'ReturnPerDay'] * 30, $filter('number'),
                    'short');
            $scope.generatedValues['ReturnPerYearDisplay'] =
                cccUtil.convertValueToDisplay(cccCurrencySymbol.getSymbol(
                        $scope.currentCoinData.Symbol), $scope.generatedValues[
                        'ReturnPerDay'] * 365, $filter('number'),
                    'short');
            $scope.generatedValues['ReturnPerDayUSDDisplay'] =
                cccUtil.convertValueToDisplay('$', $scope.generatedValues[
                        'ReturnPerDayUSD'], $filter('number'),
                    'short');
            $scope.generatedValues['ReturnPerWeekUSDDisplay'] =
                cccUtil.convertValueToDisplay('$', $scope.generatedValues[
                        'ReturnPerDayUSD'] * 7, $filter('number'),
                    'short');
            $scope.generatedValues['ReturnPerMonthUSDDisplay'] =
                cccUtil.convertValueToDisplay('$', $scope.generatedValues[
                        'ReturnPerDayUSD'] * 30, $filter('number'),
                    'short');
            $scope.generatedValues['ReturnPerYearUSDDisplay'] =
                cccUtil.convertValueToDisplay('$', $scope.generatedValues[
                        'ReturnPerDayUSD'] * 365, $filter('number'),
                    'short');
            $location.search('HashingPower', $scope.currentData.HashingPower);
            $location.search('HashingUnit', $scope.currentData.HashingUnit);
            $location.search('PowerConsumption', $scope.currentData
                .PowerConsumption);
            $location.search('CostPerkWh', $scope.currentData.CostPerkWh);
            cccLocalStorage.setItem('calculator_' + $scope.currentCoinData
                .Symbol, JSON.stringify($scope.currentData));
        };
        $scope.getTabDefaultsFromLocalStoarge = function() {
            for (var i = 0, length = $scope.acceptedTabs.length; i <
                length; i++) {
                var currentTabInArray = $scope.acceptedTabs[i];
                var localStorageCurrentTab = cccLocalStorage.getText(
                    'calculator_' + currentTabInArray.Symbol);
                if (localStorageCurrentTab != "" &&
                    localStorageCurrentTab != null) {
                    try {
                        var defaults = JSON.parse(
                            localStorageCurrentTab);
                        currentTabInArray.Defaults = defaults;
                    } catch (ex) {}
                }
            }
        };
        $scope.acceptedTabs = cccMiningData.getMiningCalculatorTabs();
        $scope.getTabDefaultsFromLocalStoarge();
        $scope.currentTab = "";
        $scope.currentTabObject = $scope.acceptedTabs[0];
        $scope.isActive = function(tabname) {
            return tabname == $scope.currentTab;
        };
        $scope.$root.$on('$stateChangeSuccess', function(event, toState,
            toParams, fromState, fromParams) {
            var tabExists = false;
            for (var i = 0, length = $scope.acceptedTabs.length; i <
                length; i++) {
                if ($scope.acceptedTabs[i].Id == toParams.tabname) {
                    tabExists = true;
                    $scope.currentTab = toParams.tabname;
                    $scope.currentTabObject = $scope.acceptedTabs[
                        i];
                    if (toParams.HashingPower != undefined) {
                        $scope.currentTabObject.Defaults.HashingPower =
                            toParams.HashingPower;
                    }
                    if (toParams.HashingUnit != undefined) {
                        $scope.currentTabObject.Defaults.HashingUnit =
                            toParams.HashingUnit;
                    }
                    if (toParams.PowerConsumption != undefined) {
                        $scope.currentTabObject.Defaults.PowerConsumption =
                            toParams.PowerConsumption;
                    }
                    if (toParams.CostPerkWh != undefined) {
                        $scope.currentTabObject.Defaults.CostPerkWh =
                            toParams.CostPerkWh;
                    }
                    $scope.currentData = $scope.currentTabObject
                        .Defaults;
                    $scope.currentCoinData = cccMiningData.getCoinData(
                        $scope.currentTabObject.Symbol);
                    pageInfo.setSEOTitle($scope.currentTabObject
                        .Title);
                    pageInfo.setSEODescription($scope.currentTabObject
                        .Description);
                    $scope.generateValues();
                }
            }
            if (!tabExists) {
                $state.go("tab", {
                    tabname: $scope.acceptedTabs[0].Id
                });
            }
        });
    }
]);
angular.module('ccc-app').controller('miningFilterCtrl', ['$scope',
    'miningData',
    function($scope, miningData) {
        $scope.allData = miningData;
    }
]);
angular.module('ccc-app').controller('miningSorterCtrl', ['$scope',
    'miningData',
    function($scope, miningData) {
        $scope.allData = miningData;
    }
]);
angular.module('ccc-app').controller('miningPaybackPeriodCtrl', ['$scope',
    '$filter', 'pageInfo', 'cccMiningData',
    function($scope, $filter, pageInfo, cccMiningData) {
        $scope.currentMiningData = cccMiningData.getMiningDataById(
            pageInfo.getPageId());
    }
]);
angular.module('ccc-app').controller('miningSummaryCtrl', ['$scope', 'pageInfo',
    'cccMiningData',
    function($scope, pageInfo, cccMiningData) {
        $scope.currentMiningData = cccMiningData.getMiningDataById(
            pageInfo.getPageId());
        $scope.hasData = true;
        if ($scope.currentMiningData == "") {
            $scope.hasData = false;
        }
    }
]);
angular.module('ccc-app').controller('miningContractDisclosureCtrl', ['$scope',
    'pageInfo', 'cccMiningData',
    function($scope, pageInfo, cccMiningData) {
        $scope.currentMiningData = cccMiningData.getMiningDataById(
            pageInfo.getPageId());
        $scope.currentCoinData = {};
        $scope.hasData = true;
        if ($scope.currentMiningData == "") {
            $scope.hasData = false;
        } else {
            $scope.currentCoinData = cccMiningData.getCoinData($scope.currentMiningData[
                "CurrenciesAvailable"]);
        }
    }
]);
angular.module('ccc-app').controller('miningEquipmentDisclosureCtrl', ['$scope',
    'pageInfo', 'cccMiningData',
    function($scope, pageInfo, cccMiningData) {
        $scope.currentMiningData = cccMiningData.getMiningDataById(
            pageInfo.getPageId());
        $scope.cccMiningData = cccMiningData;
        $scope.currentCoinData = {};
        $scope.hasData = true;
        if ($scope.currentMiningData == "") {
            $scope.hasData = false;
        } else {
            $scope.currentCoinData = cccMiningData.getCoinData($scope.currentMiningData[
                "CurrenciesAvailable"]);
        }
    }
]);
angular.module('ccc-app').controller('miningPoolSummaryCtrl', ['$scope',
    '$filter', 'pageInfo', 'cccMiningData',
    function($scope, $filter, pageInfo, cccMiningData) {
        $scope.currentMiningPoolData = cccMiningData.getMiningDataById(
            pageInfo.getPageId());
    }
]);;;;
angular.module('ccc-app').directive('miningList', function() {
    return {
        restrict: 'E',
        templateUrl: 'lists/mining-list.html',
        controller: 'miningListCtrl',
        scope: {},
        link: function(scope, element, attrs) {}
    };
});
angular.module('ccc-app').directive('miningFilter', function() {
    return {
        restrict: 'E',
        templateUrl: 'lists/list-filter.html',
        controller: 'miningFilterCtrl',
        scope: {},
        link: function(scope, element, attrs) {}
    };
});
angular.module('ccc-app').directive('miningSorter', function() {
    return {
        restrict: 'E',
        templateUrl: 'lists/list-sorter.html',
        controller: 'miningSorterCtrl',
        scope: {},
        link: function(scope, element, attrs) {}
    };
});
angular.module('ccc-app').directive('miningPaybackPeriod', function() {
    return {
        restrict: 'E',
        templateUrl: 'mining/payback-period.html',
        controller: 'miningPaybackPeriodCtrl',
        scope: {},
        link: function(scope, element, attrs) {}
    };
});
angular.module('ccc-app').directive('miningContractSummary', function() {
    return {
        restrict: 'E',
        templateUrl: 'mining/contract-summary.html',
        controller: 'miningSummaryCtrl',
        scope: {},
        link: function(scope, element, attrs) {}
    };
});
angular.module('ccc-app').directive('miningEquipmentSummary', function() {
    return {
        restrict: 'E',
        templateUrl: 'mining/equipment-summary.html',
        controller: 'miningSummaryCtrl',
        scope: {},
        link: function(scope, element, attrs) {}
    };
});
angular.module('ccc-app').directive('miningContractDisclosure', function() {
    return {
        restrict: 'E',
        templateUrl: 'mining/contract-disclosure.html',
        controller: 'miningContractDisclosureCtrl',
        scope: {},
        link: function(scope, element, attrs) {}
    };
});
angular.module('ccc-app').directive('miningEquipmentDisclosure', function() {
    return {
        restrict: 'E',
        templateUrl: 'mining/equipment-disclosure.html',
        controller: 'miningEquipmentDisclosureCtrl',
        scope: {},
        link: function(scope, element, attrs) {}
    };
});
angular.module('ccc-app').directive('miningCalculator', function() {
    return {
        restrict: 'E',
        templateUrl: 'mining/mining-calculator.html',
        controller: 'miningCalculatorCtrl',
        scope: {},
        link: function(scope, element, attrs) {}
    };
});
angular.module('ccc-app').directive('miningPoolSummary', function() {
    return {
        restrict: 'E',
        templateUrl: 'mining/pool-summary.html',
        controller: 'miningPoolSummaryCtrl',
        scope: {},
        link: function(scope, element, attrs) {}
    };
});;;;
